{"version":3,"sources":["webpack:///static/js/vendor.998d3c537521938d0f50.js","webpack:///./~/immediate/lib/browser.js","webpack:///./~/argsarray/index.js","webpack:///./~/debug/browser.js","webpack:///./~/debug/debug.js","webpack:///./~/debug/~/ms/index.js","webpack:///./~/events/events.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/lie/lib/browser.js","webpack:///./~/pouchdb/lib/index-browser.js","webpack:///./~/process/browser.js","webpack:///./~/scope-eval/scope_eval.js","webpack:///./~/spark-md5/spark-md5.js","webpack:///./~/vue-router/dist/vue-router.common.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./~/vuvuzela/index.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js"],"names":["webpackJsonp","module","exports","global","nextTick","draining","i","oldQueue","len","queue","length","immediate","task","push","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","called","observer","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","call","this","argsArray","fun","arguments","args","__webpack_require__","process","useColors","style","window","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","namespace","humanize","diff","c","color","concat","Array","prototype","slice","index","lastC","replace","splice","log","Function","apply","save","namespaces","storage","removeItem","debug","e","load","r","NODE_ENV","DEBUG","localstorage","localStorage","chrome","local","colors","formatters","j","v","JSON","stringify","enable","selectColor","prevColor","disabled","enabled","self","curr","Date","ms","prevTime","prev","coerce","format","formatter","val","logFn","bind","fn","split","skips","substr","names","disable","name","test","Error","stack","message","parse","str","String","exec","n","parseFloat","type","y","d","h","m","s","fmtShort","Math","round","fmtLong","plural","floor","ceil","options","isNaN","long","EventEmitter","_events","_maxListeners","undefined","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","TypeError","emit","er","handler","listeners","error","err","context","addListener","listener","newListener","warned","trace","on","once","g","removeListener","fired","list","position","removeAllListeners","key","ret","listenerCount","evlistener","emitter","Object","create","ctor","superCtor","super_","constructor","value","enumerable","writable","configurable","TempCtor","INTERNAL","Promise","resolver","state","PENDING","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","handlers","reject","resolve","getThen","obj","then","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","allResolver","resolveFromAll","outValue","values","resolved","toString","race","response","REJECTED","FULFILLED","_interopDefault","ex","isBinaryObject","object","ArrayBuffer","Blob","cloneArrayBuffer","buff","target","byteLength","targetArray","Uint8Array","sourceArray","set","cloneBinaryObject","size","webkitSlice","isPlainObject","proto","getPrototypeOf","Ctor","funcToString","objectCtorString","clone","newObject","isArray","toISOString","hasOwnProperty","getArguments","toPromise","usedCB","pop","PouchPromise","fulfill","resp","callback","mesg","adapterFun","logApiCall","logArgs","origCallback","res","responseArgs","_closed","_destroyed","taskqueue","isReady","addTask","failed","pick","arr","prop","mangle","unmangle","substring","_Map","_store","_Set","array","add","identityFunction","x","formatResultForOpenRevsGet","ok","bulkGet","db","opts","collapseResultsAndFinish","results","perDocResults","forEach","docs","info","id","checkDone","numDone","numDocs","gotResult","docIndex","nextBatch","allRequests","upTo","min","MAX_NUM_CONCURRENT_REQUESTS","batch","processBatch","offset","docId","docIdx","docRequests","requestsById","get","docOpts","open_revs","map","request","rev","filter","formatResult","param","requests","has","isChromeApp","hasLocalStorage","hasLocal","attachBrowserEvents","onChanged","db_name","dbName","newValue","addEventListener","attachEvent","Changes","events","_listeners","guardedConsole","method","randomNumber","max","maxTimeout","ratio","random","range","defaultBackOff","explainError","extend$1","sources","each","source","PouchError","createError","CustomPouchError","p","generateErrorFromResponse","UNKNOWN_ERROR","tryFilter","doc","req","msg","BAD_REQUEST","filterChange","hasFilter","query","query_params","change","filterReturn","include_docs","attachments","att","_attachments","stub","flatten","arrs","invalidIdError","INVALID_ID","RESERVED_ID","MISSING_ID","ee","parseDesignDocFunctionName","parts","normalizeDesignDocFunctionName","normalized","join","parseUri","parser","uri","keys","encoded","indexOf","decodeURIComponent","qName","qParser","$0","$2","upsert","diffFun","docRev","_rev","newDoc","_id","tryAndPut","updated","put","getValue","radix","uuid","chars","winningRev","metadata","winningId","winningPos","winningDeleted","node","toVisit","rev_tree","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","a","b","collectLeaves","leaves","isLeaf","acc","sort","reverse","collectConflicts","win","conflicts","leaf","compactTree","revHash","rootToLeaf","paths","history","sortByPos$1","binarySearch","item","comparator","mid","low","high","insertSorted","idx","pathToTree","path","numStemmed","root","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","stem","depth","maybeStem","stemmed","stemmedNode","merge","newTree","stemmedRevs","revExists","splitRev","targetPos","targetId","getTrees","isDeleted","isLocalId","latest","historyNode","historyRev","l","evalFilter","input","scopedEval","evalView","code","tryCatchInChangeListener","Changes$1","onDestroy","cancel","complete","onChange","isCancelled","doChanges","processChange","changeList","changes","_conflicts","compare","left","right","yankError","cleanDocs","_deleted","atts","compareByIdThenRev","idCompare","aStart","_revisions","start","bStart","computeHeight","height","edges","prnt","from","to","edge","allDocsKeysQuery","api","skip","limit","descending","_allDocs","finalResults","subOpts","optKey","total_rows","rows","doNextCompaction","_compactionQueue","catch","last_seq","_compact","shift","attachmentNameError","charAt","AbstractPouchDB","TaskQueue","parseAdapter","adapter","adapters","PouchDB","preferredAdapters","prefix","adapterName","usePrefix","use_prefix","prepareForDestruction","onDestroyed","onClosed","onConstructorDestroyed","destructionListeners","delete","_destructionListeners","__opts","auto_compaction","prefixedName","backend","_adapter","valid","fail","ready","setUpEventEmitter","Pouch","eventEmitter","destructListeners","toObject","reduce","parseRevisionInfo","INVALID_REV","makeRevTreeFromRevisions","revisions","revisionIds","parseDoc","newEdits","nRevNum","newRevId","revInfo","_rev_tree","specialKey","reservedWords","DOC_VALIDATION","dataWords","createBlob","properties","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","binaryStringToArrayBuffer","bin","buf","charCodeAt","binStringToBluffer","binString","b64ToBluffer","b64","atob$1","arrayBufferToBinaryString","buffer","binary","bytes","fromCharCode","readAsBinaryString","blob","FileReader","FileReaderSync","readAsArrayBuffer","reader","hasBinaryString","onloadend","blobToBinaryString","blobOrBuffer","blobToBase64","base64","btoa$1","rawToBase64","raw","sliceBlob","end","appendBlob","arrayBuffer","appendString","string","appendBinary","binaryMd5","next","setImmediateShim","loadNextChunk","done","destroy","currentChunk","chunkSize","chunks","inputIsString","MD5_CHUNK_SIZE","Md5","stringMd5","hash","parseBase64","BAD_ARG","preprocessString","blobType","asBinary","content_type","digest","preprocessBlob","md5","preprocessAttachment","preprocessAttachments","docInfos","docv","overallErr","docInfo","processedAttachment","recv","updateDoc","revLimit","cb","writeDoc","previousWinningRev","previouslyDeleted","isRoot","inConflict","REV_CONFLICT","newRev","rev_map","newRevIsDeleted","winningRev$$","winningRevIsDeleted","delta","rootIsMissing","processDocs","fetchedDocs","tx","overallCallback","insertDoc","resultsIdx","MISSING_DOC","checkAllDocsDone","docsDone","docsToDo","new_edits","idsToDocs","currentDoc","docWritten","nextDoc","safeJsonParse","vuvuzela","safeJsonStringify","json","idbError","evt","IDB_ERROR","encodeMetadata","deletedOrLocal","seq","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","body","asBlob","fetchAttachmentsIfNecessary","txn","fetchAttachment","attObj","objectStore","ATTACH_STORE","onsuccess","postProcessAttachments","row","attNames","compactRevs","count","deleteOrphanedAttachments","possiblyOrphanedDigests","countReq","attAndSeqStore","IDBKeyRange","bound","attStore","seqStore","BY_SEQ_STORE","ATTACH_AND_SEQ_STORE","getKey","cursor","openCursor","only","event","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","dbOpts","idbChanges","startTransaction","DOC_STORE","LOCAL_STORE","txnResult","onabort","ontimeout","oncomplete","docStore","bySeqStore","attachStore","attachAndSeqStore","verifyAttachments","preconditionErrored","fetchExistingDocs","idbProcessDocs","revs_limit","numFetched","readMetadata","notify","_meta","docCount","docCountDelta","verifyAttachment","MISSING_STUB","finish","digests","filename","attErr","isUpdate","hasAttachments","writeAttachments","finishDoc","afterPutDoc","revsToDelete","metadataToStore","metaDataReq","afterPutMetadata","afterPutDocError","preventDefault","stopPropagation","getKeyReq","putReq","insertAttachmentMappings","onerror","collectResults","attachmentSaved","revpos","saveAttachment","attsAdded","attsToAdd","newAtt","docInfoError","blobSupport","createKeyRange","inclusiveEnd","upperBound","lowerBound","handleKeyRangeError","idbAllDocs","allDocsQuery","fetchDocAsynchronously","docIdRevIndex","allDocsInner","onGetCursor","onResultsReady","onTxnComplete","startkey","endkey","inclusive_end","keyRange","allDocs","checkBlobSupport","DETECT_BLOB_SUPPORT_STORE","matchedChrome","matchedEdge","tryCode","applyNext","running","enqueueTask","action","IdbPouch","thisCallback","init","createSchema","createObjectStore","keyPath","autoIncrement","createIndex","unique","META_STORE","addDeletedOrLocalIndex","createLocalStoreSchema","migrateLocalStore","localStore","docIdRev","seqCursor","addAttachAndSeqStore","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","fetchMetadataSeq","metadataSeq","onGetMetadataSeq","instanceId","_bulkDocs","reqOpts","_get","_getAttachment","attachId","attachment","blobData","_info","cachedDBs","updateSeq","doc_count","update_seq","idb_attachment_format","_changes","onGetMetadata","lastSeq","onGetWinningDoc","fetchWinningDoc","winningDoc","filtered","numResults","returnDocs","docIds","docIdsToMetadata","fetchChanges","objectStores","since","continuous","doc_ids","return_docs","_close","NOT_OPEN","close","_getRevisionTree","_doCompaction","_getLocal","_putLocal","oldRev","oStore","oldDoc","_removeLocal","_destroy","openReq","openReqList","indexedDB","deleteDatabase","cached","tryStorageOption","open","ADAPTER_VERSION","onupgradeneeded","migration","migrations","oldVersion","currentTarget","onversionchange","checkSetupComplete","meta","blobSupportPromise","version","IDBPouch","decodeUtf8","escape","hexToInt","charCode","parseHexUtf8","parseHexUtf16","parseHexString","encoding","quote","escapeBlob","unescapeBlob","stringifyDoc","unstringifyDoc","qMarks","num","select","selector","joiner","where","orderBy","compactRevs$1","deleteOrphans","seqs","sql","ATTACH_AND_SEQ_STORE$1","executeSql","digestsToCheck","nonOrphanedDigests","ATTACH_STORE$1","BY_SEQ_STORE$1","websqlError","errorNameMatch","errorName","errorReason","WSQ_ERROR","getSize","isAndroid","websqlBulkDocs","websqlChanges","_name","_docCount","cnt","sqlArgs","deletedInt","insertId","dataWritten","fetchSql","attachmentErr","revsToCompact","DOC_STORE$1","metadataStr","params","websqlProcessDocs","userDocs","docInfoErrors","openDatabaseWithOpts","websql","description","openDBSafely","openDB$1","cachedResult","cachedDatabases","fetchAttachmentsIfNecessary$1","attOpts","_","WebSqlPouch$1","dbCreated","runMigration2","DOC_STORE_WINNINGSEQ_INDEX_SQL","BY_SEQ_STORE_DELETED_INDEX_SQL","runMigration3","LOCAL_STORE$1","doNext","runMigration4","updateRows","doc_id_rev","hex","doc_id","BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL","runMigration5","nextPage","SELECT_DOCS","DOC_STORE_AND_BY_SEQ_JOINER","pageSize","addDigestSeq","digestSeqs","digestSeqPairs","pair","attachAndRev","ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL","ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL","runMigration6","runMigration7","checkEncoding","onGetInstanceId","idRequests","idCallback","onGetVersion","dbVersion","META_STORE$1","attach","initSeq","initSeqArgs","ADAPTER_VERSION$1","setupDone","migrated","dbid","tasks","nextMigration","setup","fetchVersion","db_version","latest$$","countDocs","websqlOpts","POUCH_VERSION","openDBResult","readTransaction","websql_encoding","latestRev","missingErr","deletedErr","totalRows","criteria","selectStmt","view","reportChange","maxSeq","escaped","putLocal","rowsAffected","removeLocal","store","canOpenTestDB","openDatabase","isValidWebSQL","hasLS","localStorageKey","openedTestDB","openDB","WebSQLPouch","_opts","WebSqlPouch","wrappedFetch","wrappedPromise","fetch","fetchRequest","timer","headers","Headers","fetchOptions","credentials","processData","url","timeout","fetchResponse","statusCode","clearTimeout","text","abort","xhRequest","xhr","timedout","abortReq","cleanUp","timeoutReq","onprogress","upload","XMLHttpRequest","withCredentials","Accept","responseType","setRequestHeader","readyState","getResponseHeader","responseText","send","testXhr","ajax$1","hasXhr","defaultBody","ajaxCore","missing","res$2","defaultOptions","cache","ajax","ua","isSafari","isIE","isEdge","shouldCacheBust","isBlobUrl","hasArgs","now","pool","promiseFactories","runNext","current","runNextBatch","thisErr","readAttachmentsAsBlobOrBuffer","encodeDocId","encodeURIComponent","preprocessAttachments$1","hasUrlPrefix","protocol","getHost","user","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","k","HttpPouch","ajax$$","userOpts","reqAjax","ajaxOpts","log$1","_ajax","ajaxPromise","adapterFun$$","skipSetup","skip_setup","setupPromise","checkExists","dbUrl","encodeAttachmentId","attachmentId","nAuth","token","unescape","Authorization","compact","ping","compact_running","interval","doBulkGet","doBulkGetShim","onResult","batchNum","numBatches","batchSize","MAX_SIMULTANEOUS_REVS","supportsBulkGet","supportsBulkGetMap","fetchAttachments","filenames","fetchAllAttachments","docOrDocs","revs_info","remove","docOrId","optsOrRev","getAttachment","removeAttachment","putAttachment","Content-Type","_put","start_key","end_key","paramStr","batch_size","CHANGES_BATCH_SIZE","leftToFetch","feed","heartbeat","param_name","lastFetchedSeq","aborted","xhrOpts","fetched","raw_results_length","finished","revsDiff","HttpPouch$1","pad","padWith","upToLength","padding","targetLength","padLeft","collate","normalizeKey","ai","collationIndex","bi","stringCollate","arrayCollate","objectCollate","Infinity","origKey","toJSON","indexify","numToIndexableString","toIndexableString","objKey","zero","SEP","parseNumber","originalIdx","neg","numAsString","magAsString","MAGNITUDE_DIGITS","magnitude","MIN_MAGNITUDE","ch","metaStack","lastMetaElement","lastElementIndex","parseIndexableString","parsedNum","parsedStr","arrayElement","objElement","ak","bk","expFormat","toExponential","magForComparison","magString","factor","abs","factorStr","toFixed","TaskQueue$1","createView","cachedViews","sourceDB","viewName","mapFun","reduceFun","temporary","viewSignature","_cachedViews","promiseForView","diffFunction","views","fullViewName","depDbs","depDbName","registerDependentDatabase","lastSeqDoc","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","createBuiltInError","sum","jLen","jNum","evalFunctionWithEval","log$2","parseViewName","isGenOne","emitError","tryCode$1","output","sortByKeyThenValue","keyCompare","sliceResults","rowToDocId","readAttachmentsAsBlobOrBuffer$1","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","Number","coerceOptions","group_level","checkPositiveInteger","number","checkQueryParseError","startkeyName","endkeyName","group","optionName","httpQuery","MAX_URL_LENGTH","keysAsString","customQuery","_query","customViewCleanup","_viewCleanup","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","getMetaDoc","defaultMetaDoc","metaDocId","getKeyValueDocs","metaDoc","processKvDocs","kvDocsRes","kvDocs","oldKeysMap","indexableKeysToKeyValues","keyValue","newKeys","kvDoc","uniq","docData","saveKeyValues","seqDocId","listOfDocsToPersist","docsToPersist","bulkDocs","getQueue","persistentQueues","updateView","sequentialize","updateViewInQueue","mapResults","origMap","currentSeq","processNextBatch","CHANGES_BATCH_SIZE$1","lastKey","jl","complexKey","indexableKey","reduceView","shouldGroup","builtInReduce","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","queryView","queryViewInQueue","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","onMapResultsReady","shouldReduce","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","httpViewCleanup","localViewCleanup","docsToViews","designDocName","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","dbsToDelete","destroyPromises","queryPromised","createViewOpts","tempViewQueue","cleanup","fin","stale","isGenOne$1","fileHasChanged","localDoc","remoteDoc","getDocAttachments","getDocAttachmentsFromTargetOrSource","src","doCheckForLocalAttachments","createBulkGetOpts","diffs","missingRevs","missingRev","getDocs","getAllDocs","bulkGetOpts","bulkGetResponse","cancelled","bulkGetInfo","resultDocs","Boolean","hasConflicts","fetchRevisionOneDocs","getRevisionOneDocs","returnResult","updateCheckpoint","checkpoint","session","session_id","replicator","REPLICATOR","CHECKPOINT_VERSION","unshift","CHECKPOINT_HISTORY_SIZE","Checkpointer","compareReplicationLogs","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","LOWEST_SEQ","sourceId","hasSessionId","sessionId","props","rest","isForbiddenError","backOff","retry","back_off_function","backOffSet","current_back_off","STARTING_BACK_OFF","removeBackOffSetter","sortObjectPropertiesByKey","queryParams","generateReplicationId","filterFun","filterViewName","queryData","md5sum","replicate$1","initCheckpointer","checkpointer","repId","writeDocs","changedDocs","currentBatch","bulkOpts","completeReplication","errorsById","errorsNo","doc_write_failures","docs_written","errors","finishBatch","outResult","writingCheckpoint","writeCheckpoint","getChanges","onCheckpointError","getDiffs","getBatchDocs","got","docs_read","startNextBatch","batches","processPendingBatch","abortReplication","pendingBatch","changesOpts","live","changesCompleted","replicationCompleted","fatalError","end_time","onChangesComplete","changesPending","onChangesError","abortChanges","batches_limit","_abortChanges","startChanges","getCheckpoint","start_time","_addedListeners","Replication","toPouch","PouchConstructor","replicate","replicateRet","srcPouch","targetPouch","sync","Sync","pullChange","direction","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","removeAll","isChange","isDenied","isPaused","isActive","removed","addOneListener","canceled","optsPush","optsPull","pull","success","replication","defineProperty","other","lie","inherits","mangled","setItem","getItem","eventFunction","inprogress","notifyLocalWindows","MISSING_BULK_DOCS","QUERY_PARSE_ERROR","NOT_AN_OBJECT","filterChanges","newPromise","ddoc","filterName","filters","post","createAttachment","prevrevpos","was_delete","addToMissing","revId","processDoc","missingForId","missingObj","compactDocument","maxHeight","revTree","candidates","promises","onComplete","finishOpenRevs","existing","splittedRev","revNo","currentPath","hashIndex","hashFoundAtRevPos","indexOfRev","howMany","_revs_info","incompatibleOpt","_type","attachmentError","dependentDb","dependentDbs","depDB","destroyDb","deletedMap","trueName","execute","addToPreferredAdapters","plugin","defaults","defaultOpts","PouchAlt","__defaults","atob","btoa","platform","promiseFactory","promisedCallback","callbackify","finalPromiseFactory","that","_sum","_count","_stats","sumsqr","_sumsqr","viewCleanup","mapreduce","updateTarget","updateSource","readOnlySource","comparisons","targetDoc","sourceDoc","1","_readyCalled","defaultSetTimout","defaultClearTimeout","runTimeout","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","currentQueue","queueIndex","drainQueue","run","Item","noop","title","browser","env","argv","versions","off","binding","cwd","chdir","dir","umask","hasProp","scope","factory","md5cycle","md5blk","md5blks","md5blk_array","md51","tail","tmp","lo","hi","md51_array","subarray","rhex","hex_chr","toUtf8","utf8Str2ArrayBuffer","returnUInt8Array","arrayBuffer2Utf8Str","concatenateArrayBuffers","first","second","hexToBinaryString","SparkMD5","reset","add32","lsw","msw","clamp","begin","contents","_buff","_length","_hash","_finish","getState","setState","hashBinary","content","warn","condition","resolveQuery","extraQuery","parsedQuery","parseQuery","trim","decode","stringifyQuery","encode","val2","createRoute","record","location","redirectedFrom","route","fullPath","getFullPath","matched","formatMatch","freeze","ref","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","every","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","getAttribute","findAnchor","children","child","tag","install","Vue","installed","_Vue","$root","_router","_route","mixin","beforeCreate","$options","router","util","defineReactive","component","View","Link","strats","config","optionMergeStrategies","beforeRouteEnter","beforeRouteLeave","created","resolvePath","relative","base","segments","segment","parsePath","queryIndex","cleanPath","createRouteMap","routes","pathMap","nameMap","addRouteRecord","matchAs","normalizePath","components","default","instances","redirect","beforeEnter","alias","tokens","defaultDelimiter","delimiter","PATH_REGEXP","capture","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","compile","tokensToFunction","encodeURIComponentPretty","encodeURI","toUpperCase","encodeAsterisk","matches","pretty","isarray","attachKeys","re","flags","sensitive","regexpToRegexp","arrayToRegexp","pathToRegexp","regexp","stringToRegexp","tokensToRegExp","strict","endsWithDelimiter","getRouteRegex","hit","regexpCache","fillParams","routeMsg","filler","regexpCompileCache","normalizeLocation","_normalized","assign","rawPath","parsedPath","basePath","createMatcher","currentRoute","paramNames","_createRoute","matchRoute","originalRedirect","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","pathname","runQueue","step","normalizeBase","inBrowser","baseEl","querySelector","resolveQueue","activated","deactivated","extractGuard","def","extend","extractLeaveGuards","flatMapComponents","instance","guard","wrapLeaveGuard","extractEnterGuards","cbs","isValid","wrapEnterGuard","poll","resolveAsyncComponents","resolvedDef","saveScrollPosition","positionStore","pageXOffset","pageYOffset","getScrollPosition","getElementPosition","docRect","getBoundingClientRect","elRect","top","isValidPosition","normalizePosition","getLocation","search","pushState","replaceState","_key","genKey","ensureSlash","getHash","replaceHash","href","pushHash","createHref","functional","render","routerView","$route","_routerViewCache","inactive","$vnode","_inactive","$parent","routerViewDepth","hooks","hook","vnode","prepatch","oldVnode","toTypes","required","exact","activeClass","this$1","$router","normalizedTo","classes","linkActiveClass","compareTarget","click","class","attrs","$slots","isStatic","aData","aAttrs","__moduleExports","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsHistory","History","pending","listen","transitionTo","onAbort","confirmTransition","updateRoute","ensureURL","beforeHooks","iterator","postEnterCbs","enterGuards","app","$nextTick","afterHooks","HTML5History","expectScroll","scrollBehavior","handleScroll","__proto__","go","isPop","behavior","shouldScroll","scrollTo","HashHistory","fallback","checkFallback","onHashChange","AbstractHistory","targetIndex","VueRouter","prototypeAccessors","setupHashListener","beforeEach","afterEach","back","forward","getMatchedComponents","defineProperties","use","_toString","toNumber","makeMap","expectsLowerCase","remove$1","hasOwn","isPrimitive","bind$1","boundFn","toArray","_from","OBJECT_STRING","genStaticKeys","modules","staticKeys","looseEqual","looseIndexOf","isReserved","bailRE","isNative","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","copyAugment","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","defineReactive$$1","customSetter","dep","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","dependArray","newVal","set$1","vmCount","del","mergeData","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","camelize","normalizeDirectives","dirs","directives","update","mergeOptions","vm","mergeField","strat","defaultStrat","extendsFrom","extends","mixins","Vue$3","resolveAsset","warnMissing","assets","capitalize","validateProp","propOptions","propsData","absent","isBooleanType","hyphenate","getPropDefaultValue","prevShouldConvert","getType","resetSchedulerState","has$1","waiting","flushing","flushSchedulerQueue","watcher","devtools","queueWatcher","traverse","seenObjects","clear","_traverse","seen","isA","depId","initState","_watchers","initProps","initMethods","initData","initComputed","initWatch","_propKeys","loop","_data","proxy","computed","userDef","computedSharedDefinition","makeComputedGetter","owner","Watcher","lazy","dirty","evaluate","methods","watch","createWatcher","$watch","stateMixin","dataDef","$set","$delete","expOrFn","teardown","cloneVNode","cloned","VNode","elm","ns","componentOptions","isCloned","cloneVNodes","vnodes","mergeVNodeHook","hookKey","injectedHash","__injected","oldHook","updateListeners","oldOn","remove$$1","cur","old","invoker","arrInvoker","fnInvoker","ev","arguments$1","single","o","normalizeChildren","nestedIndex","createTextVNode","applyNS","getFirstComponentChild","initLifecycle","abstract","$children","$refs","_watcher","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_mount","hydrating","$el","emptyVNode","callHook","_update","_render","prevEl","prevVnode","_vnode","prevActiveInstance","activeInstance","__patch__","_parentElm","_refElm","__vue__","_updateFromParent","parentVnode","renderChildren","hasChildren","_renderChildren","_parentVnode","propKeys","oldListeners","_parentListeners","_updateListeners","resolveSlots","$forceUpdate","$destroy","$off","$emit","createComponent","baseCtor","_base","cid","resolveAsyncComponent","resolveConstructorOptions","extractProps","createFunctionalComponent","nativeOn","mergeHooks","_self","slots","functionalContext","slot","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","inlineTemplate","staticRenderFns","$mount","keepAlive","mountedNode","insert","destroy$1","requested","pendingCallbacks","domProps","altKey","checkProp","preserve","hooksToMerge","fromParent","ours","mergeHook$1","one","two","_createElement","scopedSlots","getTagNamespace","isReservedTag","childNs","initRender","_staticTrees","renderContext","$scopedSlots","$createElement","renderMixin","markStatic","isOnce","markStaticNode","_renderProxy","errorHandler","_h","_s","_n","_e","_q","_i","_m","isInFor","_o","identity","_f","_l","_t","scopedSlotFn","slotNodes","_b","asProp","mustUseProp","_k","eventKeyCode","builtInAlias","keyCodes","defaultSlot","isComment","initEvents","$once","$on","eventsMixin","initMixin","_init","_uid","uid","initInternalComponent","super","superOptions","cachedSuperOptions","extendOptions","_scopeId","initUse","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","_assetTypes","initAssetRegisters","definition","initGlobalAPI","configDef","builtInComponents","genClassForVnode","childNode","mergeClassData","genClassFromData","staticClass","dynamicClass","stringifyClass","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","createElement$1","tagName","setAttribute","createElementNS","namespaceMap","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","textContent","childNodes","registerRef","isRemoval","refs","refInFor","isUndef","isDef","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","emptyNodeAt","nodeOps","createRmCb","childElm","removeElement","createElm","insertedVnodeQueue","nested","isRootInsert","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","innerNode","transition","activate","emptyNode","isPatchable","i$1","pendingInsert","addVnodes","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","hasData","postpatch","invokeInsertHook","initial","hydrate","childrenMatch","hooks$1","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","ancestor","updateDirectives","oldDir","isCreate","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","updateDOMListeners","_v_add","oldHandler","_v_remove","removeEventListener","updateDOMProps","oldProps","_value","strCur","composing","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","oldStyle","newStyle","setProp","addClass","classList","removeClass","tar","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","styles","getComputedStyle","transitioneDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","_leaveCb","resolveTransition","_enterCb","css","enterClass","enterActiveClass","appearClass","appearActiveClass","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","expectsCSS","isIE9","userWantsControl","show","pendingNode","_pending","leave","performLeave","beforeLeave","leaveClass","leaveActiveClass","afterLeave","leaveCancelled","delayLeave","def$$1","autoCssTransition","_enter","setSelected","isMultiple","multiple","selected","option","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","comp","key$1","placeholder","rawChild","hasParentTransition","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","dx","dy","moved","transform","WebkitTransform","transitionDuration","shouldDecode","div","innerHTML","html","decoder","decodeAttr","shouldDecodeNewlines","nlRE","ltRE","gtRE","ampRE","quoteRE","parseHTML","advance","parseStartTag","startTagOpen","attr","startTagClose","attribute","unarySlash","handleStartTag","expectHTML","lastTag","isNonPhrasingTag","parseEndTag","canBeLeftOpenTag","unary","isUnaryTag$$1","IS_REGEX_CAPTURING_BROKEN","needle","isUnaryTag","no","isSpecialTag","sfc","stackedTag","reStackedTag","reCache","endTagLength","endTag","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","rest$1","parseFilters","exp","pushFilter","lastFilterIndex","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","wrapFilter","parseText","delimiters","tagRE","buildRegex","defaultTagRE","lastIndex","baseWarn","pluckModuleFunction","addProp","addAttr","addDirective","addHandler","important","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","parseModel","index$1","expressionPos","expressionEndPos","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","template","warn$1","platformGetTagNamespace","platformMustUseProp","platformIsPreTag","isPreTag","preTransforms","transforms","postTransforms","currentParent","preserveWhitespace","inVPre","inPre","checkRootConstraints","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","pre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","isPlatformReservedTag","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","modifierCode","genKeyFilter","handlerCode","simplePathRE","fnExpRE","genFilterCode","keyVal","bind$2","wrapData","generate","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$2","transforms$1","dataGenFns","platformDirectives$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","genNode","genText","transformSpecialNewlines","componentName","compile$1","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","model$1","_warn","warn$3","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","genAssignmentCode","needCompositionGuard","valueExpression","assignment","modelRs","compile$$1","baseOptions","compileToFunctions","compiled","makeFunction","getOuterHTML","outerHTML","container","cloneNode","_isServer","camelizeRE","hyphenateRE","silent","ignoredElements","_lifecycleHooks","_maxUpdateCount","hasProto","UA","isIOS","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","nextTickHandler","copies","callbacks","timerFunc","logError","counter","textNode","_resolve","Set","formatComponentName","uid$1","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","original","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","augment","walk","items","instanceData","defaultData","uid$2","deep","active","deps","newDeps","depIds","newDepIds","cleanupDeps","_vForRemoving","patternTypes","KeepAlive","include","exclude","destroyed","testEl","svg","math","xhtml","isHTMLTag","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalize","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","platformModules","patch$1","activeElement","vmodel","model","needReset","some","originalDisplay","display","__vOriginalDisplay","platformDirectives","transitionProps","Transition","_leaving","oldRawChild","oldChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","c$1","beforeUpdate","hasMove","offsetHeight","propertyName","_hasMove","platformComponents","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","isScriptOrStyle","hasLang","isSFC","regexEscapeRE","esc","tab","space","up","down","stop","prevent","ctrl","alt","cloak","klass$1","style$1","modules$1","directives$1","idToTemplate","mount","arrayPrefix","objPrefix","numChar","parsedString","lastCh","numConsecutiveSlashes","mediaQuery","alreadyImportedModules","addStylesToDom","domStyle","stylesInDom","addStyle","listToStyles","newStyles","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","firstChild","removeStyleElement","createStyleElement","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","memoize","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.998d3c537521938d0f50.js","sourcesContent":["webpackJsonp([2,0],[\n/* 0 */,\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\tvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\t\n\tvar scheduleDrain;\n\t\n\t{\n\t  if (Mutation) {\n\t    var called = 0;\n\t    var observer = new Mutation(nextTick);\n\t    var element = global.document.createTextNode('');\n\t    observer.observe(element, {\n\t      characterData: true\n\t    });\n\t    scheduleDrain = function () {\n\t      element.data = (called = ++called % 2);\n\t    };\n\t  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n\t    var channel = new global.MessageChannel();\n\t    channel.port1.onmessage = nextTick;\n\t    scheduleDrain = function () {\n\t      channel.port2.postMessage(0);\n\t    };\n\t  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n\t    scheduleDrain = function () {\n\t\n\t      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t      var scriptEl = global.document.createElement('script');\n\t      scriptEl.onreadystatechange = function () {\n\t        nextTick();\n\t\n\t        scriptEl.onreadystatechange = null;\n\t        scriptEl.parentNode.removeChild(scriptEl);\n\t        scriptEl = null;\n\t      };\n\t      global.document.documentElement.appendChild(scriptEl);\n\t    };\n\t  } else {\n\t    scheduleDrain = function () {\n\t      setTimeout(nextTick, 0);\n\t    };\n\t  }\n\t}\n\t\n\tvar draining;\n\tvar queue = [];\n\t//named nextTick for less confusing stack traces\n\tfunction nextTick() {\n\t  draining = true;\n\t  var i, oldQueue;\n\t  var len = queue.length;\n\t  while (len) {\n\t    oldQueue = queue;\n\t    queue = [];\n\t    i = -1;\n\t    while (++i < len) {\n\t      oldQueue[i]();\n\t    }\n\t    len = queue.length;\n\t  }\n\t  draining = false;\n\t}\n\t\n\tmodule.exports = immediate;\n\tfunction immediate(task) {\n\t  if (queue.push(task) === 1 && !draining) {\n\t    scheduleDrain();\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = argsArray;\n\t\n\tfunction argsArray(fun) {\n\t  return function () {\n\t    var len = arguments.length;\n\t    if (len) {\n\t      var args = [];\n\t      var i = -1;\n\t      while (++i < len) {\n\t        args[i] = arguments[i];\n\t      }\n\t      return fun.call(this, args);\n\t    } else {\n\t      return fun.call(this, []);\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(17);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t  return (typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  return JSON.stringify(v);\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t\n\t  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\t  if ('env' in (typeof process === 'undefined' ? {} : process)) {\n\t    r = ({\"NODE_ENV\":\"production\"}).DEBUG;\n\t  }\n\t  \n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(34)))\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug.debug = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(18);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    // apply env-specific formatting\n\t    args = exports.formatArgs.apply(self, args);\n\t\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000\n\tvar m = s * 60\n\tvar h = m * 60\n\tvar d = h * 24\n\tvar y = d * 365.25\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (val, options) {\n\t  options = options || {}\n\t  var type = typeof val\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val)\n\t  } else if (type === 'number' && isNaN(val) === false) {\n\t    return options.long ?\n\t\t\t\tfmtLong(val) :\n\t\t\t\tfmtShort(val)\n\t  }\n\t  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n\t}\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = String(str)\n\t  if (str.length > 10000) {\n\t    return\n\t  }\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n\t  if (!match) {\n\t    return\n\t  }\n\t  var n = parseFloat(match[1])\n\t  var type = (match[2] || 'ms').toLowerCase()\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n\n\t    default:\n\t      return undefined\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtShort(ms) {\n\t  if (ms >= d) {\n\t    return Math.round(ms / d) + 'd'\n\t  }\n\t  if (ms >= h) {\n\t    return Math.round(ms / h) + 'h'\n\t  }\n\t  if (ms >= m) {\n\t    return Math.round(ms / m) + 'm'\n\t  }\n\t  if (ms >= s) {\n\t    return Math.round(ms / s) + 's'\n\t  }\n\t  return ms + 'ms'\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtLong(ms) {\n\t  return plural(ms, d, 'day') ||\n\t    plural(ms, h, 'hour') ||\n\t    plural(ms, m, 'minute') ||\n\t    plural(ms, s, 'second') ||\n\t    ms + ' ms'\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) {\n\t    return\n\t  }\n\t  if (ms < n * 1.5) {\n\t    return Math.floor(ms / n) + ' ' + name\n\t  }\n\t  return Math.ceil(ms / n) + ' ' + name + 's'\n\t}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar immediate = __webpack_require__(1);\n\t\n\t/* istanbul ignore next */\n\tfunction INTERNAL() {}\n\t\n\tvar handlers = {};\n\t\n\tvar REJECTED = ['REJECTED'];\n\tvar FULFILLED = ['FULFILLED'];\n\tvar PENDING = ['PENDING'];\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(resolver) {\n\t  if (typeof resolver !== 'function') {\n\t    throw new TypeError('resolver must be a function');\n\t  }\n\t  this.state = PENDING;\n\t  this.queue = [];\n\t  this.outcome = void 0;\n\t  if (resolver !== INTERNAL) {\n\t    safelyResolveThenable(this, resolver);\n\t  }\n\t}\n\t\n\tPromise.prototype[\"catch\"] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n\t    typeof onRejected !== 'function' && this.state === REJECTED) {\n\t    return this;\n\t  }\n\t  var promise = new this.constructor(INTERNAL);\n\t  if (this.state !== PENDING) {\n\t    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n\t    unwrap(promise, resolver, this.outcome);\n\t  } else {\n\t    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n\t  }\n\t\n\t  return promise;\n\t};\n\tfunction QueueItem(promise, onFulfilled, onRejected) {\n\t  this.promise = promise;\n\t  if (typeof onFulfilled === 'function') {\n\t    this.onFulfilled = onFulfilled;\n\t    this.callFulfilled = this.otherCallFulfilled;\n\t  }\n\t  if (typeof onRejected === 'function') {\n\t    this.onRejected = onRejected;\n\t    this.callRejected = this.otherCallRejected;\n\t  }\n\t}\n\tQueueItem.prototype.callFulfilled = function (value) {\n\t  handlers.resolve(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallFulfilled = function (value) {\n\t  unwrap(this.promise, this.onFulfilled, value);\n\t};\n\tQueueItem.prototype.callRejected = function (value) {\n\t  handlers.reject(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallRejected = function (value) {\n\t  unwrap(this.promise, this.onRejected, value);\n\t};\n\t\n\tfunction unwrap(promise, func, value) {\n\t  immediate(function () {\n\t    var returnValue;\n\t    try {\n\t      returnValue = func(value);\n\t    } catch (e) {\n\t      return handlers.reject(promise, e);\n\t    }\n\t    if (returnValue === promise) {\n\t      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n\t    } else {\n\t      handlers.resolve(promise, returnValue);\n\t    }\n\t  });\n\t}\n\t\n\thandlers.resolve = function (self, value) {\n\t  var result = tryCatch(getThen, value);\n\t  if (result.status === 'error') {\n\t    return handlers.reject(self, result.value);\n\t  }\n\t  var thenable = result.value;\n\t\n\t  if (thenable) {\n\t    safelyResolveThenable(self, thenable);\n\t  } else {\n\t    self.state = FULFILLED;\n\t    self.outcome = value;\n\t    var i = -1;\n\t    var len = self.queue.length;\n\t    while (++i < len) {\n\t      self.queue[i].callFulfilled(value);\n\t    }\n\t  }\n\t  return self;\n\t};\n\thandlers.reject = function (self, error) {\n\t  self.state = REJECTED;\n\t  self.outcome = error;\n\t  var i = -1;\n\t  var len = self.queue.length;\n\t  while (++i < len) {\n\t    self.queue[i].callRejected(error);\n\t  }\n\t  return self;\n\t};\n\t\n\tfunction getThen(obj) {\n\t  // Make sure we only access the accessor once as required by the spec\n\t  var then = obj && obj.then;\n\t  if (obj && typeof obj === 'object' && typeof then === 'function') {\n\t    return function appyThen() {\n\t      then.apply(obj, arguments);\n\t    };\n\t  }\n\t}\n\t\n\tfunction safelyResolveThenable(self, thenable) {\n\t  // Either fulfill, reject or reject with error\n\t  var called = false;\n\t  function onError(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.reject(self, value);\n\t  }\n\t\n\t  function onSuccess(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.resolve(self, value);\n\t  }\n\t\n\t  function tryToUnwrap() {\n\t    thenable(onSuccess, onError);\n\t  }\n\t\n\t  var result = tryCatch(tryToUnwrap);\n\t  if (result.status === 'error') {\n\t    onError(result.value);\n\t  }\n\t}\n\t\n\tfunction tryCatch(func, value) {\n\t  var out = {};\n\t  try {\n\t    out.value = func(value);\n\t    out.status = 'success';\n\t  } catch (e) {\n\t    out.status = 'error';\n\t    out.value = e;\n\t  }\n\t  return out;\n\t}\n\t\n\tPromise.resolve = resolve;\n\tfunction resolve(value) {\n\t  if (value instanceof this) {\n\t    return value;\n\t  }\n\t  return handlers.resolve(new this(INTERNAL), value);\n\t}\n\t\n\tPromise.reject = reject;\n\tfunction reject(reason) {\n\t  var promise = new this(INTERNAL);\n\t  return handlers.reject(promise, reason);\n\t}\n\t\n\tPromise.all = all;\n\tfunction all(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\t\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\t\n\t  var values = new Array(len);\n\t  var resolved = 0;\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\t\n\t  while (++i < len) {\n\t    allResolver(iterable[i], i);\n\t  }\n\t  return promise;\n\t  function allResolver(value, i) {\n\t    self.resolve(value).then(resolveFromAll, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t    function resolveFromAll(outValue) {\n\t      values[i] = outValue;\n\t      if (++resolved === len && !called) {\n\t        called = true;\n\t        handlers.resolve(promise, values);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tPromise.race = race;\n\tfunction race(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\t\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\t\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\t\n\t  while (++i < len) {\n\t    resolver(iterable[i]);\n\t  }\n\t  return promise;\n\t  function resolver(value) {\n\t    self.resolve(value).then(function (response) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.resolve(promise, response);\n\t      }\n\t    }, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t  }\n\t}\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar lie = _interopDefault(__webpack_require__(32));\n\tvar getArguments = _interopDefault(__webpack_require__(4));\n\tvar debug = _interopDefault(__webpack_require__(16));\n\tvar events = __webpack_require__(19);\n\tvar inherits = _interopDefault(__webpack_require__(31));\n\tvar immediate = _interopDefault(__webpack_require__(1));\n\tvar scopedEval = _interopDefault(__webpack_require__(35));\n\tvar Md5 = _interopDefault(__webpack_require__(36));\n\tvar vuvuzela = _interopDefault(__webpack_require__(59));\n\t\n\t/* istanbul ignore next */\n\tvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\t\n\tfunction isBinaryObject(object) {\n\t  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n\t    (typeof Blob !== 'undefined' && object instanceof Blob);\n\t}\n\t\n\tfunction cloneArrayBuffer(buff) {\n\t  if (typeof buff.slice === 'function') {\n\t    return buff.slice(0);\n\t  }\n\t  // IE10-11 slice() polyfill\n\t  var target = new ArrayBuffer(buff.byteLength);\n\t  var targetArray = new Uint8Array(target);\n\t  var sourceArray = new Uint8Array(buff);\n\t  targetArray.set(sourceArray);\n\t  return target;\n\t}\n\t\n\tfunction cloneBinaryObject(object) {\n\t  if (object instanceof ArrayBuffer) {\n\t    return cloneArrayBuffer(object);\n\t  }\n\t  var size = object.size;\n\t  var type = object.type;\n\t  // Blob\n\t  if (typeof object.slice === 'function') {\n\t    return object.slice(0, size, type);\n\t  }\n\t  // PhantomJS slice() replacement\n\t  return object.webkitSlice(0, size, type);\n\t}\n\t\n\t// most of this is borrowed from lodash.isPlainObject:\n\t// https://github.com/fis-components/lodash.isplainobject/\n\t// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\t\n\tvar funcToString = Function.prototype.toString;\n\tvar objectCtorString = funcToString.call(Object);\n\t\n\tfunction isPlainObject(value) {\n\t  var proto = Object.getPrototypeOf(value);\n\t  /* istanbul ignore if */\n\t  if (proto === null) { // not sure when this happens, but I guess it can\n\t    return true;\n\t  }\n\t  var Ctor = proto.constructor;\n\t  return (typeof Ctor == 'function' &&\n\t    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t}\n\t\n\tfunction clone(object) {\n\t  var newObject;\n\t  var i;\n\t  var len;\n\t\n\t  if (!object || typeof object !== 'object') {\n\t    return object;\n\t  }\n\t\n\t  if (Array.isArray(object)) {\n\t    newObject = [];\n\t    for (i = 0, len = object.length; i < len; i++) {\n\t      newObject[i] = clone(object[i]);\n\t    }\n\t    return newObject;\n\t  }\n\t\n\t  // special case: to avoid inconsistencies between IndexedDB\n\t  // and other backends, we automatically stringify Dates\n\t  if (object instanceof Date) {\n\t    return object.toISOString();\n\t  }\n\t\n\t  if (isBinaryObject(object)) {\n\t    return cloneBinaryObject(object);\n\t  }\n\t\n\t  if (!isPlainObject(object)) {\n\t    return object; // don't clone objects like Workers\n\t  }\n\t\n\t  newObject = {};\n\t  for (i in object) {\n\t    /* istanbul ignore else */\n\t    if (Object.prototype.hasOwnProperty.call(object, i)) {\n\t      var value = clone(object[i]);\n\t      if (typeof value !== 'undefined') {\n\t        newObject[i] = value;\n\t      }\n\t    }\n\t  }\n\t  return newObject;\n\t}\n\t\n\tfunction once(fun) {\n\t  var called = false;\n\t  return getArguments(function (args) {\n\t    /* istanbul ignore if */\n\t    if (called) {\n\t      // this is a smoke test and should never actually happen\n\t      throw new Error('once called more than once');\n\t    } else {\n\t      called = true;\n\t      fun.apply(this, args);\n\t    }\n\t  });\n\t}\n\t\n\tfunction toPromise(func) {\n\t  //create the function we will be returning\n\t  return getArguments(function (args) {\n\t    // Clone arguments\n\t    args = clone(args);\n\t    var self = this;\n\t    // if the last argument is a function, assume its a callback\n\t    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n\t    var promise = new PouchPromise(function (fulfill, reject) {\n\t      var resp;\n\t      try {\n\t        var callback = once(function (err, mesg) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            fulfill(mesg);\n\t          }\n\t        });\n\t        // create a callback for this invocation\n\t        // apply the function in the orig context\n\t        args.push(callback);\n\t        resp = func.apply(self, args);\n\t        if (resp && typeof resp.then === 'function') {\n\t          fulfill(resp);\n\t        }\n\t      } catch (e) {\n\t        reject(e);\n\t      }\n\t    });\n\t    // if there is a callback, call it back\n\t    if (usedCB) {\n\t      promise.then(function (result) {\n\t        usedCB(null, result);\n\t      }, usedCB);\n\t    }\n\t    return promise;\n\t  });\n\t}\n\t\n\tvar log = debug('pouchdb:api');\n\t\n\tfunction adapterFun(name, callback) {\n\t  function logApiCall(self, name, args) {\n\t    /* istanbul ignore if */\n\t    if (log.enabled) {\n\t      var logArgs = [self.name, name];\n\t      for (var i = 0; i < args.length - 1; i++) {\n\t        logArgs.push(args[i]);\n\t      }\n\t      log.apply(null, logArgs);\n\t\n\t      // override the callback itself to log the response\n\t      var origCallback = args[args.length - 1];\n\t      args[args.length - 1] = function (err, res) {\n\t        var responseArgs = [self.name, name];\n\t        responseArgs = responseArgs.concat(\n\t          err ? ['error', err] : ['success', res]\n\t        );\n\t        log.apply(null, responseArgs);\n\t        origCallback(err, res);\n\t      };\n\t    }\n\t  }\n\t\n\t  return toPromise(getArguments(function (args) {\n\t    if (this._closed) {\n\t      return PouchPromise.reject(new Error('database is closed'));\n\t    }\n\t    if (this._destroyed) {\n\t      return PouchPromise.reject(new Error('database is destroyed'));\n\t    }\n\t    var self = this;\n\t    logApiCall(self, name, args);\n\t    if (!this.taskqueue.isReady) {\n\t      return new PouchPromise(function (fulfill, reject) {\n\t        self.taskqueue.addTask(function (failed) {\n\t          if (failed) {\n\t            reject(failed);\n\t          } else {\n\t            fulfill(self[name].apply(self, args));\n\t          }\n\t        });\n\t      });\n\t    }\n\t    return callback.apply(this, args);\n\t  }));\n\t}\n\t\n\t// like underscore/lodash _.pick()\n\tfunction pick(obj, arr) {\n\t  var res = {};\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    var prop = arr[i];\n\t    if (prop in obj) {\n\t      res[prop] = obj[prop];\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t// based on https://github.com/montagejs/collections\n\tfunction mangle(key) {\n\t  return '$' + key;\n\t}\n\tfunction unmangle(key) {\n\t  return key.substring(1);\n\t}\n\tfunction _Map() {\n\t  this._store = {};\n\t}\n\t_Map.prototype.get = function (key) {\n\t  var mangled = mangle(key);\n\t  return this._store[mangled];\n\t};\n\t_Map.prototype.set = function (key, value) {\n\t  var mangled = mangle(key);\n\t  this._store[mangled] = value;\n\t  return true;\n\t};\n\t_Map.prototype.has = function (key) {\n\t  var mangled = mangle(key);\n\t  return mangled in this._store;\n\t};\n\t_Map.prototype.delete = function (key) {\n\t  var mangled = mangle(key);\n\t  var res = mangled in this._store;\n\t  delete this._store[mangled];\n\t  return res;\n\t};\n\t_Map.prototype.forEach = function (cb) {\n\t  var keys = Object.keys(this._store);\n\t  for (var i = 0, len = keys.length; i < len; i++) {\n\t    var key = keys[i];\n\t    var value = this._store[key];\n\t    key = unmangle(key);\n\t    cb(value, key);\n\t  }\n\t};\n\tObject.defineProperty(_Map.prototype, 'size', {\n\t  get: function () {\n\t    return Object.keys(this._store).length;\n\t  }\n\t});\n\t\n\tfunction _Set(array) {\n\t  this._store = new _Map();\n\t\n\t  // init with an array\n\t  if (array && Array.isArray(array)) {\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      this.add(array[i]);\n\t    }\n\t  }\n\t}\n\t_Set.prototype.add = function (key) {\n\t  return this._store.set(key, true);\n\t};\n\t_Set.prototype.has = function (key) {\n\t  return this._store.has(key);\n\t};\n\t\n\t// Most browsers throttle concurrent requests at 6, so it's silly\n\t// to shim _bulk_get by trying to launch potentially hundreds of requests\n\t// and then letting the majority time out. We can handle this ourselves.\n\tvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\t\n\tfunction identityFunction(x) {\n\t  return x;\n\t}\n\t\n\tfunction formatResultForOpenRevsGet(result) {\n\t  return [{\n\t    ok: result\n\t  }];\n\t}\n\t\n\t// shim for P/CouchDB adapters that don't directly implement _bulk_get\n\tfunction bulkGet(db, opts, callback) {\n\t  var requests = opts.docs;\n\t\n\t  // consolidate into one request per doc if possible\n\t  var requestsById = new _Map();\n\t  requests.forEach(function (request) {\n\t    if (requestsById.has(request.id)) {\n\t      requestsById.get(request.id).push(request);\n\t    } else {\n\t      requestsById.set(request.id, [request]);\n\t    }\n\t  });\n\t\n\t  var numDocs = requestsById.size;\n\t  var numDone = 0;\n\t  var perDocResults = new Array(numDocs);\n\t\n\t  function collapseResultsAndFinish() {\n\t    var results = [];\n\t    perDocResults.forEach(function (res) {\n\t      res.docs.forEach(function (info) {\n\t        results.push({\n\t          id: res.id,\n\t          docs: [info]\n\t        });\n\t      });\n\t    });\n\t    callback(null, {results: results});\n\t  }\n\t\n\t  function checkDone() {\n\t    if (++numDone === numDocs) {\n\t      collapseResultsAndFinish();\n\t    }\n\t  }\n\t\n\t  function gotResult(docIndex, id, docs) {\n\t    perDocResults[docIndex] = {id: id, docs: docs};\n\t    checkDone();\n\t  }\n\t\n\t  var allRequests = [];\n\t  requestsById.forEach(function (value, key) {\n\t    allRequests.push(key);\n\t  });\n\t\n\t  var i = 0;\n\t\n\t  function nextBatch() {\n\t\n\t    if (i >= allRequests.length) {\n\t      return;\n\t    }\n\t\n\t    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n\t    var batch = allRequests.slice(i, upTo);\n\t    processBatch(batch, i);\n\t    i += batch.length;\n\t  }\n\t\n\t  function processBatch(batch, offset) {\n\t    batch.forEach(function (docId, j) {\n\t      var docIdx = offset + j;\n\t      var docRequests = requestsById.get(docId);\n\t\n\t      // just use the first request as the \"template\"\n\t      // TODO: The _bulk_get API allows for more subtle use cases than this,\n\t      // but for now it is unlikely that there will be a mix of different\n\t      // \"atts_since\" or \"attachments\" in the same request, since it's just\n\t      // replicate.js that is using this for the moment.\n\t      // Also, atts_since is aspirational, since we don't support it yet.\n\t      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n\t      docOpts.open_revs = docRequests.map(function (request) {\n\t        // rev is optional, open_revs disallowed\n\t        return request.rev;\n\t      });\n\t\n\t      // remove falsey / undefined revisions\n\t      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\t\n\t      var formatResult = identityFunction;\n\t\n\t      if (docOpts.open_revs.length === 0) {\n\t        delete docOpts.open_revs;\n\t\n\t        // when fetching only the \"winning\" leaf,\n\t        // transform the result so it looks like an open_revs\n\t        // request\n\t        formatResult = formatResultForOpenRevsGet;\n\t      }\n\t\n\t      // globally-supplied options\n\t      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n\t        if (param in opts) {\n\t          docOpts[param] = opts[param];\n\t        }\n\t      });\n\t      db.get(docId, docOpts, function (err, res) {\n\t        var result;\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          result = [{error: err}];\n\t        } else {\n\t          result = formatResult(res);\n\t        }\n\t        gotResult(docIdx, docId, result);\n\t        nextBatch();\n\t      });\n\t    });\n\t  }\n\t\n\t  nextBatch();\n\t\n\t}\n\t\n\tfunction isChromeApp() {\n\t  return (typeof chrome !== \"undefined\" &&\n\t    typeof chrome.storage !== \"undefined\" &&\n\t    typeof chrome.storage.local !== \"undefined\");\n\t}\n\t\n\tvar hasLocal;\n\t\n\tif (isChromeApp()) {\n\t  hasLocal = false;\n\t} else {\n\t  try {\n\t    localStorage.setItem('_pouch_check_localstorage', 1);\n\t    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n\t  } catch (e) {\n\t    hasLocal = false;\n\t  }\n\t}\n\t\n\tfunction hasLocalStorage() {\n\t  return hasLocal;\n\t}\n\t\n\tinherits(Changes, events.EventEmitter);\n\t\n\t/* istanbul ignore next */\n\tfunction attachBrowserEvents(self) {\n\t  if (isChromeApp()) {\n\t    chrome.storage.onChanged.addListener(function (e) {\n\t      // make sure it's event addressed to us\n\t      if (e.db_name != null) {\n\t        //object only has oldValue, newValue members\n\t        self.emit(e.dbName.newValue);\n\t      }\n\t    });\n\t  } else if (hasLocalStorage()) {\n\t    if (typeof addEventListener !== 'undefined') {\n\t      addEventListener(\"storage\", function (e) {\n\t        self.emit(e.key);\n\t      });\n\t    } else { // old IE\n\t      window.attachEvent(\"storage\", function (e) {\n\t        self.emit(e.key);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tfunction Changes() {\n\t  events.EventEmitter.call(this);\n\t  this._listeners = {};\n\t\n\t  attachBrowserEvents(this);\n\t}\n\tChanges.prototype.addListener = function (dbName, id, db, opts) {\n\t  /* istanbul ignore if */\n\t  if (this._listeners[id]) {\n\t    return;\n\t  }\n\t  var self = this;\n\t  var inprogress = false;\n\t  function eventFunction() {\n\t    /* istanbul ignore if */\n\t    if (!self._listeners[id]) {\n\t      return;\n\t    }\n\t    if (inprogress) {\n\t      inprogress = 'waiting';\n\t      return;\n\t    }\n\t    inprogress = true;\n\t    var changesOpts = pick(opts, [\n\t      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n\t      'doc_ids', 'view', 'since', 'query_params', 'binary'\n\t    ]);\n\t\n\t    /* istanbul ignore next */\n\t    function onError() {\n\t      inprogress = false;\n\t    }\n\t\n\t    db.changes(changesOpts).on('change', function (c) {\n\t      if (c.seq > opts.since && !opts.cancelled) {\n\t        opts.since = c.seq;\n\t        opts.onChange(c);\n\t      }\n\t    }).on('complete', function () {\n\t      if (inprogress === 'waiting') {\n\t        immediate(eventFunction);\n\t      }\n\t      inprogress = false;\n\t    }).on('error', onError);\n\t  }\n\t  this._listeners[id] = eventFunction;\n\t  this.on(dbName, eventFunction);\n\t};\n\t\n\tChanges.prototype.removeListener = function (dbName, id) {\n\t  /* istanbul ignore if */\n\t  if (!(id in this._listeners)) {\n\t    return;\n\t  }\n\t  events.EventEmitter.prototype.removeListener.call(this, dbName,\n\t    this._listeners[id]);\n\t  delete this._listeners[id];\n\t};\n\t\n\t\n\t/* istanbul ignore next */\n\tChanges.prototype.notifyLocalWindows = function (dbName) {\n\t  //do a useless change on a storage thing\n\t  //in order to get other windows's listeners to activate\n\t  if (isChromeApp()) {\n\t    chrome.storage.local.set({dbName: dbName});\n\t  } else if (hasLocalStorage()) {\n\t    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n\t  }\n\t};\n\t\n\tChanges.prototype.notify = function (dbName) {\n\t  this.emit(dbName);\n\t  this.notifyLocalWindows(dbName);\n\t};\n\t\n\tfunction guardedConsole(method) {\n\t  /* istanbul ignore else */\n\t  if (console !== 'undefined' && method in console) {\n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t    console[method].apply(console, args);\n\t  }\n\t}\n\t\n\tfunction randomNumber(min, max) {\n\t  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n\t  min = parseInt(min, 10) || 0;\n\t  max = parseInt(max, 10);\n\t  if (max !== max || max <= min) {\n\t    max = (min || 1) << 1; //doubling\n\t  } else {\n\t    max = max + 1;\n\t  }\n\t  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n\t  if(max > maxTimeout) {\n\t    min = maxTimeout >> 1; // divide by two\n\t    max = maxTimeout;\n\t  }\n\t  var ratio = Math.random();\n\t  var range = max - min;\n\t\n\t  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n\t}\n\t\n\tfunction defaultBackOff(min) {\n\t  var max = 0;\n\t  if (!min) {\n\t    max = 2000;\n\t  }\n\t  return randomNumber(min, max);\n\t}\n\t\n\t// designed to give info to browser users, who are disturbed\n\t// when they see http errors in the console\n\tfunction explainError(status, str) {\n\t  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n\t}\n\t\n\t// forked from\n\t// https://github.com/vmattos/js-extend/blob/7023fd69a9e9552688086b8b8006b1fcf916a306/extend.js\n\t// TODO: I don't know why we have two different extend() functions in PouchDB\n\t\n\tvar slice = Array.prototype.slice;\n\tvar each = Array.prototype.forEach;\n\t\n\tfunction extend$1(obj) {\n\t  if (typeof obj !== 'object') {\n\t    throw obj + ' is not an object' ;\n\t  }\n\t\n\t  var sources = slice.call(arguments, 1);\n\t\n\t  each.call(sources, function (source) {\n\t    if (source) {\n\t      for (var prop in source) {\n\t        if (typeof source[prop] === 'object' && obj[prop]) {\n\t          extend$1.call(obj, obj[prop], source[prop]);\n\t        } else {\n\t          obj[prop] = source[prop];\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  return obj;\n\t}\n\t\n\tinherits(PouchError, Error);\n\t\n\tfunction PouchError(status, error, reason) {\n\t  Error.call(this, reason);\n\t  this.status = status;\n\t  this.name = error;\n\t  this.message = reason;\n\t  this.error = true;\n\t}\n\t\n\tPouchError.prototype.toString = function () {\n\t  return JSON.stringify({\n\t    status: this.status,\n\t    name: this.name,\n\t    message: this.message,\n\t    reason: this.reason\n\t  });\n\t};\n\t\n\tvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\n\tvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\n\tvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\n\tvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\n\tvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\n\tvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\n\tvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\n\tvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\n\tvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\n\tvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\n\tvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\n\tvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\n\tvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\n\tvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\n\tvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\n\tvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\n\tvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\n\tvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\n\tvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\n\tvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\n\tvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\n\tvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\n\tvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\n\tvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\t\n\tfunction createError(error, reason) {\n\t  function CustomPouchError(reason) {\n\t    // inherit error properties from our parent error manually\n\t    // so as to allow proper JSON parsing.\n\t    /* jshint ignore:start */\n\t    for (var p in error) {\n\t      if (typeof error[p] !== 'function') {\n\t        this[p] = error[p];\n\t      }\n\t    }\n\t    /* jshint ignore:end */\n\t    if (reason !== undefined) {\n\t      this.reason = reason;\n\t    }\n\t  }\n\t  CustomPouchError.prototype = PouchError.prototype;\n\t  return new CustomPouchError(reason);\n\t}\n\t\n\tfunction generateErrorFromResponse(err) {\n\t\n\t  if (typeof err !== 'object') {\n\t    var data = err;\n\t    err = UNKNOWN_ERROR;\n\t    err.data = data;\n\t  }\n\t\n\t  if ('error' in err && err.error === 'conflict') {\n\t    err.name = 'conflict';\n\t    err.status = 409;\n\t  }\n\t\n\t  if (!('name' in err)) {\n\t    err.name = err.error || 'unknown';\n\t  }\n\t\n\t  if (!('status' in err)) {\n\t    err.status = 500;\n\t  }\n\t\n\t  if (!('message' in err)) {\n\t    err.message = err.message || err.reason;\n\t  }\n\t\n\t  return err;\n\t}\n\t\n\tfunction tryFilter(filter, doc, req) {\n\t  try {\n\t    return !filter(doc, req);\n\t  } catch (err) {\n\t    var msg = 'Filter function threw: ' + err.toString();\n\t    return createError(BAD_REQUEST, msg);\n\t  }\n\t}\n\t\n\tfunction filterChange(opts) {\n\t  var req = {};\n\t  var hasFilter = opts.filter && typeof opts.filter === 'function';\n\t  req.query = opts.query_params;\n\t\n\t  return function filter(change) {\n\t    if (!change.doc) {\n\t      // CSG sends events on the changes feed that don't have documents,\n\t      // this hack makes a whole lot of existing code robust.\n\t      change.doc = {};\n\t    }\n\t\n\t    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\t\n\t    if (typeof filterReturn === 'object') {\n\t      return filterReturn;\n\t    }\n\t\n\t    if (filterReturn) {\n\t      return false;\n\t    }\n\t\n\t    if (!opts.include_docs) {\n\t      delete change.doc;\n\t    } else if (!opts.attachments) {\n\t      for (var att in change.doc._attachments) {\n\t        /* istanbul ignore else */\n\t        if (change.doc._attachments.hasOwnProperty(att)) {\n\t          change.doc._attachments[att].stub = true;\n\t        }\n\t      }\n\t    }\n\t    return true;\n\t  };\n\t}\n\t\n\tfunction flatten(arrs) {\n\t  var res = [];\n\t  for (var i = 0, len = arrs.length; i < len; i++) {\n\t    res = res.concat(arrs[i]);\n\t  }\n\t  return res;\n\t}\n\t\n\t// Determine id an ID is valid\n\t//   - invalid IDs begin with an underescore that does not begin '_design' or\n\t//     '_local'\n\t//   - any other string value is a valid id\n\t// Returns the specific error object for each case\n\tfunction invalidIdError(id) {\n\t  var err;\n\t  if (!id) {\n\t    err = createError(MISSING_ID);\n\t  } else if (typeof id !== 'string') {\n\t    err = createError(INVALID_ID);\n\t  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n\t    err = createError(RESERVED_ID);\n\t  }\n\t  if (err) {\n\t    throw err;\n\t  }\n\t}\n\t\n\tfunction listenerCount(ee, type) {\n\t  return 'listenerCount' in ee ? ee.listenerCount(type) :\n\t                                 events.EventEmitter.listenerCount(ee, type);\n\t}\n\t\n\t// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\t// avoid using process.nextTick() directly because the polyfill is very large and we don't\n\t// need all of it (see: https://github.com/defunctzombie/node-process).\n\t// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n\t// package, so it's the one we use.\n\t// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n\t// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n\t// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n\t// (least latency) option, which is \"immediate\" due to use of microtasks.\n\t// All of our nextTicks are isolated to this one function so we can easily swap out one\n\t// implementation for another.\n\t\n\tfunction parseDesignDocFunctionName(s) {\n\t  if (!s) {\n\t    return null;\n\t  }\n\t  var parts = s.split('/');\n\t  if (parts.length === 2) {\n\t    return parts;\n\t  }\n\t  if (parts.length === 1) {\n\t    return [s, s];\n\t  }\n\t  return null;\n\t}\n\t\n\tfunction normalizeDesignDocFunctionName(s) {\n\t  var normalized = parseDesignDocFunctionName(s);\n\t  return normalized ? normalized.join('/') : null;\n\t}\n\t\n\t// originally parseUri 1.2.2, now patched by us\n\t// (c) Steven Levithan <stevenlevithan.com>\n\t// MIT License\n\tvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n\t    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\n\tvar qName =\"queryKey\";\n\tvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\t\n\t// use the \"loose\" parser\n\t/* jshint maxlen: false */\n\tvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\t\n\tfunction parseUri(str) {\n\t  var m = parser.exec(str);\n\t  var uri = {};\n\t  var i = 14;\n\t\n\t  while (i--) {\n\t    var key = keys[i];\n\t    var value = m[i] || \"\";\n\t    var encoded = ['user', 'password'].indexOf(key) !== -1;\n\t    uri[key] = encoded ? decodeURIComponent(value) : value;\n\t  }\n\t\n\t  uri[qName] = {};\n\t  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n\t    if ($1) {\n\t      uri[qName][$1] = $2;\n\t    }\n\t  });\n\t\n\t  return uri;\n\t}\n\t\n\t// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n\t// the diffFun tells us what delta to apply to the doc.  it either returns\n\t// the doc, or false if it doesn't need to do an update after all\n\tfunction upsert(db, docId, diffFun) {\n\t  return new PouchPromise(function (fulfill, reject) {\n\t    db.get(docId, function (err, doc) {\n\t      if (err) {\n\t        /* istanbul ignore next */\n\t        if (err.status !== 404) {\n\t          return reject(err);\n\t        }\n\t        doc = {};\n\t      }\n\t\n\t      // the user might change the _rev, so save it for posterity\n\t      var docRev = doc._rev;\n\t      var newDoc = diffFun(doc);\n\t\n\t      if (!newDoc) {\n\t        // if the diffFun returns falsy, we short-circuit as\n\t        // an optimization\n\t        return fulfill({updated: false, rev: docRev});\n\t      }\n\t\n\t      // users aren't allowed to modify these values,\n\t      // so reset them here\n\t      newDoc._id = docId;\n\t      newDoc._rev = docRev;\n\t      fulfill(tryAndPut(db, newDoc, diffFun));\n\t    });\n\t  });\n\t}\n\t\n\tfunction tryAndPut(db, doc, diffFun) {\n\t  return db.put(doc).then(function (res) {\n\t    return {\n\t      updated: true,\n\t      rev: res.rev\n\t    };\n\t  }, function (err) {\n\t    /* istanbul ignore next */\n\t    if (err.status !== 409) {\n\t      throw err;\n\t    }\n\t    return upsert(db, doc._id, diffFun);\n\t  });\n\t}\n\t\n\t// BEGIN Math.uuid.js\n\t\n\t/*!\n\tMath.uuid.js (v1.4)\n\thttp://www.broofa.com\n\tmailto:robert@broofa.com\n\t\n\tCopyright (c) 2010 Robert Kieffer\n\tDual licensed under the MIT and GPL licenses.\n\t*/\n\t\n\t/*\n\t * Generate a random uuid.\n\t *\n\t * USAGE: Math.uuid(length, radix)\n\t *   length - the desired number of characters\n\t *   radix  - the number of allowable values for each character.\n\t *\n\t * EXAMPLES:\n\t *   // No arguments  - returns RFC4122, version 4 ID\n\t *   >>> Math.uuid()\n\t *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n\t *\n\t *   // One argument - returns ID of the specified length\n\t *   >>> Math.uuid(15)     // 15 character ID (default base=62)\n\t *   \"VcydxgltxrVZSTV\"\n\t *\n\t *   // Two arguments - returns ID of the specified length, and radix. \n\t *   // (Radix must be <= 62)\n\t *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\n\t *   \"01001010\"\n\t *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\n\t *   \"47473046\"\n\t *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\n\t *   \"098F4D35\"\n\t */\n\tvar chars = (\n\t  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n\t  'abcdefghijklmnopqrstuvwxyz'\n\t).split('');\n\tfunction getValue(radix) {\n\t  return 0 | Math.random() * radix;\n\t}\n\tfunction uuid(len, radix) {\n\t  radix = radix || chars.length;\n\t  var out = '';\n\t  var i = -1;\n\t\n\t  if (len) {\n\t    // Compact form\n\t    while (++i < len) {\n\t      out += chars[getValue(radix)];\n\t    }\n\t    return out;\n\t  }\n\t    // rfc4122, version 4 form\n\t    // Fill in random data.  At i==19 set the high bits of clock sequence as\n\t    // per rfc4122, sec. 4.1.5\n\t  while (++i < 36) {\n\t    switch (i) {\n\t      case 8:\n\t      case 13:\n\t      case 18:\n\t      case 23:\n\t        out += '-';\n\t        break;\n\t      case 19:\n\t        out += chars[(getValue(16) & 0x3) | 0x8];\n\t        break;\n\t      default:\n\t        out += chars[getValue(16)];\n\t    }\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t// We fetch all leafs of the revision tree, and sort them based on tree length\n\t// and whether they were deleted, undeleted documents with the longest revision\n\t// tree (most edits) win\n\t// The final sort algorithm is slightly documented in a sidebar here:\n\t// http://guide.couchdb.org/draft/conflicts.html\n\tfunction winningRev(metadata) {\n\t  var winningId;\n\t  var winningPos;\n\t  var winningDeleted;\n\t  var toVisit = metadata.rev_tree.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var tree = node.ids;\n\t    var branches = tree[2];\n\t    var pos = node.pos;\n\t    if (branches.length) { // non-leaf\n\t      for (var i = 0, len = branches.length; i < len; i++) {\n\t        toVisit.push({pos: pos + 1, ids: branches[i]});\n\t      }\n\t      continue;\n\t    }\n\t    var deleted = !!tree[1].deleted;\n\t    var id = tree[0];\n\t    // sort by deleted, then pos, then id\n\t    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n\t        winningPos !== pos ? winningPos < pos : winningId < id)) {\n\t      winningId = id;\n\t      winningPos = pos;\n\t      winningDeleted = deleted;\n\t    }\n\t  }\n\t\n\t  return winningPos + '-' + winningId;\n\t}\n\t\n\t// Pretty much all below can be combined into a higher order function to\n\t// traverse revisions\n\t// The return value from the callback will be passed as context to all\n\t// children of that node\n\tfunction traverseRevTree(revs, callback) {\n\t  var toVisit = revs.slice();\n\t\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var branches = tree[2];\n\t    var newCtx =\n\t      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n\t    }\n\t  }\n\t}\n\t\n\tfunction sortByPos(a, b) {\n\t  return a.pos - b.pos;\n\t}\n\t\n\tfunction collectLeaves(revs) {\n\t  var leaves = [];\n\t  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n\t    if (isLeaf) {\n\t      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n\t    }\n\t  });\n\t  leaves.sort(sortByPos).reverse();\n\t  for (var i = 0, len = leaves.length; i < len; i++) {\n\t    delete leaves[i].pos;\n\t  }\n\t  return leaves;\n\t}\n\t\n\t// returns revs of all conflicts that is leaves such that\n\t// 1. are not deleted and\n\t// 2. are different than winning revision\n\tfunction collectConflicts(metadata) {\n\t  var win = winningRev(metadata);\n\t  var leaves = collectLeaves(metadata.rev_tree);\n\t  var conflicts = [];\n\t  for (var i = 0, len = leaves.length; i < len; i++) {\n\t    var leaf = leaves[i];\n\t    if (leaf.rev !== win && !leaf.opts.deleted) {\n\t      conflicts.push(leaf.rev);\n\t    }\n\t  }\n\t  return conflicts;\n\t}\n\t\n\t// compact a tree by marking its non-leafs as missing,\n\t// and return a list of revs to delete\n\tfunction compactTree(metadata) {\n\t  var revs = [];\n\t  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                               revHash, ctx, opts) {\n\t    if (opts.status === 'available' && !isLeaf) {\n\t      revs.push(pos + '-' + revHash);\n\t      opts.status = 'missing';\n\t    }\n\t  });\n\t  return revs;\n\t}\n\t\n\t// build up a list of all the paths to the leafs in this revision tree\n\tfunction rootToLeaf(revs) {\n\t  var paths = [];\n\t  var toVisit = revs.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var id = tree[0];\n\t    var opts = tree[1];\n\t    var branches = tree[2];\n\t    var isLeaf = branches.length === 0;\n\t\n\t    var history = node.history ? node.history.slice() : [];\n\t    history.push({id: id, opts: opts});\n\t    if (isLeaf) {\n\t      paths.push({pos: (pos + 1 - history.length), ids: history});\n\t    }\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n\t    }\n\t  }\n\t  return paths.reverse();\n\t}\n\t\n\t// for a better overview of what this is doing, read:\n\t// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n\t//\n\t// But for a quick intro, CouchDB uses a revision tree to store a documents\n\t// history, A -> B -> C, when a document has conflicts, that is a branch in the\n\t// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n\t//\n\t// KeyTree = [Path ... ]\n\t// Path = {pos: position_from_root, ids: Tree}\n\t// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\t\n\tfunction sortByPos$1(a, b) {\n\t  return a.pos - b.pos;\n\t}\n\t\n\t// classic binary search\n\tfunction binarySearch(arr, item, comparator) {\n\t  var low = 0;\n\t  var high = arr.length;\n\t  var mid;\n\t  while (low < high) {\n\t    mid = (low + high) >>> 1;\n\t    if (comparator(arr[mid], item) < 0) {\n\t      low = mid + 1;\n\t    } else {\n\t      high = mid;\n\t    }\n\t  }\n\t  return low;\n\t}\n\t\n\t// assuming the arr is sorted, insert the item in the proper place\n\tfunction insertSorted(arr, item, comparator) {\n\t  var idx = binarySearch(arr, item, comparator);\n\t  arr.splice(idx, 0, item);\n\t}\n\t\n\t// Turn a path as a flat array into a tree with a single branch.\n\t// If any should be stemmed from the beginning of the array, that's passed\n\t// in as the second argument\n\tfunction pathToTree(path, numStemmed) {\n\t  var root;\n\t  var leaf;\n\t  for (var i = numStemmed, len = path.length; i < len; i++) {\n\t    var node = path[i];\n\t    var currentLeaf = [node.id, node.opts, []];\n\t    if (leaf) {\n\t      leaf[2].push(currentLeaf);\n\t      leaf = currentLeaf;\n\t    } else {\n\t      root = leaf = currentLeaf;\n\t    }\n\t  }\n\t  return root;\n\t}\n\t\n\t// compare the IDs of two trees\n\tfunction compareTree(a, b) {\n\t  return a[0] < b[0] ? -1 : 1;\n\t}\n\t\n\t// Merge two trees together\n\t// The roots of tree1 and tree2 must be the same revision\n\tfunction mergeTree(in_tree1, in_tree2) {\n\t  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n\t  var conflicts = false;\n\t  while (queue.length > 0) {\n\t    var item = queue.pop();\n\t    var tree1 = item.tree1;\n\t    var tree2 = item.tree2;\n\t\n\t    if (tree1[1].status || tree2[1].status) {\n\t      tree1[1].status =\n\t        (tree1[1].status ===  'available' ||\n\t        tree2[1].status === 'available') ? 'available' : 'missing';\n\t    }\n\t\n\t    for (var i = 0; i < tree2[2].length; i++) {\n\t      if (!tree1[2][0]) {\n\t        conflicts = 'new_leaf';\n\t        tree1[2][0] = tree2[2][i];\n\t        continue;\n\t      }\n\t\n\t      var merged = false;\n\t      for (var j = 0; j < tree1[2].length; j++) {\n\t        if (tree1[2][j][0] === tree2[2][i][0]) {\n\t          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n\t          merged = true;\n\t        }\n\t      }\n\t      if (!merged) {\n\t        conflicts = 'new_branch';\n\t        insertSorted(tree1[2], tree2[2][i], compareTree);\n\t      }\n\t    }\n\t  }\n\t  return {conflicts: conflicts, tree: in_tree1};\n\t}\n\t\n\tfunction doMerge(tree, path, dontExpand) {\n\t  var restree = [];\n\t  var conflicts = false;\n\t  var merged = false;\n\t  var res;\n\t\n\t  if (!tree.length) {\n\t    return {tree: [path], conflicts: 'new_leaf'};\n\t  }\n\t\n\t  for (var i = 0, len = tree.length; i < len; i++) {\n\t    var branch = tree[i];\n\t    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n\t      // Paths start at the same position and have the same root, so they need\n\t      // merged\n\t      res = mergeTree(branch.ids, path.ids);\n\t      restree.push({pos: branch.pos, ids: res.tree});\n\t      conflicts = conflicts || res.conflicts;\n\t      merged = true;\n\t    } else if (dontExpand !== true) {\n\t      // The paths start at a different position, take the earliest path and\n\t      // traverse up until it as at the same point from root as the path we\n\t      // want to merge.  If the keys match we return the longer path with the\n\t      // other merged After stemming we dont want to expand the trees\n\t\n\t      var t1 = branch.pos < path.pos ? branch : path;\n\t      var t2 = branch.pos < path.pos ? path : branch;\n\t      var diff = t2.pos - t1.pos;\n\t\n\t      var candidateParents = [];\n\t\n\t      var trees = [];\n\t      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n\t      while (trees.length > 0) {\n\t        var item = trees.pop();\n\t        if (item.diff === 0) {\n\t          if (item.ids[0] === t2.ids[0]) {\n\t            candidateParents.push(item);\n\t          }\n\t          continue;\n\t        }\n\t        var elements = item.ids[2];\n\t        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n\t          trees.push({\n\t            ids: elements[j],\n\t            diff: item.diff - 1,\n\t            parent: item.ids,\n\t            parentIdx: j\n\t          });\n\t        }\n\t      }\n\t\n\t      var el = candidateParents[0];\n\t\n\t      if (!el) {\n\t        restree.push(branch);\n\t      } else {\n\t        res = mergeTree(el.ids, t2.ids);\n\t        el.parent[2][el.parentIdx] = res.tree;\n\t        restree.push({pos: t1.pos, ids: t1.ids});\n\t        conflicts = conflicts || res.conflicts;\n\t        merged = true;\n\t      }\n\t    } else {\n\t      restree.push(branch);\n\t    }\n\t  }\n\t\n\t  // We didnt find\n\t  if (!merged) {\n\t    restree.push(path);\n\t  }\n\t\n\t  restree.sort(sortByPos$1);\n\t\n\t  return {\n\t    tree: restree,\n\t    conflicts: conflicts || 'internal_node'\n\t  };\n\t}\n\t\n\t// To ensure we dont grow the revision tree infinitely, we stem old revisions\n\tfunction stem(tree, depth) {\n\t  // First we break out the tree into a complete list of root to leaf paths\n\t  var paths = rootToLeaf(tree);\n\t  var maybeStem = {};\n\t\n\t  var result;\n\t  for (var i = 0, len = paths.length; i < len; i++) {\n\t    // Then for each path, we cut off the start of the path based on the\n\t    // `depth` to stem to, and generate a new set of flat trees\n\t    var path = paths[i];\n\t    var stemmed = path.ids;\n\t    var numStemmed = Math.max(0, stemmed.length - depth);\n\t    var stemmedNode = {\n\t      pos: path.pos + numStemmed,\n\t      ids: pathToTree(stemmed, numStemmed)\n\t    };\n\t\n\t    for (var s = 0; s < numStemmed; s++) {\n\t      var rev = (path.pos + s) + '-' + stemmed[s].id;\n\t      maybeStem[rev] = true;\n\t    }\n\t\n\t    // Then we remerge all those flat trees together, ensuring that we dont\n\t    // connect trees that would go beyond the depth limit\n\t    if (result) {\n\t      result = doMerge(result, stemmedNode, true).tree;\n\t    } else {\n\t      result = [stemmedNode];\n\t    }\n\t  }\n\t\n\t  traverseRevTree(result, function (isLeaf, pos, revHash) {\n\t    // some revisions may have been removed in a branch but not in another\n\t    delete maybeStem[pos + '-' + revHash];\n\t  });\n\t\n\t  return {\n\t    tree: result,\n\t    revs: Object.keys(maybeStem)\n\t  };\n\t}\n\t\n\tfunction merge(tree, path, depth) {\n\t  var newTree = doMerge(tree, path);\n\t  var stemmed = stem(newTree.tree, depth);\n\t  return {\n\t    tree: stemmed.tree,\n\t    stemmedRevs: stemmed.revs,\n\t    conflicts: newTree.conflicts\n\t  };\n\t}\n\t\n\t// return true if a rev exists in the rev tree, false otherwise\n\tfunction revExists(revs, rev) {\n\t  var toVisit = revs.slice();\n\t  var splitRev = rev.split('-');\n\t  var targetPos = parseInt(splitRev[0], 10);\n\t  var targetId = splitRev[1];\n\t\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    if (node.pos === targetPos && node.ids[0] === targetId) {\n\t      return true;\n\t    }\n\t    var branches = node.ids[2];\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\tfunction getTrees(node) {\n\t  return node.ids;\n\t}\n\t\n\t// check if a specific revision of a doc has been deleted\n\t//  - metadata: the metadata object from the doc store\n\t//  - rev: (optional) the revision to check. defaults to winning revision\n\tfunction isDeleted(metadata, rev) {\n\t  if (!rev) {\n\t    rev = winningRev(metadata);\n\t  }\n\t  var id = rev.substring(rev.indexOf('-') + 1);\n\t  var toVisit = metadata.rev_tree.map(getTrees);\n\t\n\t  var tree;\n\t  while ((tree = toVisit.pop())) {\n\t    if (tree[0] === id) {\n\t      return !!tree[1].deleted;\n\t    }\n\t    toVisit = toVisit.concat(tree[2]);\n\t  }\n\t}\n\t\n\tfunction isLocalId(id) {\n\t  return (/^_local/).test(id);\n\t}\n\t\n\t// returns the current leaf node for a given revision\n\tfunction latest(rev, metadata) {\n\t  var toVisit = metadata.rev_tree.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var id = tree[0];\n\t    var opts = tree[1];\n\t    var branches = tree[2];\n\t    var isLeaf = branches.length === 0;\n\t\n\t    var history = node.history ? node.history.slice() : [];\n\t    history.push({id: id, pos: pos, opts: opts});\n\t\n\t    if (isLeaf) {\n\t      for (var i = 0, len = history.length; i < len; i++) {\n\t        var historyNode = history[i];\n\t        var historyRev = historyNode.pos + '-' + historyNode.id;\n\t\n\t        if (historyRev === rev) {\n\t          // return the rev of this leaf\n\t          return pos + '-' + id;\n\t        }\n\t      }\n\t    }\n\t\n\t    for (var j = 0, l = branches.length; j < l; j++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n\t}\n\t\n\tfunction evalFilter(input) {\n\t  return scopedEval('\"use strict\";\\nreturn ' + input + ';', {});\n\t}\n\t\n\tfunction evalView(input) {\n\t  var code = [\n\t    'return function(doc) {',\n\t    '  \"use strict\";',\n\t    '  var emitted = false;',\n\t    '  var emit = function (a, b) {',\n\t    '    emitted = true;',\n\t    '  };',\n\t    '  var view = ' + input + ';',\n\t    '  view(doc);',\n\t    '  if (emitted) {',\n\t    '    return true;',\n\t    '  }',\n\t    '};'\n\t  ].join('\\n');\n\t\n\t  return scopedEval(code, {});\n\t}\n\t\n\tinherits(Changes$1, events.EventEmitter);\n\t\n\tfunction tryCatchInChangeListener(self, change) {\n\t  // isolate try/catches to avoid V8 deoptimizations\n\t  try {\n\t    self.emit('change', change);\n\t  } catch (e) {\n\t    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n\t  }\n\t}\n\t\n\tfunction Changes$1(db, opts, callback) {\n\t  events.EventEmitter.call(this);\n\t  var self = this;\n\t  this.db = db;\n\t  opts = opts ? clone(opts) : {};\n\t  var complete = opts.complete = once(function (err, resp) {\n\t    if (err) {\n\t      if (listenerCount(self, 'error') > 0) {\n\t        self.emit('error', err);\n\t      }\n\t    } else {\n\t      self.emit('complete', resp);\n\t    }\n\t    self.removeAllListeners();\n\t    db.removeListener('destroyed', onDestroy);\n\t  });\n\t  if (callback) {\n\t    self.on('complete', function (resp) {\n\t      callback(null, resp);\n\t    });\n\t    self.on('error', callback);\n\t  }\n\t  function onDestroy() {\n\t    self.cancel();\n\t  }\n\t  db.once('destroyed', onDestroy);\n\t\n\t  opts.onChange = function (change) {\n\t    /* istanbul ignore if */\n\t    if (opts.isCancelled) {\n\t      return;\n\t    }\n\t    tryCatchInChangeListener(self, change);\n\t  };\n\t\n\t  var promise = new PouchPromise(function (fulfill, reject) {\n\t    opts.complete = function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        fulfill(res);\n\t      }\n\t    };\n\t  });\n\t  self.once('cancel', function () {\n\t    db.removeListener('destroyed', onDestroy);\n\t    opts.complete(null, {status: 'cancelled'});\n\t  });\n\t  this.then = promise.then.bind(promise);\n\t  this['catch'] = promise['catch'].bind(promise);\n\t  this.then(function (result) {\n\t    complete(null, result);\n\t  }, complete);\n\t\n\t\n\t\n\t  if (!db.taskqueue.isReady) {\n\t    db.taskqueue.addTask(function (failed) {\n\t      if (failed) {\n\t        opts.complete(failed);\n\t      } else if (self.isCancelled) {\n\t        self.emit('cancel');\n\t      } else {\n\t        self.doChanges(opts);\n\t      }\n\t    });\n\t  } else {\n\t    self.doChanges(opts);\n\t  }\n\t}\n\tChanges$1.prototype.cancel = function () {\n\t  this.isCancelled = true;\n\t  if (this.db.taskqueue.isReady) {\n\t    this.emit('cancel');\n\t  }\n\t};\n\tfunction processChange(doc, metadata, opts) {\n\t  var changeList = [{rev: doc._rev}];\n\t  if (opts.style === 'all_docs') {\n\t    changeList = collectLeaves(metadata.rev_tree)\n\t    .map(function (x) { return {rev: x.rev}; });\n\t  }\n\t  var change = {\n\t    id: metadata.id,\n\t    changes: changeList,\n\t    doc: doc\n\t  };\n\t\n\t  if (isDeleted(metadata, doc._rev)) {\n\t    change.deleted = true;\n\t  }\n\t  if (opts.conflicts) {\n\t    change.doc._conflicts = collectConflicts(metadata);\n\t    if (!change.doc._conflicts.length) {\n\t      delete change.doc._conflicts;\n\t    }\n\t  }\n\t  return change;\n\t}\n\t\n\tChanges$1.prototype.doChanges = function (opts) {\n\t  var self = this;\n\t  var callback = opts.complete;\n\t\n\t  opts = clone(opts);\n\t  if ('live' in opts && !('continuous' in opts)) {\n\t    opts.continuous = opts.live;\n\t  }\n\t  opts.processChange = processChange;\n\t\n\t  if (opts.since === 'latest') {\n\t    opts.since = 'now';\n\t  }\n\t  if (!opts.since) {\n\t    opts.since = 0;\n\t  }\n\t  if (opts.since === 'now') {\n\t    this.db.info().then(function (info) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        callback(null, {status: 'cancelled'});\n\t        return;\n\t      }\n\t      opts.since = info.update_seq;\n\t      self.doChanges(opts);\n\t    }, callback);\n\t    return;\n\t  }\n\t\n\t\n\t  if (opts.view && !opts.filter) {\n\t    opts.filter = '_view';\n\t  }\n\t\n\t  if (opts.filter && typeof opts.filter === 'string') {\n\t    if (opts.filter === '_view') {\n\t      opts.view = normalizeDesignDocFunctionName(opts.view);\n\t    } else {\n\t      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n\t    }\n\t\n\t    if (this.db.type() !== 'http' && !opts.doc_ids) {\n\t      return this.filterChanges(opts);\n\t    }\n\t  }\n\t\n\t  if (!('descending' in opts)) {\n\t    opts.descending = false;\n\t  }\n\t\n\t  // 0 and 1 should return 1 document\n\t  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n\t  opts.complete = callback;\n\t  var newPromise = this.db._changes(opts);\n\t  /* istanbul ignore else */\n\t  if (newPromise && typeof newPromise.cancel === 'function') {\n\t    var cancel = self.cancel;\n\t    self.cancel = getArguments(function (args) {\n\t      newPromise.cancel();\n\t      cancel.apply(this, args);\n\t    });\n\t  }\n\t};\n\t\n\tChanges$1.prototype.filterChanges = function (opts) {\n\t  var self = this;\n\t  var callback = opts.complete;\n\t  if (opts.filter === '_view') {\n\t    if (!opts.view || typeof opts.view !== 'string') {\n\t      var err = createError(BAD_REQUEST,\n\t        '`view` filter parameter not found or invalid.');\n\t      return callback(err);\n\t    }\n\t    // fetch a view from a design doc, make it behave like a filter\n\t    var viewName = parseDesignDocFunctionName(opts.view);\n\t    this.db.get('_design/' + viewName[0], function (err, ddoc) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        return callback(null, {status: 'cancelled'});\n\t      }\n\t      /* istanbul ignore next */\n\t      if (err) {\n\t        return callback(generateErrorFromResponse(err));\n\t      }\n\t      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n\t        ddoc.views[viewName[1]].map;\n\t      if (!mapFun) {\n\t        return callback(createError(MISSING_DOC,\n\t          (ddoc.views ? 'missing json key: ' + viewName[1] :\n\t            'missing json key: views')));\n\t      }\n\t      opts.filter = evalView(mapFun);\n\t      self.doChanges(opts);\n\t    });\n\t  } else {\n\t    // fetch a filter from a design doc\n\t    var filterName = parseDesignDocFunctionName(opts.filter);\n\t    if (!filterName) {\n\t      return self.doChanges(opts);\n\t    }\n\t    this.db.get('_design/' + filterName[0], function (err, ddoc) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        return callback(null, {status: 'cancelled'});\n\t      }\n\t      /* istanbul ignore next */\n\t      if (err) {\n\t        return callback(generateErrorFromResponse(err));\n\t      }\n\t      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n\t      if (!filterFun) {\n\t        return callback(createError(MISSING_DOC,\n\t          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n\t            : 'missing json key: filters')));\n\t      }\n\t      opts.filter = evalFilter(filterFun);\n\t      self.doChanges(opts);\n\t    });\n\t  }\n\t};\n\t\n\t/*\n\t * A generic pouch adapter\n\t */\n\t\n\tfunction compare(left, right) {\n\t  return left < right ? -1 : left > right ? 1 : 0;\n\t}\n\t\n\t// Wrapper for functions that call the bulkdocs api with a single doc,\n\t// if the first result is an error, return an error\n\tfunction yankError(callback) {\n\t  return function (err, results) {\n\t    if (err || (results[0] && results[0].error)) {\n\t      callback(err || results[0]);\n\t    } else {\n\t      callback(null, results.length ? results[0]  : results);\n\t    }\n\t  };\n\t}\n\t\n\t// clean docs given to us by the user\n\tfunction cleanDocs(docs) {\n\t  for (var i = 0; i < docs.length; i++) {\n\t    var doc = docs[i];\n\t    if (doc._deleted) {\n\t      delete doc._attachments; // ignore atts for deleted docs\n\t    } else if (doc._attachments) {\n\t      // filter out extraneous keys from _attachments\n\t      var atts = Object.keys(doc._attachments);\n\t      for (var j = 0; j < atts.length; j++) {\n\t        var att = atts[j];\n\t        doc._attachments[att] = pick(doc._attachments[att],\n\t          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t// compare two docs, first by _id then by _rev\n\tfunction compareByIdThenRev(a, b) {\n\t  var idCompare = compare(a._id, b._id);\n\t  if (idCompare !== 0) {\n\t    return idCompare;\n\t  }\n\t  var aStart = a._revisions ? a._revisions.start : 0;\n\t  var bStart = b._revisions ? b._revisions.start : 0;\n\t  return compare(aStart, bStart);\n\t}\n\t\n\t// for every node in a revision tree computes its distance from the closest\n\t// leaf\n\tfunction computeHeight(revs) {\n\t  var height = {};\n\t  var edges = [];\n\t  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n\t    var rev = pos + \"-\" + id;\n\t    if (isLeaf) {\n\t      height[rev] = 0;\n\t    }\n\t    if (prnt !== undefined) {\n\t      edges.push({from: prnt, to: rev});\n\t    }\n\t    return rev;\n\t  });\n\t\n\t  edges.reverse();\n\t  edges.forEach(function (edge) {\n\t    if (height[edge.from] === undefined) {\n\t      height[edge.from] = 1 + height[edge.to];\n\t    } else {\n\t      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n\t    }\n\t  });\n\t  return height;\n\t}\n\t\n\tfunction allDocsKeysQuery(api, opts, callback) {\n\t  var keys =  ('limit' in opts) ?\n\t      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n\t      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n\t  if (opts.descending) {\n\t    keys.reverse();\n\t  }\n\t  if (!keys.length) {\n\t    return api._allDocs({limit: 0}, callback);\n\t  }\n\t  var finalResults = {\n\t    offset: opts.skip\n\t  };\n\t  return PouchPromise.all(keys.map(function (key) {\n\t    var subOpts = extend$1({key: key, deleted: 'ok'}, opts);\n\t    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n\t      delete subOpts[optKey];\n\t    });\n\t    return new PouchPromise(function (resolve, reject) {\n\t      api._allDocs(subOpts, function (err, res) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          return reject(err);\n\t        }\n\t        finalResults.total_rows = res.total_rows;\n\t        resolve(res.rows[0] || {key: key, error: 'not_found'});\n\t      });\n\t    });\n\t  })).then(function (results) {\n\t    finalResults.rows = results;\n\t    return finalResults;\n\t  });\n\t}\n\t\n\t// all compaction is done in a queue, to avoid attaching\n\t// too many listeners at once\n\tfunction doNextCompaction(self) {\n\t  var task = self._compactionQueue[0];\n\t  var opts = task.opts;\n\t  var callback = task.callback;\n\t  self.get('_local/compaction').catch(function () {\n\t    return false;\n\t  }).then(function (doc) {\n\t    if (doc && doc.last_seq) {\n\t      opts.last_seq = doc.last_seq;\n\t    }\n\t    self._compact(opts, function (err, res) {\n\t      /* istanbul ignore if */\n\t      if (err) {\n\t        callback(err);\n\t      } else {\n\t        callback(null, res);\n\t      }\n\t      immediate(function () {\n\t        self._compactionQueue.shift();\n\t        if (self._compactionQueue.length) {\n\t          doNextCompaction(self);\n\t        }\n\t      });\n\t    });\n\t  });\n\t}\n\t\n\tfunction attachmentNameError(name) {\n\t  if (name.charAt(0) === '_') {\n\t    return name + 'is not a valid attachment name, attachment ' +\n\t      'names cannot start with \\'_\\'';\n\t  }\n\t  return false;\n\t}\n\t\n\tinherits(AbstractPouchDB, events.EventEmitter);\n\t\n\tfunction AbstractPouchDB() {\n\t  events.EventEmitter.call(this);\n\t}\n\t\n\tAbstractPouchDB.prototype.post =\n\t  adapterFun('post', function (doc, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof doc !== 'object' || Array.isArray(doc)) {\n\t    return callback(createError(NOT_AN_OBJECT));\n\t  }\n\t  this.bulkDocs({docs: [doc]}, opts, yankError(callback));\n\t});\n\t\n\tAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n\t  if (typeof opts === 'function') {\n\t    cb = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof doc !== 'object' || Array.isArray(doc)) {\n\t    return cb(createError(NOT_AN_OBJECT));\n\t  }\n\t  invalidIdError(doc._id);\n\t  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n\t    if (doc._deleted) {\n\t      return this._removeLocal(doc, cb);\n\t    } else {\n\t      return this._putLocal(doc, cb);\n\t    }\n\t  }\n\t  if (typeof this._put === 'function' && opts.new_edits !== false) {\n\t    this._put(doc, opts, cb);\n\t  } else {\n\t    this.bulkDocs({docs: [doc]}, opts, yankError(cb));\n\t  }\n\t});\n\t\n\tAbstractPouchDB.prototype.putAttachment =\n\t  adapterFun('putAttachment', function (docId, attachmentId, rev,\n\t                                              blob, type) {\n\t  var api = this;\n\t  if (typeof type === 'function') {\n\t    type = blob;\n\t    blob = rev;\n\t    rev = null;\n\t  }\n\t  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n\t  /* istanbul ignore if */\n\t  if (typeof type === 'undefined') {\n\t    type = blob;\n\t    blob = rev;\n\t    rev = null;\n\t  }\n\t  if (!type) {\n\t    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n\t  }\n\t\n\t  function createAttachment(doc) {\n\t    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n\t    doc._attachments = doc._attachments || {};\n\t    doc._attachments[attachmentId] = {\n\t      content_type: type,\n\t      data: blob,\n\t      revpos: ++prevrevpos\n\t    };\n\t    return api.put(doc);\n\t  }\n\t\n\t  return api.get(docId).then(function (doc) {\n\t    if (doc._rev !== rev) {\n\t      throw createError(REV_CONFLICT);\n\t    }\n\t\n\t    return createAttachment(doc);\n\t  }, function (err) {\n\t     // create new doc\n\t    /* istanbul ignore else */\n\t    if (err.reason === MISSING_DOC.message) {\n\t      return createAttachment({_id: docId});\n\t    } else {\n\t      throw err;\n\t    }\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.removeAttachment =\n\t  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n\t                                                 callback) {\n\t  var self = this;\n\t  self.get(docId, function (err, obj) {\n\t    /* istanbul ignore if */\n\t    if (err) {\n\t      callback(err);\n\t      return;\n\t    }\n\t    if (obj._rev !== rev) {\n\t      callback(createError(REV_CONFLICT));\n\t      return;\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!obj._attachments) {\n\t      return callback();\n\t    }\n\t    delete obj._attachments[attachmentId];\n\t    if (Object.keys(obj._attachments).length === 0) {\n\t      delete obj._attachments;\n\t    }\n\t    self.put(obj, callback);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.remove =\n\t  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n\t  var doc;\n\t  if (typeof optsOrRev === 'string') {\n\t    // id, rev, opts, callback style\n\t    doc = {\n\t      _id: docOrId,\n\t      _rev: optsOrRev\n\t    };\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t  } else {\n\t    // doc, opts, callback style\n\t    doc = docOrId;\n\t    if (typeof optsOrRev === 'function') {\n\t      callback = optsOrRev;\n\t      opts = {};\n\t    } else {\n\t      callback = opts;\n\t      opts = optsOrRev;\n\t    }\n\t  }\n\t  opts = opts || {};\n\t  opts.was_delete = true;\n\t  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n\t  newDoc._deleted = true;\n\t  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n\t    return this._removeLocal(doc, callback);\n\t  }\n\t  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback));\n\t});\n\t\n\tAbstractPouchDB.prototype.revsDiff =\n\t  adapterFun('revsDiff', function (req, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  var ids = Object.keys(req);\n\t\n\t  if (!ids.length) {\n\t    return callback(null, {});\n\t  }\n\t\n\t  var count = 0;\n\t  var missing = new _Map();\n\t\n\t  function addToMissing(id, revId) {\n\t    if (!missing.has(id)) {\n\t      missing.set(id, {missing: []});\n\t    }\n\t    missing.get(id).missing.push(revId);\n\t  }\n\t\n\t  function processDoc(id, rev_tree) {\n\t    // Is this fast enough? Maybe we should switch to a set simulated by a map\n\t    var missingForId = req[id].slice(0);\n\t    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n\t      opts) {\n\t        var rev = pos + '-' + revHash;\n\t        var idx = missingForId.indexOf(rev);\n\t        if (idx === -1) {\n\t          return;\n\t        }\n\t\n\t        missingForId.splice(idx, 1);\n\t        /* istanbul ignore if */\n\t        if (opts.status !== 'available') {\n\t          addToMissing(id, rev);\n\t        }\n\t      });\n\t\n\t    // Traversing the tree is synchronous, so now `missingForId` contains\n\t    // revisions that were not found in the tree\n\t    missingForId.forEach(function (rev) {\n\t      addToMissing(id, rev);\n\t    });\n\t  }\n\t\n\t  ids.map(function (id) {\n\t    this._getRevisionTree(id, function (err, rev_tree) {\n\t      if (err && err.status === 404 && err.message === 'missing') {\n\t        missing.set(id, {missing: req[id]});\n\t      } else if (err) {\n\t        /* istanbul ignore next */\n\t        return callback(err);\n\t      } else {\n\t        processDoc(id, rev_tree);\n\t      }\n\t\n\t      if (++count === ids.length) {\n\t        // convert LazyMap to object\n\t        var missingObj = {};\n\t        missing.forEach(function (value, key) {\n\t          missingObj[key] = value;\n\t        });\n\t        return callback(null, missingObj);\n\t      }\n\t    });\n\t  }, this);\n\t});\n\t\n\t// _bulk_get API for faster replication, as described in\n\t// https://github.com/apache/couchdb-chttpd/pull/33\n\t// At the \"abstract\" level, it will just run multiple get()s in\n\t// parallel, because this isn't much of a performance cost\n\t// for local databases (except the cost of multiple transactions, which is\n\t// small). The http adapter overrides this in order\n\t// to do a more efficient single HTTP request.\n\tAbstractPouchDB.prototype.bulkGet =\n\t  adapterFun('bulkGet', function (opts, callback) {\n\t  bulkGet(this, opts, callback);\n\t});\n\t\n\t// compact one document and fire callback\n\t// by compacting we mean removing all revisions which\n\t// are further from the leaf in revision tree than max_height\n\tAbstractPouchDB.prototype.compactDocument =\n\t  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n\t  var self = this;\n\t  this._getRevisionTree(docId, function (err, revTree) {\n\t    /* istanbul ignore if */\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    var height = computeHeight(revTree);\n\t    var candidates = [];\n\t    var revs = [];\n\t    Object.keys(height).forEach(function (rev) {\n\t      if (height[rev] > maxHeight) {\n\t        candidates.push(rev);\n\t      }\n\t    });\n\t\n\t    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n\t      var rev = pos + '-' + revHash;\n\t      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n\t        revs.push(rev);\n\t      }\n\t    });\n\t    self._doCompaction(docId, revs, callback);\n\t  });\n\t});\n\t\n\t// compact the whole database using single document\n\t// compaction\n\tAbstractPouchDB.prototype.compact =\n\t  adapterFun('compact', function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  var self = this;\n\t  opts = opts || {};\n\t\n\t  self._compactionQueue = self._compactionQueue || [];\n\t  self._compactionQueue.push({opts: opts, callback: callback});\n\t  if (self._compactionQueue.length === 1) {\n\t    doNextCompaction(self);\n\t  }\n\t});\n\tAbstractPouchDB.prototype._compact = function (opts, callback) {\n\t  var self = this;\n\t  var changesOpts = {\n\t    return_docs: false,\n\t    last_seq: opts.last_seq || 0\n\t  };\n\t  var promises = [];\n\t\n\t  function onChange(row) {\n\t    promises.push(self.compactDocument(row.id, 0));\n\t  }\n\t  function onComplete(resp) {\n\t    var lastSeq = resp.last_seq;\n\t    PouchPromise.all(promises).then(function () {\n\t      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n\t        if (!doc.last_seq || doc.last_seq < lastSeq) {\n\t          doc.last_seq = lastSeq;\n\t          return doc;\n\t        }\n\t        return false; // somebody else got here first, don't update\n\t      });\n\t    }).then(function () {\n\t      callback(null, {ok: true});\n\t    }).catch(callback);\n\t  }\n\t  self.changes(changesOpts)\n\t    .on('change', onChange)\n\t    .on('complete', onComplete)\n\t    .on('error', callback);\n\t};\n\t\n\t/* Begin api wrappers. Specific functionality to storage belongs in the\n\t   _[method] */\n\tAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n\t  if (typeof opts === 'function') {\n\t    cb = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof id !== 'string') {\n\t    return cb(createError(INVALID_ID));\n\t  }\n\t  if (isLocalId(id) && typeof this._getLocal === 'function') {\n\t    return this._getLocal(id, cb);\n\t  }\n\t  var leaves = [], self = this;\n\t\n\t  function finishOpenRevs() {\n\t    var result = [];\n\t    var count = leaves.length;\n\t    /* istanbul ignore if */\n\t    if (!count) {\n\t      return cb(null, result);\n\t    }\n\t\n\t    // order with open_revs is unspecified\n\t    leaves.forEach(function (leaf) {\n\t      self.get(id, {\n\t        rev: leaf,\n\t        revs: opts.revs,\n\t        latest: opts.latest,\n\t        attachments: opts.attachments\n\t      }, function (err, doc) {\n\t        if (!err) {\n\t          // using latest=true can produce duplicates\n\t          var existing;\n\t          for (var i = 0, l = result.length; i < l; i++) {\n\t            if (result[i].ok && result[i].ok._rev === doc._rev) {\n\t              existing = true;\n\t              break;\n\t            }\n\t          }\n\t          if (!existing) {\n\t            result.push({ok: doc});\n\t          }\n\t        } else {\n\t          result.push({missing: leaf});\n\t        }\n\t        count--;\n\t        if (!count) {\n\t          cb(null, result);\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  if (opts.open_revs) {\n\t    if (opts.open_revs === \"all\") {\n\t      this._getRevisionTree(id, function (err, rev_tree) {\n\t        if (err) {\n\t          return cb(err);\n\t        }\n\t        leaves = collectLeaves(rev_tree).map(function (leaf) {\n\t          return leaf.rev;\n\t        });\n\t        finishOpenRevs();\n\t      });\n\t    } else {\n\t      if (Array.isArray(opts.open_revs)) {\n\t        leaves = opts.open_revs;\n\t        for (var i = 0; i < leaves.length; i++) {\n\t          var l = leaves[i];\n\t          // looks like it's the only thing couchdb checks\n\t          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n\t            return cb(createError(INVALID_REV));\n\t          }\n\t        }\n\t        finishOpenRevs();\n\t      } else {\n\t        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n\t      }\n\t    }\n\t    return; // open_revs does not like other options\n\t  }\n\t\n\t  return this._get(id, opts, function (err, result) {\n\t    if (err) {\n\t      return cb(err);\n\t    }\n\t\n\t    var doc = result.doc;\n\t    var metadata = result.metadata;\n\t    var ctx = result.ctx;\n\t\n\t    if (opts.conflicts) {\n\t      var conflicts = collectConflicts(metadata);\n\t      if (conflicts.length) {\n\t        doc._conflicts = conflicts;\n\t      }\n\t    }\n\t\n\t    if (isDeleted(metadata, doc._rev)) {\n\t      doc._deleted = true;\n\t    }\n\t\n\t    if (opts.revs || opts.revs_info) {\n\t      var splittedRev = doc._rev.split('-');\n\t      var revNo       = parseInt(splittedRev[0], 10);\n\t      var revHash     = splittedRev[1];\n\t\n\t      var paths = rootToLeaf(metadata.rev_tree);\n\t      var path = null;\n\t\n\t      for (var i = 0; i < paths.length; i++) {\n\t        var currentPath = paths[i];\n\t        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n\t          .indexOf(revHash);\n\t        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\t\n\t        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n\t          path = currentPath;\n\t        }\n\t      }\n\t\n\t      var indexOfRev = path.ids.map(function (x) { return x.id; })\n\t        .indexOf(doc._rev.split('-')[1]) + 1;\n\t      var howMany = path.ids.length - indexOfRev;\n\t      path.ids.splice(indexOfRev, howMany);\n\t      path.ids.reverse();\n\t\n\t      if (opts.revs) {\n\t        doc._revisions = {\n\t          start: (path.pos + path.ids.length) - 1,\n\t          ids: path.ids.map(function (rev) {\n\t            return rev.id;\n\t          })\n\t        };\n\t      }\n\t      if (opts.revs_info) {\n\t        var pos =  path.pos + path.ids.length;\n\t        doc._revs_info = path.ids.map(function (rev) {\n\t          pos--;\n\t          return {\n\t            rev: pos + '-' + rev.id,\n\t            status: rev.opts.status\n\t          };\n\t        });\n\t      }\n\t    }\n\t\n\t    if (opts.attachments && doc._attachments) {\n\t      var attachments = doc._attachments;\n\t      var count = Object.keys(attachments).length;\n\t      if (count === 0) {\n\t        return cb(null, doc);\n\t      }\n\t      Object.keys(attachments).forEach(function (key) {\n\t        this._getAttachment(doc._id, key, attachments[key], {\n\t          // Previously the revision handling was done in adapter.js\n\t          // getAttachment, however since idb-next doesnt we need to\n\t          // pass the rev through\n\t          rev: doc._rev,\n\t          binary: opts.binary,\n\t          ctx: ctx\n\t        }, function (err, data) {\n\t          var att = doc._attachments[key];\n\t          att.data = data;\n\t          delete att.stub;\n\t          delete att.length;\n\t          if (!--count) {\n\t            cb(null, doc);\n\t          }\n\t        });\n\t      }, self);\n\t    } else {\n\t      if (doc._attachments) {\n\t        for (var key in doc._attachments) {\n\t          /* istanbul ignore else */\n\t          if (doc._attachments.hasOwnProperty(key)) {\n\t            doc._attachments[key].stub = true;\n\t          }\n\t        }\n\t      }\n\t      cb(null, doc);\n\t    }\n\t  });\n\t});\n\t\n\t// TODO: I dont like this, it forces an extra read for every\n\t// attachment read and enforces a confusing api between\n\t// adapter.js and the adapter implementation\n\tAbstractPouchDB.prototype.getAttachment =\n\t  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n\t  var self = this;\n\t  if (opts instanceof Function) {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  this._get(docId, opts, function (err, res) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n\t      opts.ctx = res.ctx;\n\t      opts.binary = true;\n\t      self._getAttachment(docId, attachmentId,\n\t                          res.doc._attachments[attachmentId], opts, callback);\n\t    } else {\n\t      return callback(createError(MISSING_DOC));\n\t    }\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.allDocs =\n\t  adapterFun('allDocs', function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n\t  if (opts.start_key) {\n\t    opts.startkey = opts.start_key;\n\t  }\n\t  if (opts.end_key) {\n\t    opts.endkey = opts.end_key;\n\t  }\n\t  if ('keys' in opts) {\n\t    if (!Array.isArray(opts.keys)) {\n\t      return callback(new TypeError('options.keys must be an array'));\n\t    }\n\t    var incompatibleOpt =\n\t      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n\t      return incompatibleOpt in opts;\n\t    })[0];\n\t    if (incompatibleOpt) {\n\t      callback(createError(QUERY_PARSE_ERROR,\n\t        'Query parameter `' + incompatibleOpt +\n\t        '` is not compatible with multi-get'\n\t      ));\n\t      return;\n\t    }\n\t    if (this.type() !== 'http') {\n\t      return allDocsKeysQuery(this, opts, callback);\n\t    }\n\t  }\n\t\n\t  return this._allDocs(opts, callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.changes = function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return new Changes$1(this, opts, callback);\n\t};\n\t\n\tAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n\t  this._closed = true;\n\t  this.emit('closed');\n\t  return this._close(callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n\t  var self = this;\n\t  this._info(function (err, info) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    // assume we know better than the adapter, unless it informs us\n\t    info.db_name = info.db_name || self.name;\n\t    info.auto_compaction = !!(self.auto_compaction && self.type() !== 'http');\n\t    info.adapter = self.type();\n\t    callback(null, info);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n\t  return this._id(callback);\n\t});\n\t\n\t/* istanbul ignore next */\n\tAbstractPouchDB.prototype.type = function () {\n\t  return (typeof this._type === 'function') ? this._type() : this.adapter;\n\t};\n\t\n\tAbstractPouchDB.prototype.bulkDocs =\n\t  adapterFun('bulkDocs', function (req, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  if (Array.isArray(req)) {\n\t    req = {\n\t      docs: req\n\t    };\n\t  }\n\t\n\t  if (!req || !req.docs || !Array.isArray(req.docs)) {\n\t    return callback(createError(MISSING_BULK_DOCS));\n\t  }\n\t\n\t  for (var i = 0; i < req.docs.length; ++i) {\n\t    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n\t      return callback(createError(NOT_AN_OBJECT));\n\t    }\n\t  }\n\t\n\t  var attachmentError;\n\t  req.docs.forEach(function (doc) {\n\t    if (doc._attachments) {\n\t      Object.keys(doc._attachments).forEach(function (name) {\n\t        attachmentError = attachmentError || attachmentNameError(name);\n\t        if (!doc._attachments[name].content_type) {\n\t          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n\t        }\n\t      });\n\t    }\n\t  });\n\t\n\t  if (attachmentError) {\n\t    return callback(createError(BAD_REQUEST, attachmentError));\n\t  }\n\t\n\t  if (!('new_edits' in opts)) {\n\t    if ('new_edits' in req) {\n\t      opts.new_edits = req.new_edits;\n\t    } else {\n\t      opts.new_edits = true;\n\t    }\n\t  }\n\t\n\t  if (!opts.new_edits && this.type() !== 'http') {\n\t    // ensure revisions of the same doc are sorted, so that\n\t    // the local adapter processes them correctly (#2935)\n\t    req.docs.sort(compareByIdThenRev);\n\t  }\n\t\n\t  cleanDocs(req.docs);\n\t\n\t  return this._bulkDocs(req, opts, function (err, res) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    if (!opts.new_edits) {\n\t      // this is what couch does when new_edits is false\n\t      res = res.filter(function (x) {\n\t        return x.error;\n\t      });\n\t    }\n\t    callback(null, res);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.registerDependentDatabase =\n\t  adapterFun('registerDependentDatabase', function (dependentDb,\n\t                                                          callback) {\n\t  var depDB = new this.constructor(dependentDb, this.__opts);\n\t\n\t  function diffFun(doc) {\n\t    doc.dependentDbs = doc.dependentDbs || {};\n\t    if (doc.dependentDbs[dependentDb]) {\n\t      return false; // no update required\n\t    }\n\t    doc.dependentDbs[dependentDb] = true;\n\t    return doc;\n\t  }\n\t  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n\t    .then(function () {\n\t      callback(null, {db: depDB});\n\t    }).catch(callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.destroy =\n\t  adapterFun('destroy', function (opts, callback) {\n\t\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  var self = this;\n\t  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\t\n\t  function destroyDb() {\n\t    // call destroy method of the particular adaptor\n\t    self._destroy(opts, function (err, resp) {\n\t      if (err) {\n\t        return callback(err);\n\t      }\n\t      self._destroyed = true;\n\t      self.emit('destroyed');\n\t      callback(null, resp || { 'ok': true });\n\t    });\n\t  }\n\t\n\t  if (self.type() === 'http') {\n\t    // no need to check for dependent DBs if it's a remote DB\n\t    return destroyDb();\n\t  }\n\t\n\t  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n\t    if (err) {\n\t      /* istanbul ignore if */\n\t      if (err.status !== 404) {\n\t        return callback(err);\n\t      } else { // no dependencies\n\t        return destroyDb();\n\t      }\n\t    }\n\t    var dependentDbs = localDoc.dependentDbs;\n\t    var PouchDB = self.constructor;\n\t    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n\t      // use_prefix is only false in the browser\n\t      /* istanbul ignore next */\n\t      var trueName = usePrefix ?\n\t        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n\t      return new PouchDB(trueName, self.__opts).destroy();\n\t    });\n\t    PouchPromise.all(deletedMap).then(destroyDb, callback);\n\t  });\n\t});\n\t\n\tfunction TaskQueue() {\n\t  this.isReady = false;\n\t  this.failed = false;\n\t  this.queue = [];\n\t}\n\t\n\tTaskQueue.prototype.execute = function () {\n\t  var fun;\n\t  if (this.failed) {\n\t    while ((fun = this.queue.shift())) {\n\t      fun(this.failed);\n\t    }\n\t  } else {\n\t    while ((fun = this.queue.shift())) {\n\t      fun();\n\t    }\n\t  }\n\t};\n\t\n\tTaskQueue.prototype.fail = function (err) {\n\t  this.failed = err;\n\t  this.execute();\n\t};\n\t\n\tTaskQueue.prototype.ready = function (db) {\n\t  this.isReady = true;\n\t  this.db = db;\n\t  this.execute();\n\t};\n\t\n\tTaskQueue.prototype.addTask = function (fun) {\n\t  this.queue.push(fun);\n\t  if (this.failed) {\n\t    this.execute();\n\t  }\n\t};\n\t\n\tfunction parseAdapter(name, opts) {\n\t  var match = name.match(/([a-z\\-]*):\\/\\/(.*)/);\n\t  if (match) {\n\t    // the http adapter expects the fully qualified name\n\t    return {\n\t      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n\t      adapter: match[1]\n\t    };\n\t  }\n\t\n\t  var adapters = PouchDB.adapters;\n\t  var preferredAdapters = PouchDB.preferredAdapters;\n\t  var prefix = PouchDB.prefix;\n\t  var adapterName = opts.adapter;\n\t\n\t  if (!adapterName) { // automatically determine adapter\n\t    for (var i = 0; i < preferredAdapters.length; ++i) {\n\t      adapterName = preferredAdapters[i];\n\t      // check for browsers that have been upgraded from websql-only to websql+idb\n\t      /* istanbul ignore if */\n\t      if (adapterName === 'idb' && 'websql' in adapters &&\n\t          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n\t        // log it, because this can be confusing during development\n\t        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n\t          ' avoid data loss, because it was already opened with WebSQL.');\n\t        continue; // keep using websql to avoid user data loss\n\t      }\n\t      break;\n\t    }\n\t  }\n\t\n\t  var adapter = adapters[adapterName];\n\t\n\t  // if adapter is invalid, then an error will be thrown later\n\t  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n\t    adapter.use_prefix : true;\n\t\n\t  return {\n\t    name: usePrefix ? (prefix + name) : name,\n\t    adapter: adapterName\n\t  };\n\t}\n\t\n\t// OK, so here's the deal. Consider this code:\n\t//     var db1 = new PouchDB('foo');\n\t//     var db2 = new PouchDB('foo');\n\t//     db1.destroy();\n\t// ^ these two both need to emit 'destroyed' events,\n\t// as well as the PouchDB constructor itself.\n\t// So we have one db object (whichever one got destroy() called on it)\n\t// responsible for emitting the initial event, which then gets emitted\n\t// by the constructor, which then broadcasts it to any other dbs\n\t// that may have been created with the same name.\n\tfunction prepareForDestruction(self) {\n\t\n\t  var destructionListeners = self.constructor._destructionListeners;\n\t\n\t  function onDestroyed() {\n\t    self.removeListener('closed', onClosed);\n\t    self.constructor.emit('destroyed', self.name);\n\t  }\n\t\n\t  function onConstructorDestroyed() {\n\t    self.removeListener('destroyed', onDestroyed);\n\t    self.removeListener('closed', onClosed);\n\t    self.emit('destroyed');\n\t  }\n\t\n\t  function onClosed() {\n\t    self.removeListener('destroyed', onDestroyed);\n\t    destructionListeners.delete(self.name);\n\t  }\n\t\n\t  self.once('destroyed', onDestroyed);\n\t  self.once('closed', onClosed);\n\t\n\t  // in setup.js, the constructor is primed to listen for destroy events\n\t  if (!destructionListeners.has(self.name)) {\n\t    destructionListeners.set(self.name, []);\n\t  }\n\t  destructionListeners.get(self.name).push(onConstructorDestroyed);\n\t}\n\t\n\tinherits(PouchDB, AbstractPouchDB);\n\tfunction PouchDB(name, opts) {\n\t  // In Node our test suite only tests this for PouchAlt unfortunately\n\t  /* istanbul ignore if */\n\t  if (!(this instanceof PouchDB)) {\n\t    return new PouchDB(name, opts);\n\t  }\n\t\n\t  var self = this;\n\t  opts = opts || {};\n\t\n\t  if (name && typeof name === 'object') {\n\t    opts = name;\n\t    name = opts.name;\n\t    delete opts.name;\n\t  }\n\t\n\t  this.__opts = opts = clone(opts);\n\t\n\t  self.auto_compaction = opts.auto_compaction;\n\t  self.prefix = PouchDB.prefix;\n\t\n\t  if (typeof name !== 'string') {\n\t    throw new Error('Missing/invalid DB name');\n\t  }\n\t\n\t  var prefixedName = (opts.prefix || '') + name;\n\t  var backend = parseAdapter(prefixedName, opts);\n\t\n\t  opts.name = backend.name;\n\t  opts.adapter = opts.adapter || backend.adapter;\n\t\n\t  self.name = name;\n\t  self._adapter = opts.adapter;\n\t  debug('pouchdb:adapter')('Picked adapter: ' + opts.adapter);\n\t\n\t  if (!PouchDB.adapters[opts.adapter] ||\n\t      !PouchDB.adapters[opts.adapter].valid()) {\n\t    throw new Error('Invalid Adapter: ' + opts.adapter);\n\t  }\n\t\n\t  AbstractPouchDB.call(self);\n\t  self.taskqueue = new TaskQueue();\n\t\n\t  self.adapter = opts.adapter;\n\t\n\t  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n\t    if (err) {\n\t      return self.taskqueue.fail(err);\n\t    }\n\t    prepareForDestruction(self);\n\t\n\t    self.emit('created', self);\n\t    PouchDB.emit('created', self.name);\n\t    self.taskqueue.ready(self);\n\t  });\n\t\n\t}\n\t\n\tPouchDB.debug = debug;\n\t\n\tPouchDB.adapters = {};\n\tPouchDB.preferredAdapters = [];\n\t\n\tPouchDB.prefix = '_pouch_';\n\t\n\tvar eventEmitter = new events.EventEmitter();\n\t\n\tfunction setUpEventEmitter(Pouch) {\n\t  Object.keys(events.EventEmitter.prototype).forEach(function (key) {\n\t    if (typeof events.EventEmitter.prototype[key] === 'function') {\n\t      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n\t    }\n\t  });\n\t\n\t  // these are created in constructor.js, and allow us to notify each DB with\n\t  // the same name that it was destroyed, via the constructor object\n\t  var destructListeners = Pouch._destructionListeners = new _Map();\n\t  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n\t    destructListeners.get(name).forEach(function (callback) {\n\t      callback();\n\t    });\n\t    destructListeners.delete(name);\n\t  });\n\t}\n\t\n\tsetUpEventEmitter(PouchDB);\n\t\n\tPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n\t  /* istanbul ignore else */\n\t  if (obj.valid()) {\n\t    PouchDB.adapters[id] = obj;\n\t    if (addToPreferredAdapters) {\n\t      PouchDB.preferredAdapters.push(id);\n\t    }\n\t  }\n\t};\n\t\n\tPouchDB.plugin = function (obj) {\n\t  if (typeof obj === 'function') { // function style for plugins\n\t    obj(PouchDB);\n\t  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0){\n\t    throw new Error('Invalid plugin: got \\\"' + obj + '\\\", expected an object or a function');\n\t  } else {\n\t    Object.keys(obj).forEach(function (id) { // object style for plugins\n\t      PouchDB.prototype[id] = obj[id];\n\t    });\n\t  }\n\t  return PouchDB;\n\t};\n\t\n\tPouchDB.defaults = function (defaultOpts) {\n\t  function PouchAlt(name, opts) {\n\t    if (!(this instanceof PouchAlt)) {\n\t      return new PouchAlt(name, opts);\n\t    }\n\t\n\t    opts = opts || {};\n\t\n\t    if (name && typeof name === 'object') {\n\t      opts = name;\n\t      name = opts.name;\n\t      delete opts.name;\n\t    }\n\t\n\t    opts = extend$1({}, PouchAlt.__defaults, opts);\n\t    PouchDB.call(this, name, opts);\n\t  }\n\t\n\t  inherits(PouchAlt, PouchDB);\n\t\n\t  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n\t  Object.keys(PouchDB).forEach(function (key) {\n\t    if (!(key in PouchAlt)) {\n\t      PouchAlt[key] = PouchDB[key];\n\t    }\n\t  });\n\t\n\t  // make default options transitive\n\t  // https://github.com/pouchdb/pouchdb/issues/5922\n\t  PouchAlt.__defaults = extend$1({}, this.__defaults, defaultOpts);\n\t\n\t  return PouchAlt;\n\t};\n\t\n\t// managed automatically by set-version.js\n\tvar version = \"6.1.0\";\n\t\n\tPouchDB.version = version;\n\t\n\tfunction toObject(array) {\n\t  return array.reduce(function (obj, item) {\n\t    obj[item] = true;\n\t    return obj;\n\t  }, {});\n\t}\n\t// List of top level reserved words for doc\n\tvar reservedWords = toObject([\n\t  '_id',\n\t  '_rev',\n\t  '_attachments',\n\t  '_deleted',\n\t  '_revisions',\n\t  '_revs_info',\n\t  '_conflicts',\n\t  '_deleted_conflicts',\n\t  '_local_seq',\n\t  '_rev_tree',\n\t  //replication documents\n\t  '_replication_id',\n\t  '_replication_state',\n\t  '_replication_state_time',\n\t  '_replication_state_reason',\n\t  '_replication_stats',\n\t  // Specific to Couchbase Sync Gateway\n\t  '_removed'\n\t]);\n\t\n\t// List of reserved words that should end up the document\n\tvar dataWords = toObject([\n\t  '_attachments',\n\t  //replication documents\n\t  '_replication_id',\n\t  '_replication_state',\n\t  '_replication_state_time',\n\t  '_replication_state_reason',\n\t  '_replication_stats'\n\t]);\n\t\n\tfunction parseRevisionInfo(rev) {\n\t  if (!/^\\d+\\-./.test(rev)) {\n\t    return createError(INVALID_REV);\n\t  }\n\t  var idx = rev.indexOf('-');\n\t  var left = rev.substring(0, idx);\n\t  var right = rev.substring(idx + 1);\n\t  return {\n\t    prefix: parseInt(left, 10),\n\t    id: right\n\t  };\n\t}\n\t\n\tfunction makeRevTreeFromRevisions(revisions, opts) {\n\t  var pos = revisions.start - revisions.ids.length + 1;\n\t\n\t  var revisionIds = revisions.ids;\n\t  var ids = [revisionIds[0], opts, []];\n\t\n\t  for (var i = 1, len = revisionIds.length; i < len; i++) {\n\t    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n\t  }\n\t\n\t  return [{\n\t    pos: pos,\n\t    ids: ids\n\t  }];\n\t}\n\t\n\t// Preprocess documents, parse their revisions, assign an id and a\n\t// revision for new writes that are missing them, etc\n\tfunction parseDoc(doc, newEdits) {\n\t\n\t  var nRevNum;\n\t  var newRevId;\n\t  var revInfo;\n\t  var opts = {status: 'available'};\n\t  if (doc._deleted) {\n\t    opts.deleted = true;\n\t  }\n\t\n\t  if (newEdits) {\n\t    if (!doc._id) {\n\t      doc._id = uuid();\n\t    }\n\t    newRevId = uuid(32, 16).toLowerCase();\n\t    if (doc._rev) {\n\t      revInfo = parseRevisionInfo(doc._rev);\n\t      if (revInfo.error) {\n\t        return revInfo;\n\t      }\n\t      doc._rev_tree = [{\n\t        pos: revInfo.prefix,\n\t        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n\t      }];\n\t      nRevNum = revInfo.prefix + 1;\n\t    } else {\n\t      doc._rev_tree = [{\n\t        pos: 1,\n\t        ids : [newRevId, opts, []]\n\t      }];\n\t      nRevNum = 1;\n\t    }\n\t  } else {\n\t    if (doc._revisions) {\n\t      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n\t      nRevNum = doc._revisions.start;\n\t      newRevId = doc._revisions.ids[0];\n\t    }\n\t    if (!doc._rev_tree) {\n\t      revInfo = parseRevisionInfo(doc._rev);\n\t      if (revInfo.error) {\n\t        return revInfo;\n\t      }\n\t      nRevNum = revInfo.prefix;\n\t      newRevId = revInfo.id;\n\t      doc._rev_tree = [{\n\t        pos: nRevNum,\n\t        ids: [newRevId, opts, []]\n\t      }];\n\t    }\n\t  }\n\t\n\t  invalidIdError(doc._id);\n\t\n\t  doc._rev = nRevNum + '-' + newRevId;\n\t\n\t  var result = {metadata : {}, data : {}};\n\t  for (var key in doc) {\n\t    /* istanbul ignore else */\n\t    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n\t      var specialKey = key[0] === '_';\n\t      if (specialKey && !reservedWords[key]) {\n\t        var error = createError(DOC_VALIDATION, key);\n\t        error.message = DOC_VALIDATION.message + ': ' + key;\n\t        throw error;\n\t      } else if (specialKey && !dataWords[key]) {\n\t        result.metadata[key.slice(1)] = doc[key];\n\t      } else {\n\t        result.data[key] = doc[key];\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tvar atob$1 = function (str) {\n\t  return atob(str);\n\t};\n\t\n\tvar btoa$1 = function (str) {\n\t  return btoa(str);\n\t};\n\t\n\t// Abstracts constructing a Blob object, so it also works in older\n\t// browsers that don't support the native Blob constructor (e.g.\n\t// old QtWebKit versions, Android < 4.4).\n\tfunction createBlob(parts, properties) {\n\t  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n\t  parts = parts || [];\n\t  properties = properties || {};\n\t  try {\n\t    return new Blob(parts, properties);\n\t  } catch (e) {\n\t    if (e.name !== \"TypeError\") {\n\t      throw e;\n\t    }\n\t    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n\t                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n\t                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n\t                  WebKitBlobBuilder;\n\t    var builder = new Builder();\n\t    for (var i = 0; i < parts.length; i += 1) {\n\t      builder.append(parts[i]);\n\t    }\n\t    return builder.getBlob(properties.type);\n\t  }\n\t}\n\t\n\t// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n\t// encode-decode-image-with-base64-breaks-image (2013-04-21)\n\tfunction binaryStringToArrayBuffer(bin) {\n\t  var length = bin.length;\n\t  var buf = new ArrayBuffer(length);\n\t  var arr = new Uint8Array(buf);\n\t  for (var i = 0; i < length; i++) {\n\t    arr[i] = bin.charCodeAt(i);\n\t  }\n\t  return buf;\n\t}\n\t\n\tfunction binStringToBluffer(binString, type) {\n\t  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n\t}\n\t\n\tfunction b64ToBluffer(b64, type) {\n\t  return binStringToBluffer(atob$1(b64), type);\n\t}\n\t\n\t//Can't find original post, but this is close\n\t//http://stackoverflow.com/questions/6965107/ (continues on next line)\n\t//converting-between-strings-and-arraybuffers\n\tfunction arrayBufferToBinaryString(buffer) {\n\t  var binary = '';\n\t  var bytes = new Uint8Array(buffer);\n\t  var length = bytes.byteLength;\n\t  for (var i = 0; i < length; i++) {\n\t    binary += String.fromCharCode(bytes[i]);\n\t  }\n\t  return binary;\n\t}\n\t\n\t// shim for browsers that don't support it\n\tfunction readAsBinaryString(blob, callback) {\n\t  if (typeof FileReader === 'undefined') {\n\t    // fix for Firefox in a web worker\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n\t    return callback(arrayBufferToBinaryString(\n\t      new FileReaderSync().readAsArrayBuffer(blob)));\n\t  }\n\t\n\t  var reader = new FileReader();\n\t  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n\t  reader.onloadend = function (e) {\n\t    var result = e.target.result || '';\n\t    if (hasBinaryString) {\n\t      return callback(result);\n\t    }\n\t    callback(arrayBufferToBinaryString(result));\n\t  };\n\t  if (hasBinaryString) {\n\t    reader.readAsBinaryString(blob);\n\t  } else {\n\t    reader.readAsArrayBuffer(blob);\n\t  }\n\t}\n\t\n\tfunction blobToBinaryString(blobOrBuffer, callback) {\n\t  readAsBinaryString(blobOrBuffer, function (bin) {\n\t    callback(bin);\n\t  });\n\t}\n\t\n\tfunction blobToBase64(blobOrBuffer, callback) {\n\t  blobToBinaryString(blobOrBuffer, function (base64) {\n\t    callback(btoa$1(base64));\n\t  });\n\t}\n\t\n\t// simplified API. universal browser support is assumed\n\tfunction readAsArrayBuffer(blob, callback) {\n\t  if (typeof FileReader === 'undefined') {\n\t    // fix for Firefox in a web worker:\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n\t    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n\t  }\n\t\n\t  var reader = new FileReader();\n\t  reader.onloadend = function (e) {\n\t    var result = e.target.result || new ArrayBuffer(0);\n\t    callback(result);\n\t  };\n\t  reader.readAsArrayBuffer(blob);\n\t}\n\t\n\tvar setImmediateShim = global.setImmediate || global.setTimeout;\n\tvar MD5_CHUNK_SIZE = 32768;\n\t\n\tfunction rawToBase64(raw) {\n\t  return btoa$1(raw);\n\t}\n\t\n\tfunction sliceBlob(blob, start, end) {\n\t  if (blob.webkitSlice) {\n\t    return blob.webkitSlice(start, end);\n\t  }\n\t  return blob.slice(start, end);\n\t}\n\t\n\tfunction appendBlob(buffer, blob, start, end, callback) {\n\t  if (start > 0 || end < blob.size) {\n\t    // only slice blob if we really need to\n\t    blob = sliceBlob(blob, start, end);\n\t  }\n\t  readAsArrayBuffer(blob, function (arrayBuffer) {\n\t    buffer.append(arrayBuffer);\n\t    callback();\n\t  });\n\t}\n\t\n\tfunction appendString(buffer, string, start, end, callback) {\n\t  if (start > 0 || end < string.length) {\n\t    // only create a substring if we really need to\n\t    string = string.substring(start, end);\n\t  }\n\t  buffer.appendBinary(string);\n\t  callback();\n\t}\n\t\n\tfunction binaryMd5(data, callback) {\n\t  var inputIsString = typeof data === 'string';\n\t  var len = inputIsString ? data.length : data.size;\n\t  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n\t  var chunks = Math.ceil(len / chunkSize);\n\t  var currentChunk = 0;\n\t  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\t\n\t  var append = inputIsString ? appendString : appendBlob;\n\t\n\t  function next() {\n\t    setImmediateShim(loadNextChunk);\n\t  }\n\t\n\t  function done() {\n\t    var raw = buffer.end(true);\n\t    var base64 = rawToBase64(raw);\n\t    callback(base64);\n\t    buffer.destroy();\n\t  }\n\t\n\t  function loadNextChunk() {\n\t    var start = currentChunk * chunkSize;\n\t    var end = start + chunkSize;\n\t    currentChunk++;\n\t    if (currentChunk < chunks) {\n\t      append(buffer, data, start, end, next);\n\t    } else {\n\t      append(buffer, data, start, end, done);\n\t    }\n\t  }\n\t  loadNextChunk();\n\t}\n\t\n\tfunction stringMd5(string) {\n\t  return Md5.hash(string);\n\t}\n\t\n\tfunction parseBase64(data) {\n\t  try {\n\t    return atob$1(data);\n\t  } catch (e) {\n\t    var err = createError(BAD_ARG,\n\t      'Attachment is not a valid base64 string');\n\t    return {error: err};\n\t  }\n\t}\n\t\n\tfunction preprocessString(att, blobType, callback) {\n\t  var asBinary = parseBase64(att.data);\n\t  if (asBinary.error) {\n\t    return callback(asBinary.error);\n\t  }\n\t\n\t  att.length = asBinary.length;\n\t  if (blobType === 'blob') {\n\t    att.data = binStringToBluffer(asBinary, att.content_type);\n\t  } else if (blobType === 'base64') {\n\t    att.data = btoa$1(asBinary);\n\t  } else { // binary\n\t    att.data = asBinary;\n\t  }\n\t  binaryMd5(asBinary, function (result) {\n\t    att.digest = 'md5-' + result;\n\t    callback();\n\t  });\n\t}\n\t\n\tfunction preprocessBlob(att, blobType, callback) {\n\t  binaryMd5(att.data, function (md5) {\n\t    att.digest = 'md5-' + md5;\n\t    // size is for blobs (browser), length is for buffers (node)\n\t    att.length = att.data.size || att.data.length || 0;\n\t    if (blobType === 'binary') {\n\t      blobToBinaryString(att.data, function (binString) {\n\t        att.data = binString;\n\t        callback();\n\t      });\n\t    } else if (blobType === 'base64') {\n\t      blobToBase64(att.data, function (b64) {\n\t        att.data = b64;\n\t        callback();\n\t      });\n\t    } else {\n\t      callback();\n\t    }\n\t  });\n\t}\n\t\n\tfunction preprocessAttachment(att, blobType, callback) {\n\t  if (att.stub) {\n\t    return callback();\n\t  }\n\t  if (typeof att.data === 'string') { // input is a base64 string\n\t    preprocessString(att, blobType, callback);\n\t  } else { // input is a blob\n\t    preprocessBlob(att, blobType, callback);\n\t  }\n\t}\n\t\n\tfunction preprocessAttachments(docInfos, blobType, callback) {\n\t\n\t  if (!docInfos.length) {\n\t    return callback();\n\t  }\n\t\n\t  var docv = 0;\n\t  var overallErr;\n\t\n\t  docInfos.forEach(function (docInfo) {\n\t    var attachments = docInfo.data && docInfo.data._attachments ?\n\t      Object.keys(docInfo.data._attachments) : [];\n\t    var recv = 0;\n\t\n\t    if (!attachments.length) {\n\t      return done();\n\t    }\n\t\n\t    function processedAttachment(err) {\n\t      overallErr = err;\n\t      recv++;\n\t      if (recv === attachments.length) {\n\t        done();\n\t      }\n\t    }\n\t\n\t    for (var key in docInfo.data._attachments) {\n\t      if (docInfo.data._attachments.hasOwnProperty(key)) {\n\t        preprocessAttachment(docInfo.data._attachments[key],\n\t          blobType, processedAttachment);\n\t      }\n\t    }\n\t  });\n\t\n\t  function done() {\n\t    docv++;\n\t    if (docInfos.length === docv) {\n\t      if (overallErr) {\n\t        callback(overallErr);\n\t      } else {\n\t        callback();\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction updateDoc(revLimit, prev, docInfo, results,\n\t                   i, cb, writeDoc, newEdits) {\n\t\n\t  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n\t    results[i] = docInfo;\n\t    return cb();\n\t  }\n\t\n\t  // sometimes this is pre-calculated. historically not always\n\t  var previousWinningRev = prev.winningRev || winningRev(prev);\n\t  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n\t    isDeleted(prev, previousWinningRev);\n\t  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n\t    isDeleted(docInfo.metadata);\n\t  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\t\n\t  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n\t    var newDoc = docInfo.data;\n\t    newDoc._rev = previousWinningRev;\n\t    newDoc._id = docInfo.metadata.id;\n\t    docInfo = parseDoc(newDoc, newEdits);\n\t  }\n\t\n\t  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\t\n\t  var inConflict = newEdits && (((previouslyDeleted && deleted) ||\n\t    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n\t    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\t\n\t  if (inConflict) {\n\t    var err = createError(REV_CONFLICT);\n\t    results[i] = err;\n\t    return cb();\n\t  }\n\t\n\t  var newRev = docInfo.metadata.rev;\n\t  docInfo.metadata.rev_tree = merged.tree;\n\t  docInfo.stemmedRevs = merged.stemmedRevs || [];\n\t  /* istanbul ignore else */\n\t  if (prev.rev_map) {\n\t    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n\t  }\n\t\n\t  // recalculate\n\t  var winningRev$$ = winningRev(docInfo.metadata);\n\t  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$);\n\t\n\t  // calculate the total number of documents that were added/removed,\n\t  // from the perspective of total_rows/doc_count\n\t  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n\t    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\t\n\t  var newRevIsDeleted;\n\t  if (newRev === winningRev$$) {\n\t    // if the new rev is the same as the winning rev, we can reuse that value\n\t    newRevIsDeleted = winningRevIsDeleted;\n\t  } else {\n\t    // if they're not the same, then we need to recalculate\n\t    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n\t  }\n\t\n\t  writeDoc(docInfo, winningRev$$, winningRevIsDeleted, newRevIsDeleted,\n\t    true, delta, i, cb);\n\t}\n\t\n\tfunction rootIsMissing(docInfo) {\n\t  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n\t}\n\t\n\tfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n\t                     writeDoc, opts, overallCallback) {\n\t\n\t  // Default to 1000 locally\n\t  revLimit = revLimit || 1000;\n\t\n\t  function insertDoc(docInfo, resultsIdx, callback) {\n\t    // Cant insert new deleted documents\n\t    var winningRev$$ = winningRev(docInfo.metadata);\n\t    var deleted = isDeleted(docInfo.metadata, winningRev$$);\n\t    if ('was_delete' in opts && deleted) {\n\t      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n\t      return callback();\n\t    }\n\t\n\t    // 4712 - detect whether a new document was inserted with a _rev\n\t    var inConflict = newEdits && rootIsMissing(docInfo);\n\t\n\t    if (inConflict) {\n\t      var err = createError(REV_CONFLICT);\n\t      results[resultsIdx] = err;\n\t      return callback();\n\t    }\n\t\n\t    var delta = deleted ? 0 : 1;\n\t\n\t    writeDoc(docInfo, winningRev$$, deleted, deleted, false,\n\t      delta, resultsIdx, callback);\n\t  }\n\t\n\t  var newEdits = opts.new_edits;\n\t  var idsToDocs = new _Map();\n\t\n\t  var docsDone = 0;\n\t  var docsToDo = docInfos.length;\n\t\n\t  function checkAllDocsDone() {\n\t    if (++docsDone === docsToDo && overallCallback) {\n\t      overallCallback();\n\t    }\n\t  }\n\t\n\t  docInfos.forEach(function (currentDoc, resultsIdx) {\n\t\n\t    if (currentDoc._id && isLocalId(currentDoc._id)) {\n\t      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n\t      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n\t        results[resultsIdx] = err || res;\n\t        checkAllDocsDone();\n\t      });\n\t      return;\n\t    }\n\t\n\t    var id = currentDoc.metadata.id;\n\t    if (idsToDocs.has(id)) {\n\t      docsToDo--; // duplicate\n\t      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n\t    } else {\n\t      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n\t    }\n\t  });\n\t\n\t  // in the case of new_edits, the user can provide multiple docs\n\t  // with the same id. these need to be processed sequentially\n\t  idsToDocs.forEach(function (docs, id) {\n\t    var numDone = 0;\n\t\n\t    function docWritten() {\n\t      if (++numDone < docs.length) {\n\t        nextDoc();\n\t      } else {\n\t        checkAllDocsDone();\n\t      }\n\t    }\n\t    function nextDoc() {\n\t      var value = docs[numDone];\n\t      var currentDoc = value[0];\n\t      var resultsIdx = value[1];\n\t\n\t      if (fetchedDocs.has(id)) {\n\t        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n\t          resultsIdx, docWritten, writeDoc, newEdits);\n\t      } else {\n\t        // Ensure stemming applies to new writes as well\n\t        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n\t        currentDoc.metadata.rev_tree = merged.tree;\n\t        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n\t        insertDoc(currentDoc, resultsIdx, docWritten);\n\t      }\n\t    }\n\t    nextDoc();\n\t  });\n\t}\n\t\n\t// IndexedDB requires a versioned database structure, so we use the\n\t// version here to manage migrations.\n\tvar ADAPTER_VERSION = 5;\n\t\n\t// The object stores created for each database\n\t// DOC_STORE stores the document meta data, its revision history and state\n\t// Keyed by document id\n\tvar DOC_STORE = 'document-store';\n\t// BY_SEQ_STORE stores a particular version of a document, keyed by its\n\t// sequence id\n\tvar BY_SEQ_STORE = 'by-sequence';\n\t// Where we store attachments\n\tvar ATTACH_STORE = 'attach-store';\n\t// Where we store many-to-many relations\n\t// between attachment digests and seqs\n\tvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\t\n\t// Where we store database-wide meta data in a single record\n\t// keyed by id: META_STORE\n\tvar META_STORE = 'meta-store';\n\t// Where we store local documents\n\tvar LOCAL_STORE = 'local-store';\n\t// Where we detect blob support\n\tvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\t\n\tfunction safeJsonParse(str) {\n\t  // This try/catch guards against stack overflow errors.\n\t  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n\t  // cannot overflow.\n\t  try {\n\t    return JSON.parse(str);\n\t  } catch (e) {\n\t    /* istanbul ignore next */\n\t    return vuvuzela.parse(str);\n\t  }\n\t}\n\t\n\tfunction safeJsonStringify(json) {\n\t  try {\n\t    return JSON.stringify(json);\n\t  } catch (e) {\n\t    /* istanbul ignore next */\n\t    return vuvuzela.stringify(json);\n\t  }\n\t}\n\t\n\tfunction idbError(callback) {\n\t  return function (evt) {\n\t    var message = 'unknown_error';\n\t    if (evt.target && evt.target.error) {\n\t      message = evt.target.error.name || evt.target.error.message;\n\t    }\n\t    callback(createError(IDB_ERROR, message, evt.type));\n\t  };\n\t}\n\t\n\t// Unfortunately, the metadata has to be stringified\n\t// when it is put into the database, because otherwise\n\t// IndexedDB can throw errors for deeply-nested objects.\n\t// Originally we just used JSON.parse/JSON.stringify; now\n\t// we use this custom vuvuzela library that avoids recursion.\n\t// If we could do it all over again, we'd probably use a\n\t// format for the revision trees other than JSON.\n\tfunction encodeMetadata(metadata, winningRev, deleted) {\n\t  return {\n\t    data: safeJsonStringify(metadata),\n\t    winningRev: winningRev,\n\t    deletedOrLocal: deleted ? '1' : '0',\n\t    seq: metadata.seq, // highest seq for this doc\n\t    id: metadata.id\n\t  };\n\t}\n\t\n\tfunction decodeMetadata(storedObject) {\n\t  if (!storedObject) {\n\t    return null;\n\t  }\n\t  var metadata = safeJsonParse(storedObject.data);\n\t  metadata.winningRev = storedObject.winningRev;\n\t  metadata.deleted = storedObject.deletedOrLocal === '1';\n\t  metadata.seq = storedObject.seq;\n\t  return metadata;\n\t}\n\t\n\t// read the doc back out from the database. we don't store the\n\t// _id or _rev because we already have _doc_id_rev.\n\tfunction decodeDoc(doc) {\n\t  if (!doc) {\n\t    return doc;\n\t  }\n\t  var idx = doc._doc_id_rev.lastIndexOf(':');\n\t  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n\t  doc._rev = doc._doc_id_rev.substring(idx + 1);\n\t  delete doc._doc_id_rev;\n\t  return doc;\n\t}\n\t\n\t// Read a blob from the database, encoding as necessary\n\t// and translating from base64 if the IDB doesn't support\n\t// native Blobs\n\tfunction readBlobData(body, type, asBlob, callback) {\n\t  if (asBlob) {\n\t    if (!body) {\n\t      callback(createBlob([''], {type: type}));\n\t    } else if (typeof body !== 'string') { // we have blob support\n\t      callback(body);\n\t    } else { // no blob support\n\t      callback(b64ToBluffer(body, type));\n\t    }\n\t  } else { // as base64 string\n\t    if (!body) {\n\t      callback('');\n\t    } else if (typeof body !== 'string') { // we have blob support\n\t      readAsBinaryString(body, function (binary) {\n\t        callback(btoa$1(binary));\n\t      });\n\t    } else { // no blob support\n\t      callback(body);\n\t    }\n\t  }\n\t}\n\t\n\tfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n\t  var attachments = Object.keys(doc._attachments || {});\n\t  if (!attachments.length) {\n\t    return cb && cb();\n\t  }\n\t  var numDone = 0;\n\t\n\t  function checkDone() {\n\t    if (++numDone === attachments.length && cb) {\n\t      cb();\n\t    }\n\t  }\n\t\n\t  function fetchAttachment(doc, att) {\n\t    var attObj = doc._attachments[att];\n\t    var digest = attObj.digest;\n\t    var req = txn.objectStore(ATTACH_STORE).get(digest);\n\t    req.onsuccess = function (e) {\n\t      attObj.body = e.target.result.body;\n\t      checkDone();\n\t    };\n\t  }\n\t\n\t  attachments.forEach(function (att) {\n\t    if (opts.attachments && opts.include_docs) {\n\t      fetchAttachment(doc, att);\n\t    } else {\n\t      doc._attachments[att].stub = true;\n\t      checkDone();\n\t    }\n\t  });\n\t}\n\t\n\t// IDB-specific postprocessing necessary because\n\t// we don't know whether we stored a true Blob or\n\t// a base64-encoded string, and if it's a Blob it\n\t// needs to be read outside of the transaction context\n\tfunction postProcessAttachments(results, asBlob) {\n\t  return PouchPromise.all(results.map(function (row) {\n\t    if (row.doc && row.doc._attachments) {\n\t      var attNames = Object.keys(row.doc._attachments);\n\t      return PouchPromise.all(attNames.map(function (att) {\n\t        var attObj = row.doc._attachments[att];\n\t        if (!('body' in attObj)) { // already processed\n\t          return;\n\t        }\n\t        var body = attObj.body;\n\t        var type = attObj.content_type;\n\t        return new PouchPromise(function (resolve) {\n\t          readBlobData(body, type, asBlob, function (data) {\n\t            row.doc._attachments[att] = extend$1(\n\t              pick(attObj, ['digest', 'content_type']),\n\t              {data: data}\n\t            );\n\t            resolve();\n\t          });\n\t        });\n\t      }));\n\t    }\n\t  }));\n\t}\n\t\n\tfunction compactRevs(revs, docId, txn) {\n\t\n\t  var possiblyOrphanedDigests = [];\n\t  var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t  var attStore = txn.objectStore(ATTACH_STORE);\n\t  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t  var count = revs.length;\n\t\n\t  function checkDone() {\n\t    count--;\n\t    if (!count) { // done processing all revs\n\t      deleteOrphanedAttachments();\n\t    }\n\t  }\n\t\n\t  function deleteOrphanedAttachments() {\n\t    if (!possiblyOrphanedDigests.length) {\n\t      return;\n\t    }\n\t    possiblyOrphanedDigests.forEach(function (digest) {\n\t      var countReq = attAndSeqStore.index('digestSeq').count(\n\t        IDBKeyRange.bound(\n\t          digest + '::', digest + '::\\uffff', false, false));\n\t      countReq.onsuccess = function (e) {\n\t        var count = e.target.result;\n\t        if (!count) {\n\t          // orphaned\n\t          attStore.delete(digest);\n\t        }\n\t      };\n\t    });\n\t  }\n\t\n\t  revs.forEach(function (rev) {\n\t    var index = seqStore.index('_doc_id_rev');\n\t    var key = docId + \"::\" + rev;\n\t    index.getKey(key).onsuccess = function (e) {\n\t      var seq = e.target.result;\n\t      if (typeof seq !== 'number') {\n\t        return checkDone();\n\t      }\n\t      seqStore.delete(seq);\n\t\n\t      var cursor = attAndSeqStore.index('seq')\n\t        .openCursor(IDBKeyRange.only(seq));\n\t\n\t      cursor.onsuccess = function (event) {\n\t        var cursor = event.target.result;\n\t        if (cursor) {\n\t          var digest = cursor.value.digestSeq.split('::')[0];\n\t          possiblyOrphanedDigests.push(digest);\n\t          attAndSeqStore.delete(cursor.primaryKey);\n\t          cursor.continue();\n\t        } else { // done\n\t          checkDone();\n\t        }\n\t      };\n\t    };\n\t  });\n\t}\n\t\n\tfunction openTransactionSafely(idb, stores, mode) {\n\t  try {\n\t    return {\n\t      txn: idb.transaction(stores, mode)\n\t    };\n\t  } catch (err) {\n\t    return {\n\t      error: err\n\t    };\n\t  }\n\t}\n\t\n\tfunction idbBulkDocs(dbOpts, req, opts, api, idb, idbChanges, callback) {\n\t  var docInfos = req.docs;\n\t  var txn;\n\t  var docStore;\n\t  var bySeqStore;\n\t  var attachStore;\n\t  var attachAndSeqStore;\n\t  var docInfoError;\n\t  var docCountDelta = 0;\n\t\n\t  for (var i = 0, len = docInfos.length; i < len; i++) {\n\t    var doc = docInfos[i];\n\t    if (doc._id && isLocalId(doc._id)) {\n\t      continue;\n\t    }\n\t    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n\t    if (doc.error && !docInfoError) {\n\t      docInfoError = doc;\n\t    }\n\t  }\n\t\n\t  if (docInfoError) {\n\t    return callback(docInfoError);\n\t  }\n\t\n\t  var results = new Array(docInfos.length);\n\t  var fetchedDocs = new _Map();\n\t  var preconditionErrored = false;\n\t  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\t\n\t  preprocessAttachments(docInfos, blobType, function (err) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    startTransaction();\n\t  });\n\t\n\t  function startTransaction() {\n\t\n\t    var stores = [\n\t      DOC_STORE, BY_SEQ_STORE,\n\t      ATTACH_STORE,\n\t      LOCAL_STORE, ATTACH_AND_SEQ_STORE\n\t    ];\n\t    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    txn = txnResult.txn;\n\t    txn.onabort = idbError(callback);\n\t    txn.ontimeout = idbError(callback);\n\t    txn.oncomplete = complete;\n\t    docStore = txn.objectStore(DOC_STORE);\n\t    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t    attachStore = txn.objectStore(ATTACH_STORE);\n\t    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t\n\t    verifyAttachments(function (err) {\n\t      if (err) {\n\t        preconditionErrored = true;\n\t        return callback(err);\n\t      }\n\t      fetchExistingDocs();\n\t    });\n\t  }\n\t\n\t  function idbProcessDocs() {\n\t    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n\t                txn, results, writeDoc, opts);\n\t  }\n\t\n\t  function fetchExistingDocs() {\n\t\n\t    if (!docInfos.length) {\n\t      return;\n\t    }\n\t\n\t    var numFetched = 0;\n\t\n\t    function checkDone() {\n\t      if (++numFetched === docInfos.length) {\n\t        idbProcessDocs();\n\t      }\n\t    }\n\t\n\t    function readMetadata(event) {\n\t      var metadata = decodeMetadata(event.target.result);\n\t\n\t      if (metadata) {\n\t        fetchedDocs.set(metadata.id, metadata);\n\t      }\n\t      checkDone();\n\t    }\n\t\n\t    for (var i = 0, len = docInfos.length; i < len; i++) {\n\t      var docInfo = docInfos[i];\n\t      if (docInfo._id && isLocalId(docInfo._id)) {\n\t        checkDone(); // skip local docs\n\t        continue;\n\t      }\n\t      var req = docStore.get(docInfo.metadata.id);\n\t      req.onsuccess = readMetadata;\n\t    }\n\t  }\n\t\n\t  function complete() {\n\t    if (preconditionErrored) {\n\t      return;\n\t    }\n\t\n\t    idbChanges.notify(api._meta.name);\n\t    api._meta.docCount += docCountDelta;\n\t    callback(null, results);\n\t  }\n\t\n\t  function verifyAttachment(digest, callback) {\n\t\n\t    var req = attachStore.get(digest);\n\t    req.onsuccess = function (e) {\n\t      if (!e.target.result) {\n\t        var err = createError(MISSING_STUB,\n\t          'unknown stub attachment with digest ' +\n\t          digest);\n\t        err.status = 412;\n\t        callback(err);\n\t      } else {\n\t        callback();\n\t      }\n\t    };\n\t  }\n\t\n\t  function verifyAttachments(finish) {\n\t\n\t\n\t    var digests = [];\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo.data && docInfo.data._attachments) {\n\t        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n\t          var att = docInfo.data._attachments[filename];\n\t          if (att.stub) {\n\t            digests.push(att.digest);\n\t          }\n\t        });\n\t      }\n\t    });\n\t    if (!digests.length) {\n\t      return finish();\n\t    }\n\t    var numDone = 0;\n\t    var err;\n\t\n\t    function checkDone() {\n\t      if (++numDone === digests.length) {\n\t        finish(err);\n\t      }\n\t    }\n\t    digests.forEach(function (digest) {\n\t      verifyAttachment(digest, function (attErr) {\n\t        if (attErr && !err) {\n\t          err = attErr;\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n\t                    isUpdate, delta, resultsIdx, callback) {\n\t\n\t    docCountDelta += delta;\n\t\n\t    docInfo.metadata.winningRev = winningRev;\n\t    docInfo.metadata.deleted = winningRevIsDeleted;\n\t\n\t    var doc = docInfo.data;\n\t    doc._id = docInfo.metadata.id;\n\t    doc._rev = docInfo.metadata.rev;\n\t\n\t    if (newRevIsDeleted) {\n\t      doc._deleted = true;\n\t    }\n\t\n\t    var hasAttachments = doc._attachments &&\n\t      Object.keys(doc._attachments).length;\n\t    if (hasAttachments) {\n\t      return writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n\t        isUpdate, resultsIdx, callback);\n\t    }\n\t\n\t    finishDoc(docInfo, winningRev, winningRevIsDeleted,\n\t      isUpdate, resultsIdx, callback);\n\t  }\n\t\n\t  function finishDoc(docInfo, winningRev, winningRevIsDeleted,\n\t                     isUpdate, resultsIdx, callback) {\n\t\n\t    var doc = docInfo.data;\n\t    var metadata = docInfo.metadata;\n\t\n\t    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n\t    delete doc._id;\n\t    delete doc._rev;\n\t\n\t    function afterPutDoc(e) {\n\t      var revsToDelete = docInfo.stemmedRevs || [];\n\t\n\t      if (isUpdate && api.auto_compaction) {\n\t        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n\t      }\n\t\n\t      if (revsToDelete && revsToDelete.length) {\n\t        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n\t      }\n\t\n\t      metadata.seq = e.target.result;\n\t      // Current _rev is calculated from _rev_tree on read\n\t      // delete metadata.rev;\n\t      var metadataToStore = encodeMetadata(metadata, winningRev,\n\t        winningRevIsDeleted);\n\t      var metaDataReq = docStore.put(metadataToStore);\n\t      metaDataReq.onsuccess = afterPutMetadata;\n\t    }\n\t\n\t    function afterPutDocError(e) {\n\t      // ConstraintError, need to update, not put (see #1638 for details)\n\t      e.preventDefault(); // avoid transaction abort\n\t      e.stopPropagation(); // avoid transaction onerror\n\t      var index = bySeqStore.index('_doc_id_rev');\n\t      var getKeyReq = index.getKey(doc._doc_id_rev);\n\t      getKeyReq.onsuccess = function (e) {\n\t        var putReq = bySeqStore.put(doc, e.target.result);\n\t        putReq.onsuccess = afterPutDoc;\n\t      };\n\t    }\n\t\n\t    function afterPutMetadata() {\n\t      results[resultsIdx] = {\n\t        ok: true,\n\t        id: metadata.id,\n\t        rev: metadata.rev\n\t      };\n\t      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n\t      insertAttachmentMappings(docInfo, metadata.seq, callback);\n\t    }\n\t\n\t    var putReq = bySeqStore.put(doc);\n\t\n\t    putReq.onsuccess = afterPutDoc;\n\t    putReq.onerror = afterPutDocError;\n\t  }\n\t\n\t  function writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n\t                            isUpdate, resultsIdx, callback) {\n\t\n\t\n\t    var doc = docInfo.data;\n\t\n\t    var numDone = 0;\n\t    var attachments = Object.keys(doc._attachments);\n\t\n\t    function collectResults() {\n\t      if (numDone === attachments.length) {\n\t        finishDoc(docInfo, winningRev, winningRevIsDeleted,\n\t          isUpdate, resultsIdx, callback);\n\t      }\n\t    }\n\t\n\t    function attachmentSaved() {\n\t      numDone++;\n\t      collectResults();\n\t    }\n\t\n\t    attachments.forEach(function (key) {\n\t      var att = docInfo.data._attachments[key];\n\t      if (!att.stub) {\n\t        var data = att.data;\n\t        delete att.data;\n\t        att.revpos = parseInt(winningRev, 10);\n\t        var digest = att.digest;\n\t        saveAttachment(digest, data, attachmentSaved);\n\t      } else {\n\t        numDone++;\n\t        collectResults();\n\t      }\n\t    });\n\t  }\n\t\n\t  // map seqs to attachment digests, which\n\t  // we will need later during compaction\n\t  function insertAttachmentMappings(docInfo, seq, callback) {\n\t\n\t    var attsAdded = 0;\n\t    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\t\n\t    if (!attsToAdd.length) {\n\t      return callback();\n\t    }\n\t\n\t    function checkDone() {\n\t      if (++attsAdded === attsToAdd.length) {\n\t        callback();\n\t      }\n\t    }\n\t\n\t    function add(att) {\n\t      var digest = docInfo.data._attachments[att].digest;\n\t      var req = attachAndSeqStore.put({\n\t        seq: seq,\n\t        digestSeq: digest + '::' + seq\n\t      });\n\t\n\t      req.onsuccess = checkDone;\n\t      req.onerror = function (e) {\n\t        // this callback is for a constaint error, which we ignore\n\t        // because this docid/rev has already been associated with\n\t        // the digest (e.g. when new_edits == false)\n\t        e.preventDefault(); // avoid transaction abort\n\t        e.stopPropagation(); // avoid transaction onerror\n\t        checkDone();\n\t      };\n\t    }\n\t    for (var i = 0; i < attsToAdd.length; i++) {\n\t      add(attsToAdd[i]); // do in parallel\n\t    }\n\t  }\n\t\n\t  function saveAttachment(digest, data, callback) {\n\t\n\t\n\t    var getKeyReq = attachStore.count(digest);\n\t    getKeyReq.onsuccess = function (e) {\n\t      var count = e.target.result;\n\t      if (count) {\n\t        return callback(); // already exists\n\t      }\n\t      var newAtt = {\n\t        digest: digest,\n\t        body: data\n\t      };\n\t      var putReq = attachStore.put(newAtt);\n\t      putReq.onsuccess = callback;\n\t    };\n\t  }\n\t}\n\t\n\tfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n\t  try {\n\t    if (start && end) {\n\t      if (descending) {\n\t        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n\t      } else {\n\t        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n\t      }\n\t    } else if (start) {\n\t      if (descending) {\n\t        return IDBKeyRange.upperBound(start);\n\t      } else {\n\t        return IDBKeyRange.lowerBound(start);\n\t      }\n\t    } else if (end) {\n\t      if (descending) {\n\t        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n\t      } else {\n\t        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n\t      }\n\t    } else if (key) {\n\t      return IDBKeyRange.only(key);\n\t    }\n\t  } catch (e) {\n\t    return {error: e};\n\t  }\n\t  return null;\n\t}\n\t\n\tfunction handleKeyRangeError(api, opts, err, callback) {\n\t  if (err.name === \"DataError\" && err.code === 0) {\n\t    // data error, start is less than end\n\t    return callback(null, {\n\t      total_rows: api._meta.docCount,\n\t      offset: opts.skip,\n\t      rows: []\n\t    });\n\t  }\n\t  callback(createError(IDB_ERROR, err.name, err.message));\n\t}\n\t\n\tfunction idbAllDocs(opts, api, idb, callback) {\n\t\n\t  function allDocsQuery(opts, callback) {\n\t    var start = 'startkey' in opts ? opts.startkey : false;\n\t    var end = 'endkey' in opts ? opts.endkey : false;\n\t    var key = 'key' in opts ? opts.key : false;\n\t    var skip = opts.skip || 0;\n\t    var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n\t    var inclusiveEnd = opts.inclusive_end !== false;\n\t    var descending = 'descending' in opts && opts.descending ? 'prev' : null;\n\t\n\t    var keyRange = createKeyRange(start, end, inclusiveEnd, key, descending);\n\t    if (keyRange && keyRange.error) {\n\t      return handleKeyRangeError(api, opts, keyRange.error, callback);\n\t    }\n\t\n\t    var stores = [DOC_STORE, BY_SEQ_STORE];\n\t\n\t    if (opts.attachments) {\n\t      stores.push(ATTACH_STORE);\n\t    }\n\t    var txnResult = openTransactionSafely(idb, stores, 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var cursor = descending ?\n\t      docStore.openCursor(keyRange, descending) :\n\t      docStore.openCursor(keyRange);\n\t    var docIdRevIndex = seqStore.index('_doc_id_rev');\n\t    var results = [];\n\t    var docCount = 0;\n\t\n\t    // if the user specifies include_docs=true, then we don't\n\t    // want to block the main cursor while we're fetching the doc\n\t    function fetchDocAsynchronously(metadata, row, winningRev) {\n\t      var key = metadata.id + \"::\" + winningRev;\n\t      docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n\t        row.doc = decodeDoc(e.target.result);\n\t        if (opts.conflicts) {\n\t          var conflicts = collectConflicts(metadata);\n\t          if (conflicts.length) {\n\t            row.doc._conflicts = conflicts;\n\t          }\n\t        }\n\t        fetchAttachmentsIfNecessary(row.doc, opts, txn);\n\t      };\n\t    }\n\t\n\t    function allDocsInner(cursor, winningRev, metadata) {\n\t      var row = {\n\t        id: metadata.id,\n\t        key: metadata.id,\n\t        value: {\n\t          rev: winningRev\n\t        }\n\t      };\n\t      var deleted = metadata.deleted;\n\t      if (opts.deleted === 'ok') {\n\t        results.push(row);\n\t        // deleted docs are okay with \"keys\" requests\n\t        if (deleted) {\n\t          row.value.deleted = true;\n\t          row.doc = null;\n\t        } else if (opts.include_docs) {\n\t          fetchDocAsynchronously(metadata, row, winningRev);\n\t        }\n\t      } else if (!deleted && skip-- <= 0) {\n\t        results.push(row);\n\t        if (opts.include_docs) {\n\t          fetchDocAsynchronously(metadata, row, winningRev);\n\t        }\n\t        if (--limit === 0) {\n\t          return;\n\t        }\n\t      }\n\t      cursor.continue();\n\t    }\n\t\n\t    function onGetCursor(e) {\n\t      docCount = api._meta.docCount; // do this within the txn for consistency\n\t      var cursor = e.target.result;\n\t      if (!cursor) {\n\t        return;\n\t      }\n\t      var metadata = decodeMetadata(cursor.value);\n\t      var winningRev = metadata.winningRev;\n\t\n\t      allDocsInner(cursor, winningRev, metadata);\n\t    }\n\t\n\t    function onResultsReady() {\n\t      callback(null, {\n\t        total_rows: docCount,\n\t        offset: opts.skip,\n\t        rows: results\n\t      });\n\t    }\n\t\n\t    function onTxnComplete() {\n\t      if (opts.attachments) {\n\t        postProcessAttachments(results, opts.binary).then(onResultsReady);\n\t      } else {\n\t        onResultsReady();\n\t      }\n\t    }\n\t\n\t    txn.oncomplete = onTxnComplete;\n\t    cursor.onsuccess = onGetCursor;\n\t  }\n\t\n\t  function allDocs(opts, callback) {\n\t\n\t    if (opts.limit === 0) {\n\t      return callback(null, {\n\t        total_rows: api._meta.docCount,\n\t        offset: opts.skip,\n\t        rows: []\n\t      });\n\t    }\n\t    allDocsQuery(opts, callback);\n\t  }\n\t\n\t  allDocs(opts, callback);\n\t}\n\t\n\t//\n\t// Blobs are not supported in all versions of IndexedDB, notably\n\t// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n\t//\n\t// Various other blob bugs exist in Chrome v37-42 (inclusive).\n\t// Detecting them is expensive and confusing to users, and Chrome 37-42\n\t// is at very low usage worldwide, so we do a hacky userAgent check instead.\n\t//\n\t// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n\t// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n\t// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n\t//\n\tfunction checkBlobSupport(txn) {\n\t  return new PouchPromise(function (resolve) {\n\t    var blob = createBlob(['']);\n\t    txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\t\n\t    txn.onabort = function (e) {\n\t      // If the transaction aborts now its due to not being able to\n\t      // write to the database, likely due to the disk being full\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t      resolve(false);\n\t    };\n\t\n\t    txn.oncomplete = function () {\n\t      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n\t      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n\t      // MS Edge pretends to be Chrome 42:\n\t      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\t      resolve(matchedEdge || !matchedChrome ||\n\t        parseInt(matchedChrome[1], 10) >= 43);\n\t    };\n\t  }).catch(function () {\n\t    return false; // error, so assume unsupported\n\t  });\n\t}\n\t\n\t// This task queue ensures that IDB open calls are done in their own tick\n\t// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n\t// before calling the next one. This works around IE/Edge race conditions in IDB.\n\t\n\tvar running = false;\n\tvar queue = [];\n\t\n\tfunction tryCode(fun, err, res, PouchDB) {\n\t  try {\n\t    fun(err, res);\n\t  } catch (err) {\n\t    // Shouldn't happen, but in some odd cases\n\t    // IndexedDB implementations might throw a sync\n\t    // error, in which case this will at least log it.\n\t    PouchDB.emit('error', err);\n\t  }\n\t}\n\t\n\tfunction applyNext() {\n\t  if (running || !queue.length) {\n\t    return;\n\t  }\n\t  running = true;\n\t  queue.shift()();\n\t}\n\t\n\tfunction enqueueTask(action, callback, PouchDB) {\n\t  queue.push(function runAction() {\n\t    action(function runCallback(err, res) {\n\t      tryCode(callback, err, res, PouchDB);\n\t      running = false;\n\t      immediate(function runNext() {\n\t        applyNext(PouchDB);\n\t      });\n\t    });\n\t  });\n\t  applyNext();\n\t}\n\t\n\tvar cachedDBs = new _Map();\n\tvar blobSupportPromise;\n\tvar idbChanges = new Changes();\n\tvar openReqList = new _Map();\n\t\n\tfunction IdbPouch(opts, callback) {\n\t  var api = this;\n\t\n\t  enqueueTask(function (thisCallback) {\n\t    init(api, opts, thisCallback);\n\t  }, callback, api.constructor);\n\t}\n\t\n\tfunction init(api, opts, callback) {\n\t\n\t  var dbName = opts.name;\n\t\n\t  var idb = null;\n\t  api._meta = null;\n\t\n\t  // called when creating a fresh new database\n\t  function createSchema(db) {\n\t    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n\t    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n\t      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n\t    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n\t    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n\t    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\t\n\t    // added in v2\n\t    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\t\n\t    // added in v3\n\t    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\t\n\t    // added in v4\n\t    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n\t      {autoIncrement: true});\n\t    attAndSeqStore.createIndex('seq', 'seq');\n\t    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n\t  }\n\t\n\t  // migration to version 2\n\t  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n\t  // store local docs in the main doc-store, but whaddyagonnado\n\t  function addDeletedOrLocalIndex(txn, callback) {\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\t\n\t    docStore.openCursor().onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      if (cursor) {\n\t        var metadata = cursor.value;\n\t        var deleted = isDeleted(metadata);\n\t        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n\t        docStore.put(metadata);\n\t        cursor.continue();\n\t      } else {\n\t        callback();\n\t      }\n\t    };\n\t  }\n\t\n\t  // migration to version 3 (part 1)\n\t  function createLocalStoreSchema(db) {\n\t    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n\t      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n\t  }\n\t\n\t  // migration to version 3 (part 2)\n\t  function migrateLocalStore(txn, cb) {\n\t    var localStore = txn.objectStore(LOCAL_STORE);\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t\n\t    var cursor = docStore.openCursor();\n\t    cursor.onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      if (cursor) {\n\t        var metadata = cursor.value;\n\t        var docId = metadata.id;\n\t        var local = isLocalId(docId);\n\t        var rev = winningRev(metadata);\n\t        if (local) {\n\t          var docIdRev = docId + \"::\" + rev;\n\t          // remove all seq entries\n\t          // associated with this docId\n\t          var start = docId + \"::\";\n\t          var end = docId + \"::~\";\n\t          var index = seqStore.index('_doc_id_rev');\n\t          var range = IDBKeyRange.bound(start, end, false, false);\n\t          var seqCursor = index.openCursor(range);\n\t          seqCursor.onsuccess = function (e) {\n\t            seqCursor = e.target.result;\n\t            if (!seqCursor) {\n\t              // done\n\t              docStore.delete(cursor.primaryKey);\n\t              cursor.continue();\n\t            } else {\n\t              var data = seqCursor.value;\n\t              if (data._doc_id_rev === docIdRev) {\n\t                localStore.put(data);\n\t              }\n\t              seqStore.delete(seqCursor.primaryKey);\n\t              seqCursor.continue();\n\t            }\n\t          };\n\t        } else {\n\t          cursor.continue();\n\t        }\n\t      } else if (cb) {\n\t        cb();\n\t      }\n\t    };\n\t  }\n\t\n\t  // migration to version 4 (part 1)\n\t  function addAttachAndSeqStore(db) {\n\t    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n\t      {autoIncrement: true});\n\t    attAndSeqStore.createIndex('seq', 'seq');\n\t    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n\t  }\n\t\n\t  // migration to version 4 (part 2)\n\t  function migrateAttsAndSeqs(txn, callback) {\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var attStore = txn.objectStore(ATTACH_STORE);\n\t    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t\n\t    // need to actually populate the table. this is the expensive part,\n\t    // so as an optimization, check first that this database even\n\t    // contains attachments\n\t    var req = attStore.count();\n\t    req.onsuccess = function (e) {\n\t      var count = e.target.result;\n\t      if (!count) {\n\t        return callback(); // done\n\t      }\n\t\n\t      seqStore.openCursor().onsuccess = function (e) {\n\t        var cursor = e.target.result;\n\t        if (!cursor) {\n\t          return callback(); // done\n\t        }\n\t        var doc = cursor.value;\n\t        var seq = cursor.primaryKey;\n\t        var atts = Object.keys(doc._attachments || {});\n\t        var digestMap = {};\n\t        for (var j = 0; j < atts.length; j++) {\n\t          var att = doc._attachments[atts[j]];\n\t          digestMap[att.digest] = true; // uniq digests, just in case\n\t        }\n\t        var digests = Object.keys(digestMap);\n\t        for (j = 0; j < digests.length; j++) {\n\t          var digest = digests[j];\n\t          attAndSeqStore.put({\n\t            seq: seq,\n\t            digestSeq: digest + '::' + seq\n\t          });\n\t        }\n\t        cursor.continue();\n\t      };\n\t    };\n\t  }\n\t\n\t  // migration to version 5\n\t  // Instead of relying on on-the-fly migration of metadata,\n\t  // this brings the doc-store to its modern form:\n\t  // - metadata.winningrev\n\t  // - metadata.seq\n\t  // - stringify the metadata when storing it\n\t  function migrateMetadata(txn) {\n\t\n\t    function decodeMetadataCompat(storedObject) {\n\t      if (!storedObject.data) {\n\t        // old format, when we didn't store it stringified\n\t        storedObject.deleted = storedObject.deletedOrLocal === '1';\n\t        return storedObject;\n\t      }\n\t      return decodeMetadata(storedObject);\n\t    }\n\t\n\t    // ensure that every metadata has a winningRev and seq,\n\t    // which was previously created on-the-fly but better to migrate\n\t    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var cursor = docStore.openCursor();\n\t    cursor.onsuccess = function (e) {\n\t      var cursor = e.target.result;\n\t      if (!cursor) {\n\t        return; // done\n\t      }\n\t      var metadata = decodeMetadataCompat(cursor.value);\n\t\n\t      metadata.winningRev = metadata.winningRev ||\n\t        winningRev(metadata);\n\t\n\t      function fetchMetadataSeq() {\n\t        // metadata.seq was added post-3.2.0, so if it's missing,\n\t        // we need to fetch it manually\n\t        var start = metadata.id + '::';\n\t        var end = metadata.id + '::\\uffff';\n\t        var req = bySeqStore.index('_doc_id_rev').openCursor(\n\t          IDBKeyRange.bound(start, end));\n\t\n\t        var metadataSeq = 0;\n\t        req.onsuccess = function (e) {\n\t          var cursor = e.target.result;\n\t          if (!cursor) {\n\t            metadata.seq = metadataSeq;\n\t            return onGetMetadataSeq();\n\t          }\n\t          var seq = cursor.primaryKey;\n\t          if (seq > metadataSeq) {\n\t            metadataSeq = seq;\n\t          }\n\t          cursor.continue();\n\t        };\n\t      }\n\t\n\t      function onGetMetadataSeq() {\n\t        var metadataToStore = encodeMetadata(metadata,\n\t          metadata.winningRev, metadata.deleted);\n\t\n\t        var req = docStore.put(metadataToStore);\n\t        req.onsuccess = function () {\n\t          cursor.continue();\n\t        };\n\t      }\n\t\n\t      if (metadata.seq) {\n\t        return onGetMetadataSeq();\n\t      }\n\t\n\t      fetchMetadataSeq();\n\t    };\n\t\n\t  }\n\t\n\t  api.type = function () {\n\t    return 'idb';\n\t  };\n\t\n\t  api._id = toPromise(function (callback) {\n\t    callback(null, api._meta.instanceId);\n\t  });\n\t\n\t  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n\t    idbBulkDocs(opts, req, reqOpts, api, idb, idbChanges, callback);\n\t  };\n\t\n\t  // First we look up the metadata in the ids database, then we fetch the\n\t  // current revision(s) from the by sequence store\n\t  api._get = function idb_get(id, opts, callback) {\n\t    var doc;\n\t    var metadata;\n\t    var err;\n\t    var txn = opts.ctx;\n\t    if (!txn) {\n\t      var txnResult = openTransactionSafely(idb,\n\t        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t    }\n\t\n\t    function finish() {\n\t      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n\t    }\n\t\n\t    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n\t      metadata = decodeMetadata(e.target.result);\n\t      // we can determine the result here if:\n\t      // 1. there is no such document\n\t      // 2. the document is deleted and we don't ask about specific rev\n\t      // When we ask with opts.rev we expect the answer to be either\n\t      // doc (possibly with _deleted=true) or missing error\n\t      if (!metadata) {\n\t        err = createError(MISSING_DOC, 'missing');\n\t        return finish();\n\t      }\n\t\n\t      var rev;\n\t      if(!opts.rev) {\n\t        rev = metadata.winningRev;\n\t        var deleted = isDeleted(metadata);\n\t        if (deleted) {\n\t          err = createError(MISSING_DOC, \"deleted\");\n\t          return finish();\n\t        }\n\t      } else {\n\t        rev = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n\t      }\n\t\n\t      var objectStore = txn.objectStore(BY_SEQ_STORE);\n\t      var key = metadata.id + '::' + rev;\n\t\n\t      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n\t        doc = e.target.result;\n\t        if (doc) {\n\t          doc = decodeDoc(doc);\n\t        }\n\t        if (!doc) {\n\t          err = createError(MISSING_DOC, 'missing');\n\t          return finish();\n\t        }\n\t        finish();\n\t      };\n\t    };\n\t  };\n\t\n\t  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n\t    var txn;\n\t    if (opts.ctx) {\n\t      txn = opts.ctx;\n\t    } else {\n\t      var txnResult = openTransactionSafely(idb,\n\t        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t    }\n\t    var digest = attachment.digest;\n\t    var type = attachment.content_type;\n\t\n\t    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n\t      var body = e.target.result.body;\n\t      readBlobData(body, type, opts.binary, function (blobData) {\n\t        callback(null, blobData);\n\t      });\n\t    };\n\t  };\n\t\n\t  api._info = function idb_info(callback) {\n\t\n\t    if (idb === null || !cachedDBs.has(dbName)) {\n\t      var error = new Error('db isn\\'t open');\n\t      error.id = 'idbNull';\n\t      return callback(error);\n\t    }\n\t    var updateSeq;\n\t    var docCount;\n\t\n\t    var txnResult = openTransactionSafely(idb, [BY_SEQ_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    var cursor = txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev');\n\t    cursor.onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      updateSeq = cursor ? cursor.key : 0;\n\t      // count within the same txn for consistency\n\t      docCount = api._meta.docCount;\n\t    };\n\t\n\t    txn.oncomplete = function () {\n\t      callback(null, {\n\t        doc_count: docCount,\n\t        update_seq: updateSeq,\n\t        // for debugging\n\t        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n\t      });\n\t    };\n\t  };\n\t\n\t  api._allDocs = function idb_allDocs(opts, callback) {\n\t    idbAllDocs(opts, api, idb, callback);\n\t  };\n\t\n\t  api._changes = function (opts) {\n\t    opts = clone(opts);\n\t\n\t    if (opts.continuous) {\n\t      var id = dbName + ':' + uuid();\n\t      idbChanges.addListener(dbName, id, api, opts);\n\t      idbChanges.notify(dbName);\n\t      return {\n\t        cancel: function () {\n\t          idbChanges.removeListener(dbName, id);\n\t        }\n\t      };\n\t    }\n\t\n\t    var docIds = opts.doc_ids && new _Set(opts.doc_ids);\n\t\n\t    opts.since = opts.since || 0;\n\t    var lastSeq = opts.since;\n\t\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    if (limit === 0) {\n\t      limit = 1; // per CouchDB _changes spec\n\t    }\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t\n\t    var results = [];\n\t    var numResults = 0;\n\t    var filter = filterChange(opts);\n\t    var docIdsToMetadata = new _Map();\n\t\n\t    var txn;\n\t    var bySeqStore;\n\t    var docStore;\n\t    var docIdRevIndex;\n\t\n\t    function onGetCursor(cursor) {\n\t\n\t      var doc = decodeDoc(cursor.value);\n\t      var seq = cursor.key;\n\t\n\t      if (docIds && !docIds.has(doc._id)) {\n\t        return cursor.continue();\n\t      }\n\t\n\t      var metadata;\n\t\n\t      function onGetMetadata() {\n\t        if (metadata.seq !== seq) {\n\t          // some other seq is later\n\t          return cursor.continue();\n\t        }\n\t\n\t        lastSeq = seq;\n\t\n\t        if (metadata.winningRev === doc._rev) {\n\t          return onGetWinningDoc(doc);\n\t        }\n\t\n\t        fetchWinningDoc();\n\t      }\n\t\n\t      function fetchWinningDoc() {\n\t        var docIdRev = doc._id + '::' + metadata.winningRev;\n\t        var req = docIdRevIndex.get(docIdRev);\n\t        req.onsuccess = function (e) {\n\t          onGetWinningDoc(decodeDoc(e.target.result));\n\t        };\n\t      }\n\t\n\t      function onGetWinningDoc(winningDoc) {\n\t\n\t        var change = opts.processChange(winningDoc, metadata, opts);\n\t        change.seq = metadata.seq;\n\t\n\t        var filtered = filter(change);\n\t        if (typeof filtered === 'object') {\n\t          return opts.complete(filtered);\n\t        }\n\t\n\t        if (filtered) {\n\t          numResults++;\n\t          if (returnDocs) {\n\t            results.push(change);\n\t          }\n\t          // process the attachment immediately\n\t          // for the benefit of live listeners\n\t          if (opts.attachments && opts.include_docs) {\n\t            fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n\t              postProcessAttachments([change], opts.binary).then(function () {\n\t                opts.onChange(change);\n\t              });\n\t            });\n\t          } else {\n\t            opts.onChange(change);\n\t          }\n\t        }\n\t        if (numResults !== limit) {\n\t          cursor.continue();\n\t        }\n\t      }\n\t\n\t      metadata = docIdsToMetadata.get(doc._id);\n\t      if (metadata) { // cached\n\t        return onGetMetadata();\n\t      }\n\t      // metadata not cached, have to go fetch it\n\t      docStore.get(doc._id).onsuccess = function (event) {\n\t        metadata = decodeMetadata(event.target.result);\n\t        docIdsToMetadata.set(doc._id, metadata);\n\t        onGetMetadata();\n\t      };\n\t    }\n\t\n\t    function onsuccess(event) {\n\t      var cursor = event.target.result;\n\t\n\t      if (!cursor) {\n\t        return;\n\t      }\n\t      onGetCursor(cursor);\n\t    }\n\t\n\t    function fetchChanges() {\n\t      var objectStores = [DOC_STORE, BY_SEQ_STORE];\n\t      if (opts.attachments) {\n\t        objectStores.push(ATTACH_STORE);\n\t      }\n\t      var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n\t      if (txnResult.error) {\n\t        return opts.complete(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t      txn.onabort = idbError(opts.complete);\n\t      txn.oncomplete = onTxnComplete;\n\t\n\t      bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t      docStore = txn.objectStore(DOC_STORE);\n\t      docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\t\n\t      var req;\n\t\n\t      if (opts.descending) {\n\t        req = bySeqStore.openCursor(null, 'prev');\n\t      } else {\n\t        req = bySeqStore.openCursor(IDBKeyRange.lowerBound(opts.since, true));\n\t      }\n\t\n\t      req.onsuccess = onsuccess;\n\t    }\n\t\n\t    fetchChanges();\n\t\n\t    function onTxnComplete() {\n\t\n\t      function finish() {\n\t        opts.complete(null, {\n\t          results: results,\n\t          last_seq: lastSeq\n\t        });\n\t      }\n\t\n\t      if (!opts.continuous && opts.attachments) {\n\t        // cannot guarantee that postProcessing was already done,\n\t        // so do it again\n\t        postProcessAttachments(results).then(finish);\n\t      } else {\n\t        finish();\n\t      }\n\t    }\n\t  };\n\t\n\t  api._close = function (callback) {\n\t    if (idb === null) {\n\t      return callback(createError(NOT_OPEN));\n\t    }\n\t\n\t    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n\t    // \"Returns immediately and closes the connection in a separate thread...\"\n\t    idb.close();\n\t    cachedDBs.delete(dbName);\n\t    idb = null;\n\t    callback();\n\t  };\n\t\n\t  api._getRevisionTree = function (docId, callback) {\n\t    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    var req = txn.objectStore(DOC_STORE).get(docId);\n\t    req.onsuccess = function (event) {\n\t      var doc = decodeMetadata(event.target.result);\n\t      if (!doc) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        callback(null, doc.rev_tree);\n\t      }\n\t    };\n\t  };\n\t\n\t  // This function removes revisions of document docId\n\t  // which are listed in revs and sets this document\n\t  // revision to to rev_tree\n\t  api._doCompaction = function (docId, revs, callback) {\n\t    var stores = [\n\t      DOC_STORE,\n\t      BY_SEQ_STORE,\n\t      ATTACH_STORE,\n\t      ATTACH_AND_SEQ_STORE\n\t    ];\n\t    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t\n\t    docStore.get(docId).onsuccess = function (event) {\n\t      var metadata = decodeMetadata(event.target.result);\n\t      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                                         revHash, ctx, opts) {\n\t        var rev = pos + '-' + revHash;\n\t        if (revs.indexOf(rev) !== -1) {\n\t          opts.status = 'missing';\n\t        }\n\t      });\n\t      compactRevs(revs, docId, txn);\n\t      var winningRev = metadata.winningRev;\n\t      var deleted = metadata.deleted;\n\t      txn.objectStore(DOC_STORE).put(\n\t        encodeMetadata(metadata, winningRev, deleted));\n\t    };\n\t    txn.onabort = idbError(callback);\n\t    txn.oncomplete = function () {\n\t      callback();\n\t    };\n\t  };\n\t\n\t\n\t  api._getLocal = function (id, callback) {\n\t    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var tx = txnResult.txn;\n\t    var req = tx.objectStore(LOCAL_STORE).get(id);\n\t\n\t    req.onerror = idbError(callback);\n\t    req.onsuccess = function (e) {\n\t      var doc = e.target.result;\n\t      if (!doc) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        delete doc['_doc_id_rev']; // for backwards compat\n\t        callback(null, doc);\n\t      }\n\t    };\n\t  };\n\t\n\t  api._putLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    delete doc._revisions; // ignore this, trust the rev\n\t    var oldRev = doc._rev;\n\t    var id = doc._id;\n\t    if (!oldRev) {\n\t      doc._rev = '0-1';\n\t    } else {\n\t      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n\t    }\n\t\n\t    var tx = opts.ctx;\n\t    var ret;\n\t    if (!tx) {\n\t      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      tx = txnResult.txn;\n\t      tx.onerror = idbError(callback);\n\t      tx.oncomplete = function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t\n\t    var oStore = tx.objectStore(LOCAL_STORE);\n\t    var req;\n\t    if (oldRev) {\n\t      req = oStore.get(id);\n\t      req.onsuccess = function (e) {\n\t        var oldDoc = e.target.result;\n\t        if (!oldDoc || oldDoc._rev !== oldRev) {\n\t          callback(createError(REV_CONFLICT));\n\t        } else { // update\n\t          var req = oStore.put(doc);\n\t          req.onsuccess = function () {\n\t            ret = {ok: true, id: doc._id, rev: doc._rev};\n\t            if (opts.ctx) { // return immediately\n\t              callback(null, ret);\n\t            }\n\t          };\n\t        }\n\t      };\n\t    } else { // new doc\n\t      req = oStore.add(doc);\n\t      req.onerror = function (e) {\n\t        // constraint error, already exists\n\t        callback(createError(REV_CONFLICT));\n\t        e.preventDefault(); // avoid transaction abort\n\t        e.stopPropagation(); // avoid transaction onerror\n\t      };\n\t      req.onsuccess = function () {\n\t        ret = {ok: true, id: doc._id, rev: doc._rev};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  api._removeLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var tx = opts.ctx;\n\t    if (!tx) {\n\t      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      tx = txnResult.txn;\n\t      tx.oncomplete = function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t    var ret;\n\t    var id = doc._id;\n\t    var oStore = tx.objectStore(LOCAL_STORE);\n\t    var req = oStore.get(id);\n\t\n\t    req.onerror = idbError(callback);\n\t    req.onsuccess = function (e) {\n\t      var oldDoc = e.target.result;\n\t      if (!oldDoc || oldDoc._rev !== doc._rev) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        oStore.delete(id);\n\t        ret = {ok: true, id: id, rev: '0-0'};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  api._destroy = function (opts, callback) {\n\t    idbChanges.removeAllListeners(dbName);\n\t\n\t    //Close open request for \"dbName\" database to fix ie delay.\n\t    var openReq = openReqList.get(dbName);\n\t    if (openReq && openReq.result) {\n\t      openReq.result.close();\n\t      cachedDBs.delete(dbName);\n\t    }\n\t    var req = indexedDB.deleteDatabase(dbName);\n\t\n\t    req.onsuccess = function () {\n\t      //Remove open request from the list.\n\t      openReqList.delete(dbName);\n\t      if (hasLocalStorage() && (dbName in localStorage)) {\n\t        delete localStorage[dbName];\n\t      }\n\t      callback(null, { 'ok': true });\n\t    };\n\t\n\t    req.onerror = idbError(callback);\n\t  };\n\t\n\t  var cached = cachedDBs.get(dbName);\n\t\n\t  if (cached) {\n\t    idb = cached.idb;\n\t    api._meta = cached.global;\n\t    return immediate(function () {\n\t      callback(null, api);\n\t    });\n\t  }\n\t\n\t  var req;\n\t  if (opts.storage) {\n\t    req = tryStorageOption(dbName, opts.storage);\n\t  } else {\n\t    req = indexedDB.open(dbName, ADAPTER_VERSION);\n\t  }\n\t\n\t  openReqList.set(dbName, req);\n\t\n\t  req.onupgradeneeded = function (e) {\n\t    var db = e.target.result;\n\t    if (e.oldVersion < 1) {\n\t      return createSchema(db); // new db, initial schema\n\t    }\n\t    // do migrations\n\t\n\t    var txn = e.currentTarget.transaction;\n\t    // these migrations have to be done in this function, before\n\t    // control is returned to the event loop, because IndexedDB\n\t\n\t    if (e.oldVersion < 3) {\n\t      createLocalStoreSchema(db); // v2 -> v3\n\t    }\n\t    if (e.oldVersion < 4) {\n\t      addAttachAndSeqStore(db); // v3 -> v4\n\t    }\n\t\n\t    var migrations = [\n\t      addDeletedOrLocalIndex, // v1 -> v2\n\t      migrateLocalStore,      // v2 -> v3\n\t      migrateAttsAndSeqs,     // v3 -> v4\n\t      migrateMetadata         // v4 -> v5\n\t    ];\n\t\n\t    var i = e.oldVersion;\n\t\n\t    function next() {\n\t      var migration = migrations[i - 1];\n\t      i++;\n\t      if (migration) {\n\t        migration(txn, next);\n\t      }\n\t    }\n\t\n\t    next();\n\t  };\n\t\n\t  req.onsuccess = function (e) {\n\t\n\t    idb = e.target.result;\n\t\n\t    idb.onversionchange = function () {\n\t      idb.close();\n\t      cachedDBs.delete(dbName);\n\t    };\n\t\n\t    idb.onabort = function (e) {\n\t      guardedConsole('error', 'Database has a global failure', e.target.error);\n\t      idb.close();\n\t      cachedDBs.delete(dbName);\n\t    };\n\t\n\t    var txn = idb.transaction([\n\t      META_STORE,\n\t      DETECT_BLOB_SUPPORT_STORE,\n\t      DOC_STORE\n\t    ], 'readwrite');\n\t\n\t    var req = txn.objectStore(META_STORE).get(META_STORE);\n\t\n\t    var blobSupport = null;\n\t    var docCount = null;\n\t    var instanceId = null;\n\t\n\t    req.onsuccess = function (e) {\n\t\n\t      var checkSetupComplete = function () {\n\t        if (blobSupport === null || docCount === null ||\n\t            instanceId === null) {\n\t          return;\n\t        } else {\n\t          api._meta = {\n\t            name: dbName,\n\t            instanceId: instanceId,\n\t            blobSupport: blobSupport,\n\t            docCount: docCount\n\t          };\n\t\n\t          cachedDBs.set(dbName, {\n\t            idb: idb,\n\t            global: api._meta\n\t          });\n\t          callback(null, api);\n\t        }\n\t      };\n\t\n\t      //\n\t      // fetch/store the id\n\t      //\n\t\n\t      var meta = e.target.result || {id: META_STORE};\n\t      if (dbName  + '_id' in meta) {\n\t        instanceId = meta[dbName + '_id'];\n\t        checkSetupComplete();\n\t      } else {\n\t        instanceId = uuid();\n\t        meta[dbName + '_id'] = instanceId;\n\t        txn.objectStore(META_STORE).put(meta).onsuccess = function () {\n\t          checkSetupComplete();\n\t        };\n\t      }\n\t\n\t      //\n\t      // check blob support\n\t      //\n\t\n\t      if (!blobSupportPromise) {\n\t        // make sure blob support is only checked once\n\t        blobSupportPromise = checkBlobSupport(txn);\n\t      }\n\t\n\t      blobSupportPromise.then(function (val) {\n\t        blobSupport = val;\n\t        checkSetupComplete();\n\t      });\n\t\n\t      //\n\t      // count docs\n\t      //\n\t\n\t      var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n\t      index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n\t        docCount = e.target.result;\n\t        checkSetupComplete();\n\t      };\n\t\n\t    };\n\t  };\n\t\n\t  req.onerror = function () {\n\t    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n\t    guardedConsole('error', msg);\n\t    callback(createError(IDB_ERROR, msg));\n\t  };\n\t}\n\t\n\tIdbPouch.valid = function () {\n\t  // Issue #2533, we finally gave up on doing bug\n\t  // detection instead of browser sniffing. Safari brought us\n\t  // to our knees.\n\t  var isSafari = typeof openDatabase !== 'undefined' &&\n\t    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n\t    !/Chrome/.test(navigator.userAgent) &&\n\t    !/BlackBerry/.test(navigator.platform);\n\t\n\t  // some outdated implementations of IDB that appear on Samsung\n\t  // and HTC Android devices <4.4 are missing IDBKeyRange\n\t  return !isSafari && typeof indexedDB !== 'undefined' &&\n\t    typeof IDBKeyRange !== 'undefined';\n\t};\n\t\n\tfunction tryStorageOption(dbName, storage) {\n\t  try { // option only available in Firefox 26+\n\t    return indexedDB.open(dbName, {\n\t      version: ADAPTER_VERSION,\n\t      storage: storage\n\t    });\n\t  } catch(err) {\n\t      return indexedDB.open(dbName, ADAPTER_VERSION);\n\t  }\n\t}\n\t\n\tfunction IDBPouch (PouchDB) {\n\t  PouchDB.adapter('idb', IdbPouch, true);\n\t}\n\t\n\t//\n\t// Parsing hex strings. Yeah.\n\t//\n\t// So basically we need this because of a bug in WebSQL:\n\t// https://code.google.com/p/chromium/issues/detail?id=422690\n\t// https://bugs.webkit.org/show_bug.cgi?id=137637\n\t//\n\t// UTF-8 and UTF-16 are provided as separate functions\n\t// for meager performance improvements\n\t//\n\t\n\tfunction decodeUtf8(str) {\n\t  return decodeURIComponent(escape(str));\n\t}\n\t\n\tfunction hexToInt(charCode) {\n\t  // '0'-'9' is 48-57\n\t  // 'A'-'F' is 65-70\n\t  // SQLite will only give us uppercase hex\n\t  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n\t}\n\t\n\t\n\t// Example:\n\t// pragma encoding=utf8;\n\t// select hex('A');\n\t// returns '41'\n\tfunction parseHexUtf8(str, start, end) {\n\t  var result = '';\n\t  while (start < end) {\n\t    result += String.fromCharCode(\n\t      (hexToInt(str.charCodeAt(start++)) << 4) |\n\t        hexToInt(str.charCodeAt(start++)));\n\t  }\n\t  return result;\n\t}\n\t\n\t// Example:\n\t// pragma encoding=utf16;\n\t// select hex('A');\n\t// returns '4100'\n\t// notice that the 00 comes after the 41 (i.e. it's swizzled)\n\tfunction parseHexUtf16(str, start, end) {\n\t  var result = '';\n\t  while (start < end) {\n\t    // UTF-16, so swizzle the bytes\n\t    result += String.fromCharCode(\n\t      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n\t        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n\t        (hexToInt(str.charCodeAt(start)) << 4) |\n\t        hexToInt(str.charCodeAt(start + 1)));\n\t    start += 4;\n\t  }\n\t  return result;\n\t}\n\t\n\tfunction parseHexString(str, encoding) {\n\t  if (encoding === 'UTF-8') {\n\t    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n\t  } else {\n\t    return parseHexUtf16(str, 0, str.length);\n\t  }\n\t}\n\t\n\tfunction quote(str) {\n\t  return \"'\" + str + \"'\";\n\t}\n\t\n\tvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\t\n\t// The object stores created for each database\n\t// DOC_STORE stores the document meta data, its revision history and state\n\tvar DOC_STORE$1 = quote('document-store');\n\t// BY_SEQ_STORE stores a particular version of a document, keyed by its\n\t// sequence id\n\tvar BY_SEQ_STORE$1 = quote('by-sequence');\n\t// Where we store attachments\n\tvar ATTACH_STORE$1 = quote('attach-store');\n\tvar LOCAL_STORE$1 = quote('local-store');\n\tvar META_STORE$1 = quote('metadata-store');\n\t// where we store many-to-many relations between attachment\n\t// digests and seqs\n\tvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\t\n\t// escapeBlob and unescapeBlob are workarounds for a websql bug:\n\t// https://code.google.com/p/chromium/issues/detail?id=422690\n\t// https://bugs.webkit.org/show_bug.cgi?id=137637\n\t// The goal is to never actually insert the \\u0000 character\n\t// in the database.\n\tfunction escapeBlob(str) {\n\t  return str\n\t    .replace(/\\u0002/g, '\\u0002\\u0002')\n\t    .replace(/\\u0001/g, '\\u0001\\u0002')\n\t    .replace(/\\u0000/g, '\\u0001\\u0001');\n\t}\n\t\n\tfunction unescapeBlob(str) {\n\t  return str\n\t    .replace(/\\u0001\\u0001/g, '\\u0000')\n\t    .replace(/\\u0001\\u0002/g, '\\u0001')\n\t    .replace(/\\u0002\\u0002/g, '\\u0002');\n\t}\n\t\n\tfunction stringifyDoc(doc) {\n\t  // don't bother storing the id/rev. it uses lots of space,\n\t  // in persistent map/reduce especially\n\t  delete doc._id;\n\t  delete doc._rev;\n\t  return JSON.stringify(doc);\n\t}\n\t\n\tfunction unstringifyDoc(doc, id, rev) {\n\t  doc = JSON.parse(doc);\n\t  doc._id = id;\n\t  doc._rev = rev;\n\t  return doc;\n\t}\n\t\n\t// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\n\tfunction qMarks(num) {\n\t  var s = '(';\n\t  while (num--) {\n\t    s += '?';\n\t    if (num) {\n\t      s += ',';\n\t    }\n\t  }\n\t  return s + ')';\n\t}\n\t\n\tfunction select(selector, table, joiner, where, orderBy) {\n\t  return 'SELECT ' + selector + ' FROM ' +\n\t    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n\t    (joiner ? (' ON ' + joiner) : '') +\n\t    (where ? (' WHERE ' +\n\t    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n\t    (orderBy ? (' ORDER BY ' + orderBy) : '');\n\t}\n\t\n\tfunction compactRevs$1(revs, docId, tx) {\n\t\n\t  if (!revs.length) {\n\t    return;\n\t  }\n\t\n\t  var numDone = 0;\n\t  var seqs = [];\n\t\n\t  function checkDone() {\n\t    if (++numDone === revs.length) { // done\n\t      deleteOrphans();\n\t    }\n\t  }\n\t\n\t  function deleteOrphans() {\n\t    // find orphaned attachment digests\n\t\n\t    if (!seqs.length) {\n\t      return;\n\t    }\n\t\n\t    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n\t      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\t\n\t    tx.executeSql(sql, seqs, function (tx, res) {\n\t\n\t      var digestsToCheck = [];\n\t      for (var i = 0; i < res.rows.length; i++) {\n\t        digestsToCheck.push(res.rows.item(i).digest);\n\t      }\n\t      if (!digestsToCheck.length) {\n\t        return;\n\t      }\n\t\n\t      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n\t        ' WHERE seq IN (' +\n\t        seqs.map(function () { return '?'; }).join(',') +\n\t        ')';\n\t      tx.executeSql(sql, seqs, function (tx) {\n\t\n\t        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n\t          ' WHERE digest IN (' +\n\t          digestsToCheck.map(function () { return '?'; }).join(',') +\n\t          ')';\n\t        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n\t          var nonOrphanedDigests = new _Set();\n\t          for (var i = 0; i < res.rows.length; i++) {\n\t            nonOrphanedDigests.add(res.rows.item(i).digest);\n\t          }\n\t          digestsToCheck.forEach(function (digest) {\n\t            if (nonOrphanedDigests.has(digest)) {\n\t              return;\n\t            }\n\t            tx.executeSql(\n\t              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n\t              [digest]);\n\t            tx.executeSql(\n\t              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // update by-seq and attach stores in parallel\n\t  revs.forEach(function (rev) {\n\t    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n\t      ' WHERE doc_id=? AND rev=?';\n\t\n\t    tx.executeSql(sql, [docId, rev], function (tx, res) {\n\t      if (!res.rows.length) { // already deleted\n\t        return checkDone();\n\t      }\n\t      var seq = res.rows.item(0).seq;\n\t      seqs.push(seq);\n\t\n\t      tx.executeSql(\n\t        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n\t    });\n\t  });\n\t}\n\t\n\tfunction websqlError(callback) {\n\t  return function (event) {\n\t    guardedConsole('error', 'WebSQL threw an error', event);\n\t    // event may actually be a SQLError object, so report is as such\n\t    var errorNameMatch = event && event.constructor.toString()\n\t        .match(/function ([^\\(]+)/);\n\t    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n\t    var errorReason = event.target || event.message;\n\t    callback(createError(WSQ_ERROR, errorReason, errorName));\n\t  };\n\t}\n\t\n\tfunction getSize(opts) {\n\t  if ('size' in opts) {\n\t    // triggers immediate popup in iOS, fixes #2347\n\t    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n\t    return opts.size * 1000000;\n\t  }\n\t  // In iOS, doesn't matter as long as it's <= 5000000.\n\t  // Except that if you request too much, our tests fail\n\t  // because of the native \"do you accept?\" popup.\n\t  // In Android <=4.3, this value is actually used as an\n\t  // honest-to-god ceiling for data, so we need to\n\t  // set it to a decently high number.\n\t  var isAndroid = typeof navigator !== 'undefined' &&\n\t    /Android/.test(navigator.userAgent);\n\t  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n\t}\n\t\n\tfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n\t  var newEdits = opts.new_edits;\n\t  var userDocs = req.docs;\n\t\n\t  // Parse the docs, give them a sequence number for the result\n\t  var docInfos = userDocs.map(function (doc) {\n\t    if (doc._id && isLocalId(doc._id)) {\n\t      return doc;\n\t    }\n\t    var newDoc = parseDoc(doc, newEdits);\n\t    return newDoc;\n\t  });\n\t\n\t  var docInfoErrors = docInfos.filter(function (docInfo) {\n\t    return docInfo.error;\n\t  });\n\t  if (docInfoErrors.length) {\n\t    return callback(docInfoErrors[0]);\n\t  }\n\t\n\t  var tx;\n\t  var results = new Array(docInfos.length);\n\t  var fetchedDocs = new _Map();\n\t\n\t  var preconditionErrored;\n\t  function complete() {\n\t    if (preconditionErrored) {\n\t      return callback(preconditionErrored);\n\t    }\n\t    websqlChanges.notify(api._name);\n\t    api._docCount = -1; // invalidate\n\t    callback(null, results);\n\t  }\n\t\n\t  function verifyAttachment(digest, callback) {\n\t    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n\t      ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      if (result.rows.item(0).cnt === 0) {\n\t        var err = createError(MISSING_STUB,\n\t          'unknown stub attachment with digest ' +\n\t          digest);\n\t        callback(err);\n\t      } else {\n\t        callback();\n\t      }\n\t    });\n\t  }\n\t\n\t  function verifyAttachments(finish) {\n\t    var digests = [];\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo.data && docInfo.data._attachments) {\n\t        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n\t          var att = docInfo.data._attachments[filename];\n\t          if (att.stub) {\n\t            digests.push(att.digest);\n\t          }\n\t        });\n\t      }\n\t    });\n\t    if (!digests.length) {\n\t      return finish();\n\t    }\n\t    var numDone = 0;\n\t    var err;\n\t\n\t    function checkDone() {\n\t      if (++numDone === digests.length) {\n\t        finish(err);\n\t      }\n\t    }\n\t    digests.forEach(function (digest) {\n\t      verifyAttachment(digest, function (attErr) {\n\t        if (attErr && !err) {\n\t          err = attErr;\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n\t                    isUpdate, delta, resultsIdx, callback) {\n\t\n\t    function finish() {\n\t      var data = docInfo.data;\n\t      var deletedInt = newRevIsDeleted ? 1 : 0;\n\t\n\t      var id = data._id;\n\t      var rev = data._rev;\n\t      var json = stringifyDoc(data);\n\t      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n\t        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n\t      var sqlArgs = [id, rev, json, deletedInt];\n\t\n\t      // map seqs to attachment digests, which\n\t      // we will need later during compaction\n\t      function insertAttachmentMappings(seq, callback) {\n\t        var attsAdded = 0;\n\t        var attsToAdd = Object.keys(data._attachments || {});\n\t\n\t        if (!attsToAdd.length) {\n\t          return callback();\n\t        }\n\t        function checkDone() {\n\t          if (++attsAdded === attsToAdd.length) {\n\t            callback();\n\t          }\n\t          return false; // ack handling a constraint error\n\t        }\n\t        function add(att) {\n\t          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n\t            ' (digest, seq) VALUES (?,?)';\n\t          var sqlArgs = [data._attachments[att].digest, seq];\n\t          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n\t          // second callback is for a constaint error, which we ignore\n\t          // because this docid/rev has already been associated with\n\t          // the digest (e.g. when new_edits == false)\n\t        }\n\t        for (var i = 0; i < attsToAdd.length; i++) {\n\t          add(attsToAdd[i]); // do in parallel\n\t        }\n\t      }\n\t\n\t      tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t        var seq = result.insertId;\n\t        insertAttachmentMappings(seq, function () {\n\t          dataWritten(tx, seq);\n\t        });\n\t      }, function () {\n\t        // constraint error, recover by updating instead (see #1638)\n\t        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n\t          'doc_id=? AND rev=?');\n\t        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n\t          var seq = res.rows.item(0).seq;\n\t          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n\t            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n\t          var sqlArgs = [json, deletedInt, id, rev];\n\t          tx.executeSql(sql, sqlArgs, function (tx) {\n\t            insertAttachmentMappings(seq, function () {\n\t              dataWritten(tx, seq);\n\t            });\n\t          });\n\t        });\n\t        return false; // ack that we've handled the error\n\t      });\n\t    }\n\t\n\t    function collectResults(attachmentErr) {\n\t      if (!err) {\n\t        if (attachmentErr) {\n\t          err = attachmentErr;\n\t          callback(err);\n\t        } else if (recv === attachments.length) {\n\t          finish();\n\t        }\n\t      }\n\t    }\n\t\n\t    var err = null;\n\t    var recv = 0;\n\t\n\t    docInfo.data._id = docInfo.metadata.id;\n\t    docInfo.data._rev = docInfo.metadata.rev;\n\t    var attachments = Object.keys(docInfo.data._attachments || {});\n\t\n\t\n\t    if (newRevIsDeleted) {\n\t      docInfo.data._deleted = true;\n\t    }\n\t\n\t    function attachmentSaved(err) {\n\t      recv++;\n\t      collectResults(err);\n\t    }\n\t\n\t    attachments.forEach(function (key) {\n\t      var att = docInfo.data._attachments[key];\n\t      if (!att.stub) {\n\t        var data = att.data;\n\t        delete att.data;\n\t        att.revpos = parseInt(winningRev, 10);\n\t        var digest = att.digest;\n\t        saveAttachment(digest, data, attachmentSaved);\n\t      } else {\n\t        recv++;\n\t        collectResults();\n\t      }\n\t    });\n\t\n\t    if (!attachments.length) {\n\t      finish();\n\t    }\n\t\n\t    function dataWritten(tx, seq) {\n\t      var id = docInfo.metadata.id;\n\t\n\t      var revsToCompact = docInfo.stemmedRevs || [];\n\t      if (isUpdate && api.auto_compaction) {\n\t        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n\t      }\n\t      if (revsToCompact.length) {\n\t        compactRevs$1(revsToCompact, id, tx);\n\t      }\n\t\n\t      docInfo.metadata.seq = seq;\n\t      var rev = docInfo.metadata.rev;\n\t      delete docInfo.metadata.rev;\n\t\n\t      var sql = isUpdate ?\n\t      'UPDATE ' + DOC_STORE$1 +\n\t      ' SET json=?, max_seq=?, winningseq=' +\n\t      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n\t      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n\t        : 'INSERT INTO ' + DOC_STORE$1 +\n\t      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n\t      var metadataStr = safeJsonStringify(docInfo.metadata);\n\t      var params = isUpdate ?\n\t        [metadataStr, seq, winningRev, id] :\n\t        [id, seq, seq, metadataStr];\n\t      tx.executeSql(sql, params, function () {\n\t        results[resultsIdx] = {\n\t          ok: true,\n\t          id: docInfo.metadata.id,\n\t          rev: rev\n\t        };\n\t        fetchedDocs.set(id, docInfo.metadata);\n\t        callback();\n\t      });\n\t    }\n\t  }\n\t\n\t  function websqlProcessDocs() {\n\t    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n\t                results, writeDoc, opts);\n\t  }\n\t\n\t  function fetchExistingDocs(callback) {\n\t    if (!docInfos.length) {\n\t      return callback();\n\t    }\n\t\n\t    var numFetched = 0;\n\t\n\t    function checkDone() {\n\t      if (++numFetched === docInfos.length) {\n\t        callback();\n\t      }\n\t    }\n\t\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo._id && isLocalId(docInfo._id)) {\n\t        return checkDone(); // skip local docs\n\t      }\n\t      var id = docInfo.metadata.id;\n\t      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n\t      ' WHERE id = ?', [id], function (tx, result) {\n\t        if (result.rows.length) {\n\t          var metadata = safeJsonParse(result.rows.item(0).json);\n\t          fetchedDocs.set(id, metadata);\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function saveAttachment(digest, data, callback) {\n\t    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      if (result.rows.length) { // attachment already exists\n\t        return callback();\n\t      }\n\t      // we could just insert before selecting and catch the error,\n\t      // but my hunch is that it's cheaper not to serialize the blob\n\t      // from JS to C if we don't have to (TODO: confirm this)\n\t      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n\t      ' (digest, body, escaped) VALUES (?,?,1)';\n\t      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n\t        callback();\n\t      }, function () {\n\t        // ignore constaint errors, means it already exists\n\t        callback();\n\t        return false; // ack we handled the error\n\t      });\n\t    });\n\t  }\n\t\n\t  preprocessAttachments(docInfos, 'binary', function (err) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    db.transaction(function (txn) {\n\t      tx = txn;\n\t      verifyAttachments(function (err) {\n\t        if (err) {\n\t          preconditionErrored = err;\n\t        } else {\n\t          fetchExistingDocs(websqlProcessDocs);\n\t        }\n\t      });\n\t    }, websqlError(callback), complete);\n\t  });\n\t}\n\t\n\tvar cachedDatabases = new _Map();\n\t\n\t// openDatabase passed in through opts (e.g. for node-websql)\n\tfunction openDatabaseWithOpts(opts) {\n\t  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n\t}\n\t\n\tfunction openDBSafely(opts) {\n\t  try {\n\t    return {\n\t      db: openDatabaseWithOpts(opts)\n\t    };\n\t  } catch (err) {\n\t    return {\n\t      error: err\n\t    };\n\t  }\n\t}\n\t\n\tfunction openDB$1(opts) {\n\t  var cachedResult = cachedDatabases.get(opts.name);\n\t  if (!cachedResult) {\n\t    cachedResult = openDBSafely(opts);\n\t    cachedDatabases.set(opts.name, cachedResult);\n\t  }\n\t  return cachedResult;\n\t}\n\t\n\tvar websqlChanges = new Changes();\n\t\n\tfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n\t  var attachments = Object.keys(doc._attachments || {});\n\t  if (!attachments.length) {\n\t    return cb && cb();\n\t  }\n\t  var numDone = 0;\n\t\n\t  function checkDone() {\n\t    if (++numDone === attachments.length && cb) {\n\t      cb();\n\t    }\n\t  }\n\t\n\t  function fetchAttachment(doc, att) {\n\t    var attObj = doc._attachments[att];\n\t    var attOpts = {binary: opts.binary, ctx: txn};\n\t    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n\t      doc._attachments[att] = extend$1(\n\t        pick(attObj, ['digest', 'content_type']),\n\t        { data: data }\n\t      );\n\t      checkDone();\n\t    });\n\t  }\n\t\n\t  attachments.forEach(function (att) {\n\t    if (opts.attachments && opts.include_docs) {\n\t      fetchAttachment(doc, att);\n\t    } else {\n\t      doc._attachments[att].stub = true;\n\t      checkDone();\n\t    }\n\t  });\n\t}\n\t\n\tvar POUCH_VERSION = 1;\n\t\n\t// these indexes cover the ground for most allDocs queries\n\tvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n\t  BY_SEQ_STORE$1 + ' (seq, deleted)';\n\tvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n\t  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n\t    BY_SEQ_STORE$1 + ' (doc_id, rev)';\n\tvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n\t  DOC_STORE$1 + ' (winningseq)';\n\tvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n\t    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\n\tvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n\t  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n\t    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\t\n\tvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n\t  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\t\n\tvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n\t  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n\t  BY_SEQ_STORE$1 + '.json AS data, ' +\n\t  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n\t  DOC_STORE$1 + '.json AS metadata';\n\t\n\tfunction WebSqlPouch$1(opts, callback) {\n\t  var api = this;\n\t  var instanceId = null;\n\t  var size = getSize(opts);\n\t  var idRequests = [];\n\t  var encoding;\n\t\n\t  api._docCount = -1; // cache sqlite count(*) for performance\n\t  api._name = opts.name;\n\t\n\t  // extend the options here, because sqlite plugin has a ton of options\n\t  // and they are constantly changing, so it's more prudent to allow anything\n\t  var websqlOpts = extend$1({}, opts, {\n\t    version: POUCH_VERSION,\n\t    description: opts.name,\n\t    size: size\n\t  });\n\t  var openDBResult = openDB$1(websqlOpts);\n\t  if (openDBResult.error) {\n\t    return websqlError(callback)(openDBResult.error);\n\t  }\n\t  var db = openDBResult.db;\n\t  if (typeof db.readTransaction !== 'function') {\n\t    // doesn't exist in sqlite plugin\n\t    db.readTransaction = db.transaction;\n\t  }\n\t\n\t  function dbCreated() {\n\t    // note the db name in case the browser upgrades to idb\n\t    if (hasLocalStorage()) {\n\t      window.localStorage['_pouch__websqldb_' + api._name] = true;\n\t    }\n\t    callback(null, api);\n\t  }\n\t\n\t  // In this migration, we added the 'deleted' and 'local' columns to the\n\t  // by-seq and doc store tables.\n\t  // To preserve existing user data, we re-process all the existing JSON\n\t  // and add these values.\n\t  // Called migration2 because it corresponds to adapter version (db_version) #2\n\t  function runMigration2(tx, callback) {\n\t    // index used for the join in the allDocs query\n\t    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\t\n\t    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n\t      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n\t      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n\t      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n\t        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n\t        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n\t          DOC_STORE$1 + ' (local, id)');\n\t\n\t        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n\t          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n\t          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\t\n\t        tx.executeSql(sql, [], function (tx, result) {\n\t\n\t          var deleted = [];\n\t          var local = [];\n\t\n\t          for (var i = 0; i < result.rows.length; i++) {\n\t            var item = result.rows.item(i);\n\t            var seq = item.seq;\n\t            var metadata = JSON.parse(item.metadata);\n\t            if (isDeleted(metadata)) {\n\t              deleted.push(seq);\n\t            }\n\t            if (isLocalId(metadata.id)) {\n\t              local.push(metadata.id);\n\t            }\n\t          }\n\t          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n\t            qMarks(local.length), local, function () {\n\t            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n\t              ' SET deleted = 1 WHERE seq IN ' +\n\t              qMarks(deleted.length), deleted, callback);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we make all the local docs unversioned\n\t  function runMigration3(tx, callback) {\n\t    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n\t      ' (id UNIQUE, rev, json)';\n\t    tx.executeSql(local, [], function () {\n\t      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n\t        BY_SEQ_STORE$1 + '.json AS data ' +\n\t        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n\t        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n\t        DOC_STORE$1 + '.winningseq WHERE local = 1';\n\t      tx.executeSql(sql, [], function (tx, res) {\n\t        var rows = [];\n\t        for (var i = 0; i < res.rows.length; i++) {\n\t          rows.push(res.rows.item(i));\n\t        }\n\t        function doNext() {\n\t          if (!rows.length) {\n\t            return callback(tx);\n\t          }\n\t          var row = rows.shift();\n\t          var rev = JSON.parse(row.data)._rev;\n\t          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n\t              ' (id, rev, json) VALUES (?,?,?)',\n\t              [row.id, rev, row.data], function (tx) {\n\t            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n\t                [row.id], function (tx) {\n\t              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n\t                  [row.seq], function () {\n\t                doNext();\n\t              });\n\t            });\n\t          });\n\t        }\n\t        doNext();\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we remove doc_id_rev and just use rev\n\t  function runMigration4(tx, callback) {\n\t\n\t    function updateRows(rows) {\n\t      function doNext() {\n\t        if (!rows.length) {\n\t          return callback(tx);\n\t        }\n\t        var row = rows.shift();\n\t        var doc_id_rev = parseHexString(row.hex, encoding);\n\t        var idx = doc_id_rev.lastIndexOf('::');\n\t        var doc_id = doc_id_rev.substring(0, idx);\n\t        var rev = doc_id_rev.substring(idx + 2);\n\t        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n\t          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n\t        tx.executeSql(sql, [doc_id, rev, doc_id_rev], function () {\n\t          doNext();\n\t        });\n\t      }\n\t      doNext();\n\t    }\n\t\n\t    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n\t    tx.executeSql(sql, [], function (tx) {\n\t      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n\t      tx.executeSql(sql, [], function (tx) {\n\t        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n\t          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n\t          tx.executeSql(sql, [], function (tx, res) {\n\t            var rows = [];\n\t            for (var i = 0; i < res.rows.length; i++) {\n\t              rows.push(res.rows.item(i));\n\t            }\n\t            updateRows(rows);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we add the attach_and_seq table\n\t  // for issue #2818\n\t  function runMigration5(tx, callback) {\n\t\n\t    function migrateAttsAndSeqs(tx) {\n\t      // need to actually populate the table. this is the expensive part,\n\t      // so as an optimization, check first that this database even\n\t      // contains attachments\n\t      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n\t      tx.executeSql(sql, [], function (tx, res) {\n\t        var count = res.rows.item(0).cnt;\n\t        if (!count) {\n\t          return callback(tx);\n\t        }\n\t\n\t        var offset = 0;\n\t        var pageSize = 10;\n\t        function nextPage() {\n\t          var sql = select(\n\t            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n\t            [DOC_STORE$1, BY_SEQ_STORE$1],\n\t            DOC_STORE_AND_BY_SEQ_JOINER,\n\t            null,\n\t            DOC_STORE$1 + '.id '\n\t          );\n\t          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n\t          offset += pageSize;\n\t          tx.executeSql(sql, [], function (tx, res) {\n\t            if (!res.rows.length) {\n\t              return callback(tx);\n\t            }\n\t            var digestSeqs = {};\n\t            function addDigestSeq(digest, seq) {\n\t              // uniq digest/seq pairs, just in case there are dups\n\t              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n\t              if (seqs.indexOf(seq) === -1) {\n\t                seqs.push(seq);\n\t              }\n\t            }\n\t            for (var i = 0; i < res.rows.length; i++) {\n\t              var row = res.rows.item(i);\n\t              var doc = unstringifyDoc(row.data, row.id, row.rev);\n\t              var atts = Object.keys(doc._attachments || {});\n\t              for (var j = 0; j < atts.length; j++) {\n\t                var att = doc._attachments[atts[j]];\n\t                addDigestSeq(att.digest, row.seq);\n\t              }\n\t            }\n\t            var digestSeqPairs = [];\n\t            Object.keys(digestSeqs).forEach(function (digest) {\n\t              var seqs = digestSeqs[digest];\n\t              seqs.forEach(function (seq) {\n\t                digestSeqPairs.push([digest, seq]);\n\t              });\n\t            });\n\t            if (!digestSeqPairs.length) {\n\t              return nextPage();\n\t            }\n\t            var numDone = 0;\n\t            digestSeqPairs.forEach(function (pair) {\n\t              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n\t                ' (digest, seq) VALUES (?,?)';\n\t              tx.executeSql(sql, pair, function () {\n\t                if (++numDone === digestSeqPairs.length) {\n\t                  nextPage();\n\t                }\n\t              });\n\t            });\n\t          });\n\t        }\n\t        nextPage();\n\t      });\n\t    }\n\t\n\t    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n\t      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n\t    tx.executeSql(attachAndRev, [], function (tx) {\n\t      tx.executeSql(\n\t        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n\t          tx.executeSql(\n\t            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n\t            migrateAttsAndSeqs);\n\t        });\n\t    });\n\t  }\n\t\n\t  // in this migration, we use escapeBlob() and unescapeBlob()\n\t  // instead of reading out the binary as HEX, which is slow\n\t  function runMigration6(tx, callback) {\n\t    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n\t      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n\t    tx.executeSql(sql, [], callback);\n\t  }\n\t\n\t  // issue #3136, in this migration we need a \"latest seq\" as well\n\t  // as the \"winning seq\" in the doc store\n\t  function runMigration7(tx, callback) {\n\t    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n\t      ' ADD COLUMN max_seq INTEGER';\n\t    tx.executeSql(sql, [], function (tx) {\n\t      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n\t        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n\t      tx.executeSql(sql, [], function (tx) {\n\t        // add unique index after filling, else we'll get a constraint\n\t        // error when we do the ALTER TABLE\n\t        var sql =\n\t          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n\t          DOC_STORE$1 + ' (max_seq)';\n\t        tx.executeSql(sql, [], callback);\n\t      });\n\t    });\n\t  }\n\t\n\t  function checkEncoding(tx, cb) {\n\t    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n\t    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n\t        var hex = res.rows.item(0).hex;\n\t        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n\t        cb();\n\t      }\n\t    );\n\t  }\n\t\n\t  function onGetInstanceId() {\n\t    while (idRequests.length > 0) {\n\t      var idCallback = idRequests.pop();\n\t      idCallback(null, instanceId);\n\t    }\n\t  }\n\t\n\t  function onGetVersion(tx, dbVersion) {\n\t    if (dbVersion === 0) {\n\t      // initial schema\n\t\n\t      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n\t        ' (dbid, db_version INTEGER)';\n\t      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n\t        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n\t      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n\t        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n\t      // TODO: migrate winningseq to INTEGER\n\t      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n\t        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n\t      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n\t        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n\t        'json, deleted TINYINT(1), doc_id, rev)';\n\t      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n\t        ' (id UNIQUE, rev, json)';\n\t\n\t      // creates\n\t      tx.executeSql(attach);\n\t      tx.executeSql(local);\n\t      tx.executeSql(attachAndRev, [], function () {\n\t        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n\t        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n\t      });\n\t      tx.executeSql(doc, [], function () {\n\t        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\t        tx.executeSql(seq, [], function () {\n\t          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n\t          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n\t          tx.executeSql(meta, [], function () {\n\t            // mark the db version, and new dbid\n\t            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n\t              ' (db_version, dbid) VALUES (?,?)';\n\t            instanceId = uuid();\n\t            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n\t            tx.executeSql(initSeq, initSeqArgs, function () {\n\t              onGetInstanceId();\n\t            });\n\t          });\n\t        });\n\t      });\n\t    } else { // version > 0\n\t\n\t      var setupDone = function () {\n\t        var migrated = dbVersion < ADAPTER_VERSION$1;\n\t        if (migrated) {\n\t          // update the db version within this transaction\n\t          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n\t            ADAPTER_VERSION$1);\n\t        }\n\t        // notify db.id() callers\n\t        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n\t        tx.executeSql(sql, [], function (tx, result) {\n\t          instanceId = result.rows.item(0).dbid;\n\t          onGetInstanceId();\n\t        });\n\t      };\n\t\n\t      // would love to use promises here, but then websql\n\t      // ends the transaction early\n\t      var tasks = [\n\t        runMigration2,\n\t        runMigration3,\n\t        runMigration4,\n\t        runMigration5,\n\t        runMigration6,\n\t        runMigration7,\n\t        setupDone\n\t      ];\n\t\n\t      // run each migration sequentially\n\t      var i = dbVersion;\n\t      var nextMigration = function (tx) {\n\t        tasks[i - 1](tx, nextMigration);\n\t        i++;\n\t      };\n\t      nextMigration(tx);\n\t    }\n\t  }\n\t\n\t  function setup() {\n\t    db.transaction(function (tx) {\n\t      // first check the encoding\n\t      checkEncoding(tx, function () {\n\t        // then get the version\n\t        fetchVersion(tx);\n\t      });\n\t    }, websqlError(callback), dbCreated);\n\t  }\n\t\n\t  function fetchVersion(tx) {\n\t    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n\t    tx.executeSql(sql, [], function (tx, result) {\n\t      if (!result.rows.length) {\n\t        // database hasn't even been created yet (version 0)\n\t        onGetVersion(tx, 0);\n\t      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n\t        // table was created, but without the new db_version column,\n\t        // so add it.\n\t        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n\t          ' ADD COLUMN db_version INTEGER', [], function () {\n\t          // before version 2, this column didn't even exist\n\t          onGetVersion(tx, 1);\n\t        });\n\t      } else { // column exists, we can safely get it\n\t        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n\t          [], function (tx, result) {\n\t          var dbVersion = result.rows.item(0).db_version;\n\t          onGetVersion(tx, dbVersion);\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  setup();\n\t\n\t  api.type = function () {\n\t    return 'websql';\n\t  };\n\t\n\t  api._id = toPromise(function (callback) {\n\t    callback(null, instanceId);\n\t  });\n\t\n\t  api._info = function (callback) {\n\t    db.readTransaction(function (tx) {\n\t      countDocs(tx, function (docCount) {\n\t        var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n\t        tx.executeSql(sql, [], function (tx, res) {\n\t          var updateSeq = res.rows.item(0).seq || 0;\n\t          callback(null, {\n\t            doc_count: docCount,\n\t            update_seq: updateSeq,\n\t            websql_encoding: encoding\n\t          });\n\t        });\n\t      });\n\t    }, websqlError(callback));\n\t  };\n\t\n\t  api._bulkDocs = function (req, reqOpts, callback) {\n\t    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n\t  };\n\t\n\t  function latest$$(tx, id, rev, callback, finish) {\n\t    var sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE_AND_BY_SEQ_JOINER,\n\t        DOC_STORE$1 + '.id=?');\n\t    var sqlArgs = [id];\n\t\n\t    tx.executeSql(sql, sqlArgs, function (a, results) {\n\t      if (!results.rows.length) {\n\t        var err = createError(MISSING_DOC, 'missing');\n\t        return finish(err);\n\t      }\n\t      var item = results.rows.item(0);\n\t      var metadata = safeJsonParse(item.metadata);\n\t      callback(latest(rev, metadata));\n\t    });\n\t  }\n\t\n\t  api._get = function (id, opts, callback) {\n\t    var doc;\n\t    var metadata;\n\t    var tx = opts.ctx;\n\t    if (!tx) {\n\t      return db.readTransaction(function (txn) {\n\t        api._get(id, extend$1({ctx: txn}, opts), callback);\n\t      });\n\t    }\n\t\n\t    function finish(err) {\n\t      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n\t    }\n\t\n\t    var sql;\n\t    var sqlArgs;\n\t\n\t    if(!opts.rev) {\n\t      sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE_AND_BY_SEQ_JOINER,\n\t        DOC_STORE$1 + '.id=?');\n\t      sqlArgs = [id];\n\t    } else if (opts.latest) {\n\t      latest$$(tx, id, opts.rev, function (latestRev) {\n\t        opts.latest = false;\n\t        opts.rev = latestRev;\n\t        api._get(id, opts, callback);\n\t      }, finish);\n\t      return;\n\t    } else {\n\t      sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n\t        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n\t      sqlArgs = [id, opts.rev];\n\t    }\n\t\n\t    tx.executeSql(sql, sqlArgs, function (a, results) {\n\t      if (!results.rows.length) {\n\t        var missingErr = createError(MISSING_DOC, 'missing');\n\t        return finish(missingErr);\n\t      }\n\t      var item = results.rows.item(0);\n\t      metadata = safeJsonParse(item.metadata);\n\t      if (item.deleted && !opts.rev) {\n\t        var deletedErr = createError(MISSING_DOC, 'deleted');\n\t        return finish(deletedErr);\n\t      }\n\t      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n\t      finish();\n\t    });\n\t  };\n\t\n\t  function countDocs(tx, callback) {\n\t\n\t    if (api._docCount !== -1) {\n\t      return callback(api._docCount);\n\t    }\n\t\n\t    // count the total rows\n\t    var sql = select(\n\t      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n\t      [DOC_STORE$1, BY_SEQ_STORE$1],\n\t      DOC_STORE_AND_BY_SEQ_JOINER,\n\t      BY_SEQ_STORE$1 + '.deleted=0');\n\t\n\t    tx.executeSql(sql, [], function (tx, result) {\n\t      api._docCount = result.rows.item(0).num;\n\t      callback(api._docCount);\n\t    });\n\t  }\n\t\n\t  api._allDocs = function (opts, callback) {\n\t    var results = [];\n\t    var totalRows;\n\t\n\t    var start = 'startkey' in opts ? opts.startkey : false;\n\t    var end = 'endkey' in opts ? opts.endkey : false;\n\t    var key = 'key' in opts ? opts.key : false;\n\t    var descending = 'descending' in opts ? opts.descending : false;\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    var offset = 'skip' in opts ? opts.skip : 0;\n\t    var inclusiveEnd = opts.inclusive_end !== false;\n\t\n\t    var sqlArgs = [];\n\t    var criteria = [];\n\t\n\t    if (key !== false) {\n\t      criteria.push(DOC_STORE$1 + '.id = ?');\n\t      sqlArgs.push(key);\n\t    } else if (start !== false || end !== false) {\n\t      if (start !== false) {\n\t        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n\t        sqlArgs.push(start);\n\t      }\n\t      if (end !== false) {\n\t        var comparator = descending ? '>' : '<';\n\t        if (inclusiveEnd) {\n\t          comparator += '=';\n\t        }\n\t        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n\t        sqlArgs.push(end);\n\t      }\n\t      if (key !== false) {\n\t        criteria.push(DOC_STORE$1 + '.id = ?');\n\t        sqlArgs.push(key);\n\t      }\n\t    }\n\t\n\t    if (opts.deleted !== 'ok') {\n\t      // report deleted if keys are specified\n\t      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n\t    }\n\t\n\t    db.readTransaction(function (tx) {\n\t\n\t      // first count up the total rows\n\t      countDocs(tx, function (count) {\n\t        totalRows = count;\n\t\n\t        if (limit === 0) {\n\t          return;\n\t        }\n\t\n\t        // then actually fetch the documents\n\t        var sql = select(\n\t          SELECT_DOCS,\n\t          [DOC_STORE$1, BY_SEQ_STORE$1],\n\t          DOC_STORE_AND_BY_SEQ_JOINER,\n\t          criteria,\n\t          DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n\t          );\n\t        sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\t\n\t        tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t          for (var i = 0, l = result.rows.length; i < l; i++) {\n\t            var item = result.rows.item(i);\n\t            var metadata = safeJsonParse(item.metadata);\n\t            var id = metadata.id;\n\t            var data = unstringifyDoc(item.data, id, item.rev);\n\t            var winningRev = data._rev;\n\t            var doc = {\n\t              id: id,\n\t              key: id,\n\t              value: {rev: winningRev}\n\t            };\n\t            if (opts.include_docs) {\n\t              doc.doc = data;\n\t              doc.doc._rev = winningRev;\n\t              if (opts.conflicts) {\n\t                var conflicts = collectConflicts(metadata);\n\t                if (conflicts.length) {\n\t                  doc.doc._conflicts = conflicts;\n\t                }\n\t              }\n\t              fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n\t            }\n\t            if (item.deleted) {\n\t              if (opts.deleted === 'ok') {\n\t                doc.value.deleted = true;\n\t                doc.doc = null;\n\t              } else {\n\t                continue;\n\t              }\n\t            }\n\t            results.push(doc);\n\t          }\n\t        });\n\t      });\n\t    }, websqlError(callback), function () {\n\t      callback(null, {\n\t        total_rows: totalRows,\n\t        offset: opts.skip,\n\t        rows: results\n\t      });\n\t    });\n\t  };\n\t\n\t  api._changes = function (opts) {\n\t    opts = clone(opts);\n\t\n\t    if (opts.continuous) {\n\t      var id = api._name + ':' + uuid();\n\t      websqlChanges.addListener(api._name, id, api, opts);\n\t      websqlChanges.notify(api._name);\n\t      return {\n\t        cancel: function () {\n\t          websqlChanges.removeListener(api._name, id);\n\t        }\n\t      };\n\t    }\n\t\n\t    var descending = opts.descending;\n\t\n\t    // Ignore the `since` parameter when `descending` is true\n\t    opts.since = opts.since && !descending ? opts.since : 0;\n\t\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    if (limit === 0) {\n\t      limit = 1; // per CouchDB _changes spec\n\t    }\n\t\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t    var results = [];\n\t    var numResults = 0;\n\t\n\t    function fetchChanges() {\n\t\n\t      var selectStmt =\n\t        DOC_STORE$1 + '.json AS metadata, ' +\n\t        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n\t        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n\t        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\t\n\t      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\t\n\t      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n\t        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\t\n\t      var criteria = ['maxSeq > ?'];\n\t      var sqlArgs = [opts.since];\n\t\n\t      if (opts.doc_ids) {\n\t        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n\t        sqlArgs = sqlArgs.concat(opts.doc_ids);\n\t      }\n\t\n\t      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\t\n\t      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\t\n\t      var filter = filterChange(opts);\n\t      if (!opts.view && !opts.filter) {\n\t        // we can just limit in the query\n\t        sql += ' LIMIT ' + limit;\n\t      }\n\t\n\t      var lastSeq = opts.since || 0;\n\t      db.readTransaction(function (tx) {\n\t        tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t          function reportChange(change) {\n\t            return function () {\n\t              opts.onChange(change);\n\t            };\n\t          }\n\t          for (var i = 0, l = result.rows.length; i < l; i++) {\n\t            var item = result.rows.item(i);\n\t            var metadata = safeJsonParse(item.metadata);\n\t            lastSeq = item.maxSeq;\n\t\n\t            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n\t              item.winningRev);\n\t            var change = opts.processChange(doc, metadata, opts);\n\t            change.seq = item.maxSeq;\n\t\n\t            var filtered = filter(change);\n\t            if (typeof filtered === 'object') {\n\t              return opts.complete(filtered);\n\t            }\n\t\n\t            if (filtered) {\n\t              numResults++;\n\t              if (returnDocs) {\n\t                results.push(change);\n\t              }\n\t              // process the attachment immediately\n\t              // for the benefit of live listeners\n\t              if (opts.attachments && opts.include_docs) {\n\t                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n\t                  reportChange(change));\n\t              } else {\n\t                reportChange(change)();\n\t              }\n\t            }\n\t            if (numResults === limit) {\n\t              break;\n\t            }\n\t          }\n\t        });\n\t      }, websqlError(opts.complete), function () {\n\t        if (!opts.continuous) {\n\t          opts.complete(null, {\n\t            results: results,\n\t            last_seq: lastSeq\n\t          });\n\t        }\n\t      });\n\t    }\n\t\n\t    fetchChanges();\n\t  };\n\t\n\t  api._close = function (callback) {\n\t    //WebSQL databases do not need to be closed\n\t    callback();\n\t  };\n\t\n\t  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n\t    var res;\n\t    var tx = opts.ctx;\n\t    var digest = attachment.digest;\n\t    var type = attachment.content_type;\n\t    var sql = 'SELECT escaped, ' +\n\t      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n\t      ATTACH_STORE$1 + ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      // websql has a bug where \\u0000 causes early truncation in strings\n\t      // and blobs. to work around this, we used to use the hex() function,\n\t      // but that's not performant. after migration 6, we remove \\u0000\n\t      // and add it back in afterwards\n\t      var item = result.rows.item(0);\n\t      var data = item.escaped ? unescapeBlob(item.body) :\n\t        parseHexString(item.body, encoding);\n\t      if (opts.binary) {\n\t        res = binStringToBluffer(data, type);\n\t      } else {\n\t        res = btoa$1(data);\n\t      }\n\t      callback(null, res);\n\t    });\n\t  };\n\t\n\t  api._getRevisionTree = function (docId, callback) {\n\t    db.readTransaction(function (tx) {\n\t      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n\t      tx.executeSql(sql, [docId], function (tx, result) {\n\t        if (!result.rows.length) {\n\t          callback(createError(MISSING_DOC));\n\t        } else {\n\t          var data = safeJsonParse(result.rows.item(0).metadata);\n\t          callback(null, data.rev_tree);\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  api._doCompaction = function (docId, revs, callback) {\n\t    if (!revs.length) {\n\t      return callback();\n\t    }\n\t    db.transaction(function (tx) {\n\t\n\t      // update doc store\n\t      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n\t      tx.executeSql(sql, [docId], function (tx, result) {\n\t        var metadata = safeJsonParse(result.rows.item(0).metadata);\n\t        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                                           revHash, ctx, opts) {\n\t          var rev = pos + '-' + revHash;\n\t          if (revs.indexOf(rev) !== -1) {\n\t            opts.status = 'missing';\n\t          }\n\t        });\n\t\n\t        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n\t        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n\t      });\n\t\n\t      compactRevs$1(revs, docId, tx);\n\t    }, websqlError(callback), function () {\n\t      callback();\n\t    });\n\t  };\n\t\n\t  api._getLocal = function (id, callback) {\n\t    db.readTransaction(function (tx) {\n\t      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n\t      tx.executeSql(sql, [id], function (tx, res) {\n\t        if (res.rows.length) {\n\t          var item = res.rows.item(0);\n\t          var doc = unstringifyDoc(item.json, id, item.rev);\n\t          callback(null, doc);\n\t        } else {\n\t          callback(createError(MISSING_DOC));\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  api._putLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    delete doc._revisions; // ignore this, trust the rev\n\t    var oldRev = doc._rev;\n\t    var id = doc._id;\n\t    var newRev;\n\t    if (!oldRev) {\n\t      newRev = doc._rev = '0-1';\n\t    } else {\n\t      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n\t    }\n\t    var json = stringifyDoc(doc);\n\t\n\t    var ret;\n\t    function putLocal(tx) {\n\t      var sql;\n\t      var values;\n\t      if (oldRev) {\n\t        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n\t          'WHERE id=? AND rev=?';\n\t        values = [newRev, json, id, oldRev];\n\t      } else {\n\t        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n\t        values = [id, newRev, json];\n\t      }\n\t      tx.executeSql(sql, values, function (tx, res) {\n\t        if (res.rowsAffected) {\n\t          ret = {ok: true, id: id, rev: newRev};\n\t          if (opts.ctx) { // return immediately\n\t            callback(null, ret);\n\t          }\n\t        } else {\n\t          callback(createError(REV_CONFLICT));\n\t        }\n\t      }, function () {\n\t        callback(createError(REV_CONFLICT));\n\t        return false; // ack that we handled the error\n\t      });\n\t    }\n\t\n\t    if (opts.ctx) {\n\t      putLocal(opts.ctx);\n\t    } else {\n\t      db.transaction(putLocal, websqlError(callback), function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  api._removeLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var ret;\n\t\n\t    function removeLocal(tx) {\n\t      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n\t      var params = [doc._id, doc._rev];\n\t      tx.executeSql(sql, params, function (tx, res) {\n\t        if (!res.rowsAffected) {\n\t          return callback(createError(MISSING_DOC));\n\t        }\n\t        ret = {ok: true, id: doc._id, rev: '0-0'};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t\n\t    if (opts.ctx) {\n\t      removeLocal(opts.ctx);\n\t    } else {\n\t      db.transaction(removeLocal, websqlError(callback), function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  api._destroy = function (opts, callback) {\n\t    websqlChanges.removeAllListeners(api._name);\n\t    db.transaction(function (tx) {\n\t      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n\t        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n\t      stores.forEach(function (store) {\n\t        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n\t      });\n\t    }, websqlError(callback), function () {\n\t      if (hasLocalStorage()) {\n\t        delete window.localStorage['_pouch__websqldb_' + api._name];\n\t        delete window.localStorage[api._name];\n\t      }\n\t      callback(null, {'ok': true});\n\t    });\n\t  };\n\t}\n\t\n\tfunction canOpenTestDB() {\n\t  try {\n\t    openDatabase('_pouch_validate_websql', 1, '', 1);\n\t    return true;\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\t// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n\t// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n\t// https://github.com/pouchdb/pouchdb/issues/5079)\n\t// This has been fixed in latest WebKit, so we try to detect it here.\n\tfunction isValidWebSQL() {\n\t  // WKWebView UA:\n\t  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n\t  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n\t  // Chrome for iOS UA:\n\t  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n\t  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n\t  //   Mobile/9B206 Safari/7534.48.3\n\t  // Firefox for iOS UA:\n\t  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n\t  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\t\n\t  // indexedDB is null on some UIWebViews and undefined in others\n\t  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n\t  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n\t      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n\t    // definitely not WKWebView, avoid creating an unnecessary database\n\t    return true;\n\t  }\n\t  // Cache the result in LocalStorage. Reason we do this is because if we\n\t  // call openDatabase() too many times, Safari craps out in SauceLabs and\n\t  // starts throwing DOM Exception 14s.\n\t  var hasLS = hasLocalStorage();\n\t  // Include user agent in the hash, so that if Safari is upgraded, we don't\n\t  // continually think it's broken.\n\t  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n\t  if (hasLS && localStorage[localStorageKey]) {\n\t    return localStorage[localStorageKey] === '1';\n\t  }\n\t  var openedTestDB = canOpenTestDB();\n\t  if (hasLS) {\n\t    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n\t  }\n\t  return openedTestDB;\n\t}\n\t\n\tfunction valid() {\n\t  if (typeof openDatabase !== 'function') {\n\t    return false;\n\t  }\n\t  return isValidWebSQL();\n\t}\n\t\n\tfunction openDB(name, version, description, size) {\n\t  // Traditional WebSQL API\n\t  return openDatabase(name, version, description, size);\n\t}\n\t\n\tfunction WebSQLPouch(opts, callback) {\n\t  var _opts = extend$1({\n\t    websql: openDB\n\t  }, opts);\n\t\n\t  WebSqlPouch$1.call(this, _opts, callback);\n\t}\n\t\n\tWebSQLPouch.valid = valid;\n\t\n\tWebSQLPouch.use_prefix = true;\n\t\n\tfunction WebSqlPouch (PouchDB) {\n\t  PouchDB.adapter('websql', WebSQLPouch, true);\n\t}\n\t\n\t/* global fetch */\n\t/* global Headers */\n\tfunction wrappedFetch() {\n\t  var wrappedPromise = {};\n\t\n\t  var promise = new PouchPromise(function (resolve, reject) {\n\t    wrappedPromise.resolve = resolve;\n\t    wrappedPromise.reject = reject;\n\t  });\n\t\n\t  var args = new Array(arguments.length);\n\t\n\t  for (var i = 0; i < args.length; i++) {\n\t    args[i] = arguments[i];\n\t  }\n\t\n\t  wrappedPromise.promise = promise;\n\t\n\t  PouchPromise.resolve().then(function () {\n\t    return fetch.apply(null, args);\n\t  }).then(function (response) {\n\t    wrappedPromise.resolve(response);\n\t  }).catch(function (error) {\n\t    wrappedPromise.reject(error);\n\t  });\n\t\n\t  return wrappedPromise;\n\t}\n\t\n\tfunction fetchRequest(options, callback) {\n\t  var wrappedPromise, timer, response;\n\t\n\t  var headers = new Headers();\n\t\n\t  var fetchOptions = {\n\t    method: options.method,\n\t    credentials: 'include',\n\t    headers: headers\n\t  };\n\t\n\t  if (options.json) {\n\t    headers.set('Accept', 'application/json');\n\t    headers.set('Content-Type', options.headers['Content-Type'] ||\n\t      'application/json');\n\t  }\n\t\n\t  if (options.body &&\n\t      options.processData &&\n\t      typeof options.body !== 'string') {\n\t    fetchOptions.body = JSON.stringify(options.body);\n\t  } else if ('body' in options) {\n\t    fetchOptions.body = options.body;\n\t  } else {\n\t    fetchOptions.body = null;\n\t  }\n\t\n\t  Object.keys(options.headers).forEach(function (key) {\n\t    if (options.headers.hasOwnProperty(key)) {\n\t      headers.set(key, options.headers[key]);\n\t    }\n\t  });\n\t\n\t  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\t\n\t  if (options.timeout > 0) {\n\t    timer = setTimeout(function () {\n\t      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n\t        options.url));\n\t    }, options.timeout);\n\t  }\n\t\n\t  wrappedPromise.promise.then(function (fetchResponse) {\n\t    response = {\n\t      statusCode: fetchResponse.status\n\t    };\n\t\n\t    if (options.timeout > 0) {\n\t      clearTimeout(timer);\n\t    }\n\t\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n\t    }\n\t\n\t    return fetchResponse.json();\n\t  }).then(function (result) {\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      callback(null, response, result);\n\t    } else {\n\t      result.status = response.statusCode;\n\t      callback(result);\n\t    }\n\t  }).catch(function (error) {\n\t    if (!error) {\n\t      // this happens when the listener is canceled\n\t      error = new Error('canceled');\n\t    }\n\t    callback(error);\n\t  });\n\t\n\t  return {abort: wrappedPromise.reject};\n\t}\n\t\n\tfunction xhRequest(options, callback) {\n\t\n\t  var xhr, timer;\n\t  var timedout = false;\n\t\n\t  var abortReq = function () {\n\t    xhr.abort();\n\t    cleanUp();\n\t  };\n\t\n\t  var timeoutReq = function () {\n\t    timedout = true;\n\t    xhr.abort();\n\t    cleanUp();\n\t  };\n\t\n\t  var ret = {abort: abortReq};\n\t\n\t  var cleanUp = function () {\n\t    clearTimeout(timer);\n\t    ret.abort = function () {};\n\t    if (xhr) {\n\t      xhr.onprogress = undefined;\n\t      if (xhr.upload) {\n\t        xhr.upload.onprogress = undefined;\n\t      }\n\t      xhr.onreadystatechange = undefined;\n\t      xhr = undefined;\n\t    }\n\t  };\n\t\n\t  if (options.xhr) {\n\t    xhr = new options.xhr();\n\t  } else {\n\t    xhr = new XMLHttpRequest();\n\t  }\n\t\n\t  try {\n\t    xhr.open(options.method, options.url);\n\t  } catch (exception) {\n\t    return callback(new Error(exception.name || 'Url is invalid'));\n\t  }\n\t\n\t  xhr.withCredentials = ('withCredentials' in options) ?\n\t    options.withCredentials : true;\n\t\n\t  if (options.method === 'GET') {\n\t    delete options.headers['Content-Type'];\n\t  } else if (options.json) {\n\t    options.headers.Accept = 'application/json';\n\t    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n\t      'application/json';\n\t    if (options.body &&\n\t        options.processData &&\n\t        typeof options.body !== \"string\") {\n\t      options.body = JSON.stringify(options.body);\n\t    }\n\t  }\n\t\n\t  if (options.binary) {\n\t    xhr.responseType = 'arraybuffer';\n\t  }\n\t\n\t  if (!('body' in options)) {\n\t    options.body = null;\n\t  }\n\t\n\t  for (var key in options.headers) {\n\t    if (options.headers.hasOwnProperty(key)) {\n\t      xhr.setRequestHeader(key, options.headers[key]);\n\t    }\n\t  }\n\t\n\t  if (options.timeout > 0) {\n\t    timer = setTimeout(timeoutReq, options.timeout);\n\t    xhr.onprogress = function () {\n\t      clearTimeout(timer);\n\t      if(xhr.readyState !== 4) {\n\t        timer = setTimeout(timeoutReq, options.timeout);\n\t      }\n\t    };\n\t    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n\t      xhr.upload.onprogress = xhr.onprogress;\n\t    }\n\t  }\n\t\n\t  xhr.onreadystatechange = function () {\n\t    if (xhr.readyState !== 4) {\n\t      return;\n\t    }\n\t\n\t    var response = {\n\t      statusCode: xhr.status\n\t    };\n\t\n\t    if (xhr.status >= 200 && xhr.status < 300) {\n\t      var data;\n\t      if (options.binary) {\n\t        data = createBlob([xhr.response || ''], {\n\t          type: xhr.getResponseHeader('Content-Type')\n\t        });\n\t      } else {\n\t        data = xhr.responseText;\n\t      }\n\t      callback(null, response, data);\n\t    } else {\n\t      var err = {};\n\t      if (timedout) {\n\t        err = new Error('ETIMEDOUT');\n\t        err.code = 'ETIMEDOUT';\n\t      } else if (typeof xhr.response === 'string') {\n\t        try {\n\t          err = JSON.parse(xhr.response);\n\t        } catch(e) {}\n\t      }\n\t      err.status = xhr.status;\n\t      callback(err);\n\t    }\n\t    cleanUp();\n\t  };\n\t\n\t  if (options.body && (options.body instanceof Blob)) {\n\t    readAsArrayBuffer(options.body, function (arrayBuffer) {\n\t      xhr.send(arrayBuffer);\n\t    });\n\t  } else {\n\t    xhr.send(options.body);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction testXhr() {\n\t  try {\n\t    new XMLHttpRequest();\n\t    return true;\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\tvar hasXhr = testXhr();\n\t\n\tfunction ajax$1(options, callback) {\n\t  if (!false && (hasXhr || options.xhr)) {\n\t    return xhRequest(options, callback);\n\t  } else {\n\t    return fetchRequest(options, callback);\n\t  }\n\t}\n\t\n\t// the blob already has a type; do nothing\n\tvar res$2 = function () {};\n\t\n\tfunction defaultBody() {\n\t  return '';\n\t}\n\t\n\tfunction ajaxCore(options, callback) {\n\t\n\t  options = clone(options);\n\t\n\t  var defaultOptions = {\n\t    method : \"GET\",\n\t    headers: {},\n\t    json: true,\n\t    processData: true,\n\t    timeout: 10000,\n\t    cache: false\n\t  };\n\t\n\t  options = extend$1(defaultOptions, options);\n\t\n\t  function onSuccess(obj, resp, cb) {\n\t    if (!options.binary && options.json && typeof obj === 'string') {\n\t      /* istanbul ignore next */\n\t      try {\n\t        obj = JSON.parse(obj);\n\t      } catch (e) {\n\t        // Probably a malformed JSON from server\n\t        return cb(e);\n\t      }\n\t    }\n\t    if (Array.isArray(obj)) {\n\t      obj = obj.map(function (v) {\n\t        if (v.error || v.missing) {\n\t          return generateErrorFromResponse(v);\n\t        } else {\n\t          return v;\n\t        }\n\t      });\n\t    }\n\t    if (options.binary) {\n\t      res$2(obj, resp);\n\t    }\n\t    cb(null, obj, resp);\n\t  }\n\t\n\t  if (options.json) {\n\t    if (!options.binary) {\n\t      options.headers.Accept = 'application/json';\n\t    }\n\t    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n\t      'application/json';\n\t  }\n\t\n\t  if (options.binary) {\n\t    options.encoding = null;\n\t    options.json = false;\n\t  }\n\t\n\t  if (!options.processData) {\n\t    options.json = false;\n\t  }\n\t\n\t  return ajax$1(options, function (err, response, body) {\n\t\n\t    if (err) {\n\t      return callback(generateErrorFromResponse(err));\n\t    }\n\t\n\t    var error;\n\t    var content_type = response.headers && response.headers['content-type'];\n\t    var data = body || defaultBody();\n\t\n\t    // CouchDB doesn't always return the right content-type for JSON data, so\n\t    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n\t    if (!options.binary && (options.json || !options.processData) &&\n\t        typeof data !== 'object' &&\n\t        (/json/.test(content_type) ||\n\t         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n\t      try {\n\t        data = JSON.parse(data.toString());\n\t      } catch (e) {}\n\t    }\n\t\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      onSuccess(data, response, callback);\n\t    } else {\n\t      error = generateErrorFromResponse(data);\n\t      error.status = response.statusCode;\n\t      callback(error);\n\t    }\n\t  });\n\t}\n\t\n\tfunction ajax(opts, callback) {\n\t\n\t  // cache-buster, specifically designed to work around IE's aggressive caching\n\t  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n\t  // Also Safari caches POSTs, so we need to cache-bust those too.\n\t  var ua = (navigator && navigator.userAgent) ?\n\t    navigator.userAgent.toLowerCase() : '';\n\t\n\t  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n\t  var isIE = ua.indexOf('msie') !== -1;\n\t  var isEdge = ua.indexOf('edge') !== -1;\n\t\n\t  // it appears the new version of safari also caches GETs,\n\t  // see https://github.com/pouchdb/pouchdb/issues/5010\n\t  var shouldCacheBust = (isSafari ||\n\t    ((isIE || isEdge) && opts.method === 'GET'));\n\t\n\t  var cache = 'cache' in opts ? opts.cache : true;\n\t\n\t  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\t\n\t  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n\t    var hasArgs = opts.url.indexOf('?') !== -1;\n\t    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n\t  }\n\t\n\t  return ajaxCore(opts, callback);\n\t}\n\t\n\t// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n\t// but much smaller in code size. limits the number of concurrent promises that are executed\n\t\n\tfunction pool(promiseFactories, limit) {\n\t  return new PouchPromise(function (resolve, reject) {\n\t    var running = 0;\n\t    var current = 0;\n\t    var done = 0;\n\t    var len = promiseFactories.length;\n\t    var err;\n\t\n\t    function runNext() {\n\t      running++;\n\t      promiseFactories[current++]().then(onSuccess, onError);\n\t    }\n\t\n\t    function doNext() {\n\t      if (++done === len) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          reject(err);\n\t        } else {\n\t          resolve();\n\t        }\n\t      } else {\n\t        runNextBatch();\n\t      }\n\t    }\n\t\n\t    function onSuccess() {\n\t      running--;\n\t      doNext();\n\t    }\n\t\n\t    /* istanbul ignore next */\n\t    function onError(thisErr) {\n\t      running--;\n\t      err = err || thisErr;\n\t      doNext();\n\t    }\n\t\n\t    function runNextBatch() {\n\t      while (running < limit && current < len) {\n\t        runNext();\n\t      }\n\t    }\n\t\n\t    runNextBatch();\n\t  });\n\t}\n\t\n\tvar CHANGES_BATCH_SIZE = 25;\n\tvar MAX_SIMULTANEOUS_REVS = 50;\n\t\n\tvar supportsBulkGetMap = {};\n\t\n\tvar log$1 = debug('pouchdb:http');\n\t\n\tfunction readAttachmentsAsBlobOrBuffer(row) {\n\t  var atts = row.doc && row.doc._attachments;\n\t  if (!atts) {\n\t    return;\n\t  }\n\t  Object.keys(atts).forEach(function (filename) {\n\t    var att = atts[filename];\n\t    att.data = b64ToBluffer(att.data, att.content_type);\n\t  });\n\t}\n\t\n\tfunction encodeDocId(id) {\n\t  if (/^_design/.test(id)) {\n\t    return '_design/' + encodeURIComponent(id.slice(8));\n\t  }\n\t  if (/^_local/.test(id)) {\n\t    return '_local/' + encodeURIComponent(id.slice(7));\n\t  }\n\t  return encodeURIComponent(id);\n\t}\n\t\n\tfunction preprocessAttachments$1(doc) {\n\t  if (!doc._attachments || !Object.keys(doc._attachments)) {\n\t    return PouchPromise.resolve();\n\t  }\n\t\n\t  return PouchPromise.all(Object.keys(doc._attachments).map(function (key) {\n\t    var attachment = doc._attachments[key];\n\t    if (attachment.data && typeof attachment.data !== 'string') {\n\t      return new PouchPromise(function (resolve) {\n\t        blobToBase64(attachment.data, resolve);\n\t      }).then(function (b64) {\n\t        attachment.data = b64;\n\t      });\n\t    }\n\t  }));\n\t}\n\t\n\tfunction hasUrlPrefix(opts) {\n\t  if (!opts.prefix) {\n\t    return false;\n\t  }\n\t\n\t  var protocol = parseUri(opts.prefix).protocol;\n\t\n\t  return protocol === 'http' || protocol === 'https';\n\t}\n\t\n\t// Get all the information you possibly can about the URI given by name and\n\t// return it as a suitable object.\n\tfunction getHost(name, opts) {\n\t\n\t  // encode db name if opts.prefix is a url (#5574)\n\t  if (hasUrlPrefix(opts)) {\n\t    var dbName = opts.name.substr(opts.prefix.length);\n\t    name = opts.prefix + encodeURIComponent(dbName);\n\t  }\n\t\n\t  // Prase the URI into all its little bits\n\t  var uri = parseUri(name);\n\t\n\t  // Store the user and password as a separate auth object\n\t  if (uri.user || uri.password) {\n\t    uri.auth = {username: uri.user, password: uri.password};\n\t  }\n\t\n\t  // Split the path part of the URI into parts using '/' as the delimiter\n\t  // after removing any leading '/' and any trailing '/'\n\t  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\t\n\t  // Store the first part as the database name and remove it from the parts\n\t  // array\n\t  uri.db = parts.pop();\n\t  // Prevent double encoding of URI component\n\t  if (uri.db.indexOf('%') === -1) {\n\t    uri.db = encodeURIComponent(uri.db);\n\t  }\n\t\n\t  // Restore the path by joining all the remaining parts (all the parts\n\t  // except for the database name) with '/'s\n\t  uri.path = parts.join('/');\n\t\n\t  return uri;\n\t}\n\t\n\t// Generate a URL with the host data given by opts and the given path\n\tfunction genDBUrl(opts, path) {\n\t  return genUrl(opts, opts.db + '/' + path);\n\t}\n\t\n\t// Generate a URL with the host data given by opts and the given path\n\tfunction genUrl(opts, path) {\n\t  // If the host already has a path, then we need to have a path delimiter\n\t  // Otherwise, the path delimiter is the empty string\n\t  var pathDel = !opts.path ? '' : '/';\n\t\n\t  // If the host already has a path, then we need to have a path delimiter\n\t  // Otherwise, the path delimiter is the empty string\n\t  return opts.protocol + '://' + opts.host +\n\t         (opts.port ? (':' + opts.port) : '') +\n\t         '/' + opts.path + pathDel + path;\n\t}\n\t\n\tfunction paramsToStr(params) {\n\t  return '?' + Object.keys(params).map(function (k) {\n\t    return k + '=' + encodeURIComponent(params[k]);\n\t  }).join('&');\n\t}\n\t\n\t// Implements the PouchDB API for dealing with CouchDB instances over HTTP\n\tfunction HttpPouch(opts, callback) {\n\t\n\t  // The functions that will be publicly available for HttpPouch\n\t  var api = this;\n\t\n\t  var host = getHost(opts.name, opts);\n\t  var dbUrl = genDBUrl(host, '');\n\t\n\t  opts = clone(opts);\n\t  var ajaxOpts = opts.ajax || {};\n\t\n\t  if (opts.auth || host.auth) {\n\t    var nAuth = opts.auth || host.auth;\n\t    var str = nAuth.username + ':' + nAuth.password;\n\t    var token = btoa$1(unescape(encodeURIComponent(str)));\n\t    ajaxOpts.headers = ajaxOpts.headers || {};\n\t    ajaxOpts.headers.Authorization = 'Basic ' + token;\n\t  }\n\t\n\t  // Not strictly necessary, but we do this because numerous tests\n\t  // rely on swapping ajax in and out.\n\t  api._ajax = ajax;\n\t\n\t  function ajax$$(userOpts, options, callback) {\n\t    var reqAjax = userOpts.ajax || {};\n\t    var reqOpts = extend$1(clone(ajaxOpts), reqAjax, options);\n\t    log$1(reqOpts.method + ' ' + reqOpts.url);\n\t    return api._ajax(reqOpts, callback);\n\t  }\n\t\n\t  function ajaxPromise(userOpts, opts) {\n\t    return new PouchPromise(function (resolve, reject) {\n\t      ajax$$(userOpts, opts, function (err, res) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          return reject(err);\n\t        }\n\t        resolve(res);\n\t      });\n\t    });\n\t  }\n\t\n\t  function adapterFun$$(name, fun) {\n\t    return adapterFun(name, getArguments(function (args) {\n\t      setup().then(function () {\n\t        return fun.apply(this, args);\n\t      }).catch(function (e) {\n\t        var callback = args.pop();\n\t        callback(e);\n\t      });\n\t    }));\n\t  }\n\t\n\t  var setupPromise;\n\t\n\t  function setup() {\n\t    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n\t    if (opts.skipSetup || opts.skip_setup) {\n\t      return PouchPromise.resolve();\n\t    }\n\t\n\t    // If there is a setup in process or previous successful setup\n\t    // done then we will use that\n\t    // If previous setups have been rejected we will try again\n\t    if (setupPromise) {\n\t      return setupPromise;\n\t    }\n\t\n\t    var checkExists = {method: 'GET', url: dbUrl};\n\t    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n\t      if (err && err.status && err.status === 404) {\n\t        // Doesnt exist, create it\n\t        explainError(404, 'PouchDB is just detecting if the remote exists.');\n\t        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n\t      } else {\n\t        return PouchPromise.reject(err);\n\t      }\n\t    }).catch(function (err) {\n\t      // If we try to create a database that already exists, skipped in\n\t      // istanbul since its catching a race condition.\n\t      /* istanbul ignore if */\n\t      if (err && err.status && err.status === 412) {\n\t        return true;\n\t      }\n\t      return PouchPromise.reject(err);\n\t    });\n\t\n\t    setupPromise.catch(function () {\n\t      setupPromise = null;\n\t    });\n\t\n\t    return setupPromise;\n\t  }\n\t\n\t  immediate(function () {\n\t    callback(null, api);\n\t  });\n\t\n\t  api.type = function () {\n\t    return 'http';\n\t  };\n\t\n\t  api.id = adapterFun$$('id', function (callback) {\n\t    ajax$$({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n\t      var uuid = (result && result.uuid) ?\n\t        (result.uuid + host.db) : genDBUrl(host, '');\n\t      callback(null, uuid);\n\t    });\n\t  });\n\t\n\t  api.request = adapterFun$$('request', function (options, callback) {\n\t    options.url = genDBUrl(host, options.url);\n\t    ajax$$({}, options, callback);\n\t  });\n\t\n\t  // Sends a POST request to the host calling the couchdb _compact function\n\t  //    version: The version of CouchDB it is running\n\t  api.compact = adapterFun$$('compact', function (opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t    ajax$$(opts, {\n\t      url: genDBUrl(host, '_compact'),\n\t      method: 'POST'\n\t    }, function () {\n\t      function ping() {\n\t        api.info(function (err, res) {\n\t          if (res && !res.compact_running) {\n\t            callback(null, {ok: true});\n\t          } else {\n\t            setTimeout(ping, opts.interval || 200);\n\t          }\n\t        });\n\t      }\n\t      // Ping the http if it's finished compaction\n\t      ping();\n\t    });\n\t  });\n\t\n\t  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n\t    var self = this;\n\t\n\t    function doBulkGet(cb) {\n\t      var params = {};\n\t      if (opts.revs) {\n\t        params.revs = true;\n\t      }\n\t      if (opts.attachments) {\n\t        /* istanbul ignore next */\n\t        params.attachments = true;\n\t      }\n\t      if (opts.latest) {\n\t        params.latest = true;\n\t      }\n\t      ajax$$(opts, {\n\t        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n\t        method: 'POST',\n\t        body: { docs: opts.docs}\n\t      }, cb);\n\t    }\n\t\n\t    function doBulkGetShim() {\n\t      // avoid \"url too long error\" by splitting up into multiple requests\n\t      var batchSize = MAX_SIMULTANEOUS_REVS;\n\t      var numBatches = Math.ceil(opts.docs.length / batchSize);\n\t      var numDone = 0;\n\t      var results = new Array(numBatches);\n\t\n\t      function onResult(batchNum) {\n\t        return function (err, res) {\n\t          // err is impossible because shim returns a list of errs in that case\n\t          results[batchNum] = res.results;\n\t          if (++numDone === numBatches) {\n\t            callback(null, {results: flatten(results)});\n\t          }\n\t        };\n\t      }\n\t\n\t      for (var i = 0; i < numBatches; i++) {\n\t        var subOpts = pick(opts, ['revs', 'attachments', 'latest']);\n\t        subOpts.ajax = ajaxOpts;\n\t        subOpts.docs = opts.docs.slice(i * batchSize,\n\t          Math.min(opts.docs.length, (i + 1) * batchSize));\n\t        bulkGet(self, subOpts, onResult(i));\n\t      }\n\t    }\n\t\n\t    // mark the whole database as either supporting or not supporting _bulk_get\n\t    var dbUrl = genUrl(host, '');\n\t    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\t\n\t    if (typeof supportsBulkGet !== 'boolean') {\n\t      // check if this database supports _bulk_get\n\t      doBulkGet(function (err, res) {\n\t        /* istanbul ignore else */\n\t        if (err) {\n\t          var status = Math.floor(err.status / 100);\n\t          /* istanbul ignore else */\n\t          if (status === 4 || status === 5) { // 40x or 50x\n\t            supportsBulkGetMap[dbUrl] = false;\n\t            explainError(\n\t              err.status,\n\t              'PouchDB is just detecting if the remote ' +\n\t              'supports the _bulk_get API.'\n\t            );\n\t            doBulkGetShim();\n\t          } else {\n\t            callback(err);\n\t          }\n\t        } else {\n\t          supportsBulkGetMap[dbUrl] = true;\n\t          callback(null, res);\n\t        }\n\t      });\n\t    } else if (supportsBulkGet) {\n\t      /* istanbul ignore next */\n\t      doBulkGet(callback);\n\t    } else {\n\t      doBulkGetShim();\n\t    }\n\t  });\n\t\n\t  // Calls GET on the host, which gets back a JSON string containing\n\t  //    couchdb: A welcome string\n\t  //    version: The version of CouchDB it is running\n\t  api._info = function (callback) {\n\t    setup().then(function () {\n\t      ajax$$({}, {\n\t        method: 'GET',\n\t        url: genDBUrl(host, '')\n\t      }, function (err, res) {\n\t        /* istanbul ignore next */\n\t        if (err) {\n\t        return callback(err);\n\t        }\n\t        res.host = genDBUrl(host, '');\n\t        callback(null, res);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t  // Get the document with the given id from the database given by host.\n\t  // The id could be solely the _id in the database, or it may be a\n\t  // _design/ID or _local/ID path\n\t  api.get = adapterFun$$('get', function (id, opts, callback) {\n\t    // If no options were given, set the callback to the second parameter\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t\n\t    // List of parameters to add to the GET request\n\t    var params = {};\n\t\n\t    if (opts.revs) {\n\t      params.revs = true;\n\t    }\n\t\n\t    if (opts.revs_info) {\n\t      params.revs_info = true;\n\t    }\n\t\n\t    if (opts.latest) {\n\t      params.latest = true;\n\t    }\n\t\n\t    if (opts.open_revs) {\n\t      if (opts.open_revs !== \"all\") {\n\t        opts.open_revs = JSON.stringify(opts.open_revs);\n\t      }\n\t      params.open_revs = opts.open_revs;\n\t    }\n\t\n\t    if (opts.rev) {\n\t      params.rev = opts.rev;\n\t    }\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = opts.conflicts;\n\t    }\n\t\n\t    id = encodeDocId(id);\n\t\n\t    // Set the options for the ajax call\n\t    var options = {\n\t      method: 'GET',\n\t      url: genDBUrl(host, id + paramsToStr(params))\n\t    };\n\t\n\t    function fetchAttachments(doc) {\n\t      var atts = doc._attachments;\n\t      var filenames = atts && Object.keys(atts);\n\t      if (!atts || !filenames.length) {\n\t        return;\n\t      }\n\t      // we fetch these manually in separate XHRs, because\n\t      // Sync Gateway would normally send it back as multipart/mixed,\n\t      // which we cannot parse. Also, this is more efficient than\n\t      // receiving attachments as base64-encoded strings.\n\t      function fetch(filename) {\n\t        var att = atts[filename];\n\t        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n\t          '?rev=' + doc._rev;\n\t        return ajaxPromise(opts, {\n\t          method: 'GET',\n\t          url: genDBUrl(host, path),\n\t          binary: true\n\t        }).then(function (blob) {\n\t          if (opts.binary) {\n\t            return blob;\n\t          }\n\t          return new PouchPromise(function (resolve) {\n\t            blobToBase64(blob, resolve);\n\t          });\n\t        }).then(function (data) {\n\t          delete att.stub;\n\t          delete att.length;\n\t          att.data = data;\n\t        });\n\t      }\n\t\n\t      var promiseFactories = filenames.map(function (filename) {\n\t        return function () {\n\t          return fetch(filename);\n\t        };\n\t      });\n\t\n\t      // This limits the number of parallel xhr requests to 5 any time\n\t      // to avoid issues with maximum browser request limits\n\t      return pool(promiseFactories, 5);\n\t    }\n\t\n\t    function fetchAllAttachments(docOrDocs) {\n\t      if (Array.isArray(docOrDocs)) {\n\t        return PouchPromise.all(docOrDocs.map(function (doc) {\n\t          if (doc.ok) {\n\t            return fetchAttachments(doc.ok);\n\t          }\n\t        }));\n\t      }\n\t      return fetchAttachments(docOrDocs);\n\t    }\n\t\n\t    ajaxPromise(opts, options).then(function (res) {\n\t      return PouchPromise.resolve().then(function () {\n\t        if (opts.attachments) {\n\t          return fetchAllAttachments(res);\n\t        }\n\t      }).then(function () {\n\t        callback(null, res);\n\t      });\n\t    }).catch(callback);\n\t  });\n\t\n\t  // Delete the document given by doc from the database given by host.\n\t  api.remove = adapterFun$$('remove',\n\t      function (docOrId, optsOrRev, opts, callback) {\n\t    var doc;\n\t    if (typeof optsOrRev === 'string') {\n\t      // id, rev, opts, callback style\n\t      doc = {\n\t        _id: docOrId,\n\t        _rev: optsOrRev\n\t      };\n\t      if (typeof opts === 'function') {\n\t        callback = opts;\n\t        opts = {};\n\t      }\n\t    } else {\n\t      // doc, opts, callback style\n\t      doc = docOrId;\n\t      if (typeof optsOrRev === 'function') {\n\t        callback = optsOrRev;\n\t        opts = {};\n\t      } else {\n\t        callback = opts;\n\t        opts = optsOrRev;\n\t      }\n\t    }\n\t\n\t    var rev = (doc._rev || opts.rev);\n\t\n\t    // Delete the document\n\t    ajax$$(opts, {\n\t      method: 'DELETE',\n\t      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev\n\t    }, callback);\n\t  });\n\t\n\t  function encodeAttachmentId(attachmentId) {\n\t    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n\t  }\n\t\n\t  // Get the attachment\n\t  api.getAttachment =\n\t    adapterFun$$('getAttachment', function (docId, attachmentId, opts,\n\t                                                callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n\t    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n\t      encodeAttachmentId(attachmentId) + params;\n\t    ajax$$(opts, {\n\t      method: 'GET',\n\t      url: url,\n\t      binary: true\n\t    }, callback);\n\t  });\n\t\n\t  // Remove the attachment given by the id and rev\n\t  api.removeAttachment =\n\t    adapterFun$$('removeAttachment', function (docId, attachmentId, rev,\n\t                                                   callback) {\n\t\n\t    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n\t      encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n\t\n\t    ajax$$({}, {\n\t      method: 'DELETE',\n\t      url: url\n\t    }, callback);\n\t  });\n\t\n\t  // Add the attachment given by blob and its contentType property\n\t  // to the document with the given id, the revision given by rev, and\n\t  // add it to the database given by host.\n\t  api.putAttachment =\n\t    adapterFun$$('putAttachment', function (docId, attachmentId, rev, blob,\n\t                                                type, callback) {\n\t    if (typeof type === 'function') {\n\t      callback = type;\n\t      type = blob;\n\t      blob = rev;\n\t      rev = null;\n\t    }\n\t    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n\t    var url = genDBUrl(host, id);\n\t    if (rev) {\n\t      url += '?rev=' + rev;\n\t    }\n\t\n\t    if (typeof blob === 'string') {\n\t      // input is assumed to be a base64 string\n\t      var binary;\n\t      try {\n\t        binary = atob$1(blob);\n\t      } catch (err) {\n\t        return callback(createError(BAD_ARG,\n\t                        'Attachment is not a valid base64 string'));\n\t      }\n\t      blob = binary ? binStringToBluffer(binary, type) : '';\n\t    }\n\t\n\t    var opts = {\n\t      headers: {'Content-Type': type},\n\t      method: 'PUT',\n\t      url: url,\n\t      processData: false,\n\t      body: blob,\n\t      timeout: ajaxOpts.timeout || 60000\n\t    };\n\t    // Add the attachment\n\t    ajax$$({}, opts, callback);\n\t  });\n\t\n\t  // Update/create multiple documents given by req in the database\n\t  // given by host.\n\t  api._bulkDocs = function (req, opts, callback) {\n\t    // If new_edits=false then it prevents the database from creating\n\t    // new revision numbers for the documents. Instead it just uses\n\t    // the old ones. This is used in database replication.\n\t    req.new_edits = opts.new_edits;\n\t\n\t    setup().then(function () {\n\t      return PouchPromise.all(req.docs.map(preprocessAttachments$1));\n\t    }).then(function () {\n\t      // Update/create the documents\n\t      ajax$$(opts, {\n\t        method: 'POST',\n\t        url: genDBUrl(host, '_bulk_docs'),\n\t        timeout: opts.timeout,\n\t        body: req\n\t      }, function (err, results) {\n\t        if (err) {\n\t          return callback(err);\n\t        }\n\t        results.forEach(function (result) {\n\t          result.ok = true; // smooths out cloudant not adding this\n\t        });\n\t        callback(null, results);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t\n\t  // Update/create document\n\t  api._put = function (doc, opts, callback) {\n\t    setup().then(function () {\n\t      return preprocessAttachments$1(doc);\n\t    }).then(function () {\n\t      // Update/create the document\n\t      ajax$$(opts, {\n\t        method: 'PUT',\n\t        url: genDBUrl(host, encodeDocId(doc._id)),\n\t        body: doc\n\t      }, function (err, result) {\n\t        if (err) {\n\t          return callback(err);\n\t        }\n\t        callback(null, result);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t\n\t  // Get a listing of the documents in the database given\n\t  // by host and ordered by increasing id.\n\t  api.allDocs = adapterFun$$('allDocs', function (opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t\n\t    // List of parameters to add to the GET request\n\t    var params = {};\n\t    var body;\n\t    var method = 'GET';\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = true;\n\t    }\n\t\n\t    if (opts.descending) {\n\t      params.descending = true;\n\t    }\n\t\n\t    if (opts.include_docs) {\n\t      params.include_docs = true;\n\t    }\n\t\n\t    // added in CouchDB 1.6.0\n\t    if (opts.attachments) {\n\t      params.attachments = true;\n\t    }\n\t\n\t    if (opts.key) {\n\t      params.key = JSON.stringify(opts.key);\n\t    }\n\t\n\t    if (opts.start_key) {\n\t      opts.startkey = opts.start_key;\n\t    }\n\t\n\t    if (opts.startkey) {\n\t      params.startkey = JSON.stringify(opts.startkey);\n\t    }\n\t\n\t    if (opts.end_key) {\n\t      opts.endkey = opts.end_key;\n\t    }\n\t\n\t    if (opts.endkey) {\n\t      params.endkey = JSON.stringify(opts.endkey);\n\t    }\n\t\n\t    if (typeof opts.inclusive_end !== 'undefined') {\n\t      params.inclusive_end = !!opts.inclusive_end;\n\t    }\n\t\n\t    if (typeof opts.limit !== 'undefined') {\n\t      params.limit = opts.limit;\n\t    }\n\t\n\t    if (typeof opts.skip !== 'undefined') {\n\t      params.skip = opts.skip;\n\t    }\n\t\n\t    var paramStr = paramsToStr(params);\n\t\n\t    if (typeof opts.keys !== 'undefined') {\n\t      method = 'POST';\n\t      body = {keys: opts.keys};\n\t    }\n\t\n\t    // Get the document listing\n\t    ajaxPromise(opts, {\n\t      method: method,\n\t      url: genDBUrl(host, '_all_docs' + paramStr),\n\t      body: body\n\t    }).then(function (res) {\n\t      if (opts.include_docs && opts.attachments && opts.binary) {\n\t        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n\t      }\n\t      callback(null, res);\n\t    }).catch(callback);\n\t  });\n\t\n\t  // Get a list of changes made to documents in the database given by host.\n\t  // TODO According to the README, there should be two other methods here,\n\t  // api.changes.addListener and api.changes.removeListener.\n\t  api._changes = function (opts) {\n\t\n\t    // We internally page the results of a changes request, this means\n\t    // if there is a large set of changes to be returned we can start\n\t    // processing them quicker instead of waiting on the entire\n\t    // set of changes to return and attempting to process them at once\n\t    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\t\n\t    opts = clone(opts);\n\t    opts.timeout = ('timeout' in opts) ? opts.timeout :\n\t      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n\t      30 * 1000;\n\t\n\t    // We give a 5 second buffer for CouchDB changes to respond with\n\t    // an ok timeout (if a timeout it set)\n\t    var params = opts.timeout ? {timeout: opts.timeout - (5 * 1000)} : {};\n\t    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t    //\n\t    var leftToFetch = limit;\n\t\n\t    if (opts.style) {\n\t      params.style = opts.style;\n\t    }\n\t\n\t    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n\t      params.include_docs = true;\n\t    }\n\t\n\t    if (opts.attachments) {\n\t      params.attachments = true;\n\t    }\n\t\n\t    if (opts.continuous) {\n\t      params.feed = 'longpoll';\n\t    }\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = true;\n\t    }\n\t\n\t    if (opts.descending) {\n\t      params.descending = true;\n\t    }\n\t\n\t    if ('heartbeat' in opts) {\n\t      // If the heartbeat value is false, it disables the default heartbeat\n\t      if (opts.heartbeat) {\n\t        params.heartbeat = opts.heartbeat;\n\t      }\n\t    } else {\n\t      // Default heartbeat to 10 seconds\n\t      params.heartbeat = 10000;\n\t    }\n\t\n\t    if (opts.filter && typeof opts.filter === 'string') {\n\t      params.filter = opts.filter;\n\t    }\n\t\n\t    if (opts.view && typeof opts.view === 'string') {\n\t      params.filter = '_view';\n\t      params.view = opts.view;\n\t    }\n\t\n\t    // If opts.query_params exists, pass it through to the changes request.\n\t    // These parameters may be used by the filter on the source database.\n\t    if (opts.query_params && typeof opts.query_params === 'object') {\n\t      for (var param_name in opts.query_params) {\n\t        /* istanbul ignore else */\n\t        if (opts.query_params.hasOwnProperty(param_name)) {\n\t          params[param_name] = opts.query_params[param_name];\n\t        }\n\t      }\n\t    }\n\t\n\t    var method = 'GET';\n\t    var body;\n\t\n\t    if (opts.doc_ids) {\n\t      // set this automagically for the user; it's annoying that couchdb\n\t      // requires both a \"filter\" and a \"doc_ids\" param.\n\t      params.filter = '_doc_ids';\n\t      method = 'POST';\n\t      body = {doc_ids: opts.doc_ids };\n\t    }\n\t\n\t    var xhr;\n\t    var lastFetchedSeq;\n\t\n\t    // Get all the changes starting wtih the one immediately after the\n\t    // sequence number given by since.\n\t    var fetch = function (since, callback) {\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t      params.since = since;\n\t      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n\t      /* istanbul ignore next */\n\t      if (typeof params.since === \"object\") {\n\t        params.since = JSON.stringify(params.since);\n\t      }\n\t\n\t      if (opts.descending) {\n\t        if (limit) {\n\t          params.limit = leftToFetch;\n\t        }\n\t      } else {\n\t        params.limit = (!limit || leftToFetch > batchSize) ?\n\t          batchSize : leftToFetch;\n\t      }\n\t\n\t      // Set the options for the ajax call\n\t      var xhrOpts = {\n\t        method: method,\n\t        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n\t        timeout: opts.timeout,\n\t        body: body\n\t      };\n\t      lastFetchedSeq = since;\n\t\n\t      /* istanbul ignore if */\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t\n\t      // Get the changes\n\t      setup().then(function () {\n\t        xhr = ajax$$(opts, xhrOpts, callback);\n\t      }).catch(callback);\n\t    };\n\t\n\t    // If opts.since exists, get all the changes from the sequence\n\t    // number given by opts.since. Otherwise, get all the changes\n\t    // from the sequence number 0.\n\t    var results = {results: []};\n\t\n\t    var fetched = function (err, res) {\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t      var raw_results_length = 0;\n\t      // If the result of the ajax call (res) contains changes (res.results)\n\t      if (res && res.results) {\n\t        raw_results_length = res.results.length;\n\t        results.last_seq = res.last_seq;\n\t        // For each change\n\t        var req = {};\n\t        req.query = opts.query_params;\n\t        res.results = res.results.filter(function (c) {\n\t          leftToFetch--;\n\t          var ret = filterChange(opts)(c);\n\t          if (ret) {\n\t            if (opts.include_docs && opts.attachments && opts.binary) {\n\t              readAttachmentsAsBlobOrBuffer(c);\n\t            }\n\t            if (returnDocs) {\n\t              results.results.push(c);\n\t            }\n\t            opts.onChange(c);\n\t          }\n\t          return ret;\n\t        });\n\t      } else if (err) {\n\t        // In case of an error, stop listening for changes and call\n\t        // opts.complete\n\t        opts.aborted = true;\n\t        opts.complete(err);\n\t        return;\n\t      }\n\t\n\t      // The changes feed may have timed out with no results\n\t      // if so reuse last update sequence\n\t      if (res && res.last_seq) {\n\t        lastFetchedSeq = res.last_seq;\n\t      }\n\t\n\t      var finished = (limit && leftToFetch <= 0) ||\n\t        (res && raw_results_length < batchSize) ||\n\t        (opts.descending);\n\t\n\t      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n\t        // Queue a call to fetch again with the newest sequence number\n\t        immediate(function () { fetch(lastFetchedSeq, fetched); });\n\t      } else {\n\t        // We're done, call the callback\n\t        opts.complete(null, results);\n\t      }\n\t    };\n\t\n\t    fetch(opts.since || 0, fetched);\n\t\n\t    // Return a method to cancel this method from processing any more\n\t    return {\n\t      cancel: function () {\n\t        opts.aborted = true;\n\t        if (xhr) {\n\t          xhr.abort();\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  // Given a set of document/revision IDs (given by req), tets the subset of\n\t  // those that do NOT correspond to revisions stored in the database.\n\t  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n\t  api.revsDiff = adapterFun$$('revsDiff', function (req, opts, callback) {\n\t    // If no options were given, set the callback to be the second parameter\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t\n\t    // Get the missing document/revision IDs\n\t    ajax$$(opts, {\n\t      method: 'POST',\n\t      url: genDBUrl(host, '_revs_diff'),\n\t      body: req\n\t    }, callback);\n\t  });\n\t\n\t  api._close = function (callback) {\n\t    callback();\n\t  };\n\t\n\t  api._destroy = function (options, callback) {\n\t    ajax$$(options, {\n\t      url: genDBUrl(host, ''),\n\t      method: 'DELETE'\n\t    }, function (err, resp) {\n\t      if (err && err.status && err.status !== 404) {\n\t        return callback(err);\n\t      }\n\t      callback(null, resp);\n\t    });\n\t  };\n\t}\n\t\n\t// HttpPouch is a valid adapter.\n\tHttpPouch.valid = function () {\n\t  return true;\n\t};\n\t\n\tfunction HttpPouch$1 (PouchDB) {\n\t  PouchDB.adapter('http', HttpPouch, false);\n\t  PouchDB.adapter('https', HttpPouch, false);\n\t}\n\t\n\tfunction pad(str, padWith, upToLength) {\n\t  var padding = '';\n\t  var targetLength = upToLength - str.length;\n\t  /* istanbul ignore next */\n\t  while (padding.length < targetLength) {\n\t    padding += padWith;\n\t  }\n\t  return padding;\n\t}\n\t\n\tfunction padLeft(str, padWith, upToLength) {\n\t  var padding = pad(str, padWith, upToLength);\n\t  return padding + str;\n\t}\n\t\n\tvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\n\tvar MAGNITUDE_DIGITS = 3; // ditto\n\tvar SEP = ''; // set to '_' for easier debugging \n\t\n\tfunction collate(a, b) {\n\t\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t\n\t  a = normalizeKey(a);\n\t  b = normalizeKey(b);\n\t\n\t  var ai = collationIndex(a);\n\t  var bi = collationIndex(b);\n\t  if ((ai - bi) !== 0) {\n\t    return ai - bi;\n\t  }\n\t  if (a === null) {\n\t    return 0;\n\t  }\n\t  switch (typeof a) {\n\t    case 'number':\n\t      return a - b;\n\t    case 'boolean':\n\t      return a === b ? 0 : (a < b ? -1 : 1);\n\t    case 'string':\n\t      return stringCollate(a, b);\n\t  }\n\t  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n\t}\n\t\n\t// couch considers null/NaN/Infinity/-Infinity === undefined,\n\t// for the purposes of mapreduce indexes. also, dates get stringified.\n\tfunction normalizeKey(key) {\n\t  switch (typeof key) {\n\t    case 'undefined':\n\t      return null;\n\t    case 'number':\n\t      if (key === Infinity || key === -Infinity || isNaN(key)) {\n\t        return null;\n\t      }\n\t      return key;\n\t    case 'object':\n\t      var origKey = key;\n\t      if (Array.isArray(key)) {\n\t        var len = key.length;\n\t        key = new Array(len);\n\t        for (var i = 0; i < len; i++) {\n\t          key[i] = normalizeKey(origKey[i]);\n\t        }\n\t      /* istanbul ignore next */\n\t      } else if (key instanceof Date) {\n\t        return key.toJSON();\n\t      } else if (key !== null) { // generic object\n\t        key = {};\n\t        for (var k in origKey) {\n\t          if (origKey.hasOwnProperty(k)) {\n\t            var val = origKey[k];\n\t            if (typeof val !== 'undefined') {\n\t              key[k] = normalizeKey(val);\n\t            }\n\t          }\n\t        }\n\t      }\n\t  }\n\t  return key;\n\t}\n\t\n\tfunction indexify(key) {\n\t  if (key !== null) {\n\t    switch (typeof key) {\n\t      case 'boolean':\n\t        return key ? 1 : 0;\n\t      case 'number':\n\t        return numToIndexableString(key);\n\t      case 'string':\n\t        // We've to be sure that key does not contain \\u0000\n\t        // Do order-preserving replacements:\n\t        // 0 -> 1, 1\n\t        // 1 -> 1, 2\n\t        // 2 -> 2, 2\n\t        return key\n\t          .replace(/\\u0002/g, '\\u0002\\u0002')\n\t          .replace(/\\u0001/g, '\\u0001\\u0002')\n\t          .replace(/\\u0000/g, '\\u0001\\u0001');\n\t      case 'object':\n\t        var isArray = Array.isArray(key);\n\t        var arr = isArray ? key : Object.keys(key);\n\t        var i = -1;\n\t        var len = arr.length;\n\t        var result = '';\n\t        if (isArray) {\n\t          while (++i < len) {\n\t            result += toIndexableString(arr[i]);\n\t          }\n\t        } else {\n\t          while (++i < len) {\n\t            var objKey = arr[i];\n\t            result += toIndexableString(objKey) +\n\t                toIndexableString(key[objKey]);\n\t          }\n\t        }\n\t        return result;\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t// convert the given key to a string that would be appropriate\n\t// for lexical sorting, e.g. within a database, where the\n\t// sorting is the same given by the collate() function.\n\tfunction toIndexableString(key) {\n\t  var zero = '\\u0000';\n\t  key = normalizeKey(key);\n\t  return collationIndex(key) + SEP + indexify(key) + zero;\n\t}\n\t\n\tfunction parseNumber(str, i) {\n\t  var originalIdx = i;\n\t  var num;\n\t  var zero = str[i] === '1';\n\t  if (zero) {\n\t    num = 0;\n\t    i++;\n\t  } else {\n\t    var neg = str[i] === '0';\n\t    i++;\n\t    var numAsString = '';\n\t    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n\t    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n\t    /* istanbul ignore next */\n\t    if (neg) {\n\t      magnitude = -magnitude;\n\t    }\n\t    i += MAGNITUDE_DIGITS;\n\t    while (true) {\n\t      var ch = str[i];\n\t      if (ch === '\\u0000') {\n\t        break;\n\t      } else {\n\t        numAsString += ch;\n\t      }\n\t      i++;\n\t    }\n\t    numAsString = numAsString.split('.');\n\t    if (numAsString.length === 1) {\n\t      num = parseInt(numAsString, 10);\n\t    } else {\n\t      /* istanbul ignore next */\n\t      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n\t    }\n\t    /* istanbul ignore next */\n\t    if (neg) {\n\t      num = num - 10;\n\t    }\n\t    /* istanbul ignore next */\n\t    if (magnitude !== 0) {\n\t      // parseFloat is more reliable than pow due to rounding errors\n\t      // e.g. Number.MAX_VALUE would return Infinity if we did\n\t      // num * Math.pow(10, magnitude);\n\t      num = parseFloat(num + 'e' + magnitude);\n\t    }\n\t  }\n\t  return {num: num, length : i - originalIdx};\n\t}\n\t\n\t// move up the stack while parsing\n\t// this function moved outside of parseIndexableString for performance\n\tfunction pop(stack, metaStack) {\n\t  var obj = stack.pop();\n\t\n\t  if (metaStack.length) {\n\t    var lastMetaElement = metaStack[metaStack.length - 1];\n\t    if (obj === lastMetaElement.element) {\n\t      // popping a meta-element, e.g. an object whose value is another object\n\t      metaStack.pop();\n\t      lastMetaElement = metaStack[metaStack.length - 1];\n\t    }\n\t    var element = lastMetaElement.element;\n\t    var lastElementIndex = lastMetaElement.index;\n\t    if (Array.isArray(element)) {\n\t      element.push(obj);\n\t    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n\t      var key = stack.pop();\n\t      element[key] = obj;\n\t    } else {\n\t      stack.push(obj); // obj with key only\n\t    }\n\t  }\n\t}\n\t\n\tfunction parseIndexableString(str) {\n\t  var stack = [];\n\t  var metaStack = []; // stack for arrays and objects\n\t  var i = 0;\n\t\n\t  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\t  while (true) {\n\t    var collationIndex = str[i++];\n\t    if (collationIndex === '\\u0000') {\n\t      if (stack.length === 1) {\n\t        return stack.pop();\n\t      } else {\n\t        pop(stack, metaStack);\n\t        continue;\n\t      }\n\t    }\n\t    switch (collationIndex) {\n\t      case '1':\n\t        stack.push(null);\n\t        break;\n\t      case '2':\n\t        stack.push(str[i] === '1');\n\t        i++;\n\t        break;\n\t      case '3':\n\t        var parsedNum = parseNumber(str, i);\n\t        stack.push(parsedNum.num);\n\t        i += parsedNum.length;\n\t        break;\n\t      case '4':\n\t        var parsedStr = '';\n\t        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\t        while (true) {\n\t          var ch = str[i];\n\t          if (ch === '\\u0000') {\n\t            break;\n\t          }\n\t          parsedStr += ch;\n\t          i++;\n\t        }\n\t        // perform the reverse of the order-preserving replacement\n\t        // algorithm (see above)\n\t        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n\t          .replace(/\\u0001\\u0002/g, '\\u0001')\n\t          .replace(/\\u0002\\u0002/g, '\\u0002');\n\t        stack.push(parsedStr);\n\t        break;\n\t      case '5':\n\t        var arrayElement = { element: [], index: stack.length };\n\t        stack.push(arrayElement.element);\n\t        metaStack.push(arrayElement);\n\t        break;\n\t      case '6':\n\t        var objElement = { element: {}, index: stack.length };\n\t        stack.push(objElement.element);\n\t        metaStack.push(objElement);\n\t        break;\n\t      /* istanbul ignore next */\n\t      default:\n\t        throw new Error(\n\t          'bad collationIndex or unexpectedly reached end of input: ' +\n\t            collationIndex);\n\t    }\n\t  }\n\t}\n\t\n\tfunction arrayCollate(a, b) {\n\t  var len = Math.min(a.length, b.length);\n\t  for (var i = 0; i < len; i++) {\n\t    var sort = collate(a[i], b[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t  }\n\t  return (a.length === b.length) ? 0 :\n\t    (a.length > b.length) ? 1 : -1;\n\t}\n\tfunction stringCollate(a, b) {\n\t  // See: https://github.com/daleharvey/pouchdb/issues/40\n\t  // This is incompatible with the CouchDB implementation, but its the\n\t  // best we can do for now\n\t  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n\t}\n\tfunction objectCollate(a, b) {\n\t  var ak = Object.keys(a), bk = Object.keys(b);\n\t  var len = Math.min(ak.length, bk.length);\n\t  for (var i = 0; i < len; i++) {\n\t    // First sort the keys\n\t    var sort = collate(ak[i], bk[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t    // if the keys are equal sort the values\n\t    sort = collate(a[ak[i]], b[bk[i]]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t\n\t  }\n\t  return (ak.length === bk.length) ? 0 :\n\t    (ak.length > bk.length) ? 1 : -1;\n\t}\n\t// The collation is defined by erlangs ordered terms\n\t// the atoms null, true, false come first, then numbers, strings,\n\t// arrays, then objects\n\t// null/undefined/NaN/Infinity/-Infinity are all considered null\n\tfunction collationIndex(x) {\n\t  var id = ['boolean', 'number', 'string', 'object'];\n\t  var idx = id.indexOf(typeof x);\n\t  //false if -1 otherwise true, but fast!!!!1\n\t  if (~idx) {\n\t    if (x === null) {\n\t      return 1;\n\t    }\n\t    if (Array.isArray(x)) {\n\t      return 5;\n\t    }\n\t    return idx < 3 ? (idx + 2) : (idx + 3);\n\t  }\n\t  /* istanbul ignore next */\n\t  if (Array.isArray(x)) {\n\t    return 5;\n\t  }\n\t}\n\t\n\t// conversion:\n\t// x yyy zz...zz\n\t// x = 0 for negative, 1 for 0, 2 for positive\n\t// y = exponent (for negative numbers negated) moved so that it's >= 0\n\t// z = mantisse\n\tfunction numToIndexableString(num) {\n\t\n\t  if (num === 0) {\n\t    return '1';\n\t  }\n\t\n\t  // convert number to exponential format for easier and\n\t  // more succinct string sorting\n\t  var expFormat = num.toExponential().split(/e\\+?/);\n\t  var magnitude = parseInt(expFormat[1], 10);\n\t\n\t  var neg = num < 0;\n\t\n\t  var result = neg ? '0' : '2';\n\t\n\t  // first sort by magnitude\n\t  // it's easier if all magnitudes are positive\n\t  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n\t  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\t\n\t  result += SEP + magString;\n\t\n\t  // then sort by the factor\n\t  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n\t  /* istanbul ignore next */\n\t  if (neg) { // for negative reverse ordering\n\t    factor = 10 - factor;\n\t  }\n\t\n\t  var factorStr = factor.toFixed(20);\n\t\n\t  // strip zeros from the end\n\t  factorStr = factorStr.replace(/\\.?0+$/, '');\n\t\n\t  result += SEP + factorStr;\n\t\n\t  return result;\n\t}\n\t\n\t/*\n\t * Simple task queue to sequentialize actions. Assumes\n\t * callbacks will eventually fire (once).\n\t */\n\t\n\tfunction TaskQueue$1() {\n\t  this.promise = new PouchPromise(function (fulfill) {fulfill(); });\n\t}\n\tTaskQueue$1.prototype.add = function (promiseFactory) {\n\t  this.promise = this.promise.catch(function () {\n\t    // just recover\n\t  }).then(function () {\n\t    return promiseFactory();\n\t  });\n\t  return this.promise;\n\t};\n\tTaskQueue$1.prototype.finish = function () {\n\t  return this.promise;\n\t};\n\t\n\tfunction createView(opts) {\n\t  var sourceDB = opts.db;\n\t  var viewName = opts.viewName;\n\t  var mapFun = opts.map;\n\t  var reduceFun = opts.reduce;\n\t  var temporary = opts.temporary;\n\t\n\t  // the \"undefined\" part is for backwards compatibility\n\t  var viewSignature = mapFun.toString() + (reduceFun && reduceFun.toString()) +\n\t    'undefined';\n\t\n\t  var cachedViews;\n\t  if (!temporary) {\n\t    // cache this to ensure we don't try to update the same view twice\n\t    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n\t    if (cachedViews[viewSignature]) {\n\t      return cachedViews[viewSignature];\n\t    }\n\t  }\n\t\n\t  var promiseForView = sourceDB.info().then(function (info) {\n\t\n\t    var depDbName = info.db_name + '-mrview-' +\n\t      (temporary ? 'temp' : stringMd5(viewSignature));\n\t\n\t    // save the view name in the source db so it can be cleaned up if necessary\n\t    // (e.g. when the _design doc is deleted, remove all associated view data)\n\t    function diffFunction(doc) {\n\t      doc.views = doc.views || {};\n\t      var fullViewName = viewName;\n\t      if (fullViewName.indexOf('/') === -1) {\n\t        fullViewName = viewName + '/' + viewName;\n\t      }\n\t      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n\t      /* istanbul ignore if */\n\t      if (depDbs[depDbName]) {\n\t        return; // no update necessary\n\t      }\n\t      depDbs[depDbName] = true;\n\t      return doc;\n\t    }\n\t    return upsert(sourceDB, '_local/mrviews', diffFunction).then(function () {\n\t      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n\t        var db = res.db;\n\t        db.auto_compaction = true;\n\t        var view = {\n\t          name: depDbName,\n\t          db: db,\n\t          sourceDB: sourceDB,\n\t          adapter: sourceDB.adapter,\n\t          mapFun: mapFun,\n\t          reduceFun: reduceFun\n\t        };\n\t        return view.db.get('_local/lastSeq').catch(function (err) {\n\t          /* istanbul ignore if */\n\t          if (err.status !== 404) {\n\t            throw err;\n\t          }\n\t        }).then(function (lastSeqDoc) {\n\t          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n\t          if (cachedViews) {\n\t            view.db.once('destroyed', function () {\n\t              delete cachedViews[viewSignature];\n\t            });\n\t          }\n\t          return view;\n\t        });\n\t      });\n\t    });\n\t  });\n\t\n\t  if (cachedViews) {\n\t    cachedViews[viewSignature] = promiseForView;\n\t  }\n\t  return promiseForView;\n\t}\n\t\n\tfunction QueryParseError(message) {\n\t  this.status = 400;\n\t  this.name = 'query_parse_error';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, QueryParseError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(QueryParseError, Error);\n\t\n\tfunction NotFoundError(message) {\n\t  this.status = 404;\n\t  this.name = 'not_found';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, NotFoundError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(NotFoundError, Error);\n\t\n\tfunction BuiltInError(message) {\n\t  this.status = 500;\n\t  this.name = 'invalid_value';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, BuiltInError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(BuiltInError, Error);\n\t\n\tfunction createBuiltInError(name) {\n\t  var message = 'builtin ' + name +\n\t    ' function requires map values to be numbers' +\n\t    ' or number arrays';\n\t  return new BuiltInError(message);\n\t}\n\t\n\tfunction sum(values) {\n\t  var result = 0;\n\t  for (var i = 0, len = values.length; i < len; i++) {\n\t    var num = values[i];\n\t    if (typeof num !== 'number') {\n\t      if (Array.isArray(num)) {\n\t        // lists of numbers are also allowed, sum them separately\n\t        result = typeof result === 'number' ? [result] : result;\n\t        for (var j = 0, jLen = num.length; j < jLen; j++) {\n\t          var jNum = num[j];\n\t          if (typeof jNum !== 'number') {\n\t            throw createBuiltInError('_sum');\n\t          } else if (typeof result[j] === 'undefined') {\n\t            result.push(jNum);\n\t          } else {\n\t            result[j] += jNum;\n\t          }\n\t        }\n\t      } else { // not array/number\n\t        throw createBuiltInError('_sum');\n\t      }\n\t    } else if (typeof result === 'number') {\n\t      result += num;\n\t    } else { // add number to array\n\t      result[0] += num;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tvar log$2 = guardedConsole.bind(null, 'log');\n\tvar isArray = Array.isArray;\n\tvar toJSON = JSON.parse;\n\t\n\tfunction evalFunctionWithEval(func, emit) {\n\t  return scopedEval(\n\t    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n\t    {\n\t      emit: emit,\n\t      sum: sum,\n\t      log: log$2,\n\t      isArray: isArray,\n\t      toJSON: toJSON\n\t    }\n\t  );\n\t}\n\t\n\tvar promisedCallback = function (promise, callback) {\n\t  if (callback) {\n\t    promise.then(function (res) {\n\t      immediate(function () {\n\t        callback(null, res);\n\t      });\n\t    }, function (reason) {\n\t      immediate(function () {\n\t        callback(reason);\n\t      });\n\t    });\n\t  }\n\t  return promise;\n\t};\n\t\n\tvar callbackify = function (fun) {\n\t  return getArguments(function (args) {\n\t    var cb = args.pop();\n\t    var promise = fun.apply(this, args);\n\t    if (typeof cb === 'function') {\n\t      promisedCallback(promise, cb);\n\t    }\n\t    return promise;\n\t  });\n\t};\n\t\n\t// Promise finally util similar to Q.finally\n\tvar fin = function (promise, finalPromiseFactory) {\n\t  return promise.then(function (res) {\n\t    return finalPromiseFactory().then(function () {\n\t      return res;\n\t    });\n\t  }, function (reason) {\n\t    return finalPromiseFactory().then(function () {\n\t      throw reason;\n\t    });\n\t  });\n\t};\n\t\n\tvar sequentialize = function (queue, promiseFactory) {\n\t  return function () {\n\t    var args = arguments;\n\t    var that = this;\n\t    return queue.add(function () {\n\t      return promiseFactory.apply(that, args);\n\t    });\n\t  };\n\t};\n\t\n\t// uniq an array of strings, order not guaranteed\n\t// similar to underscore/lodash _.uniq\n\tvar uniq = function (arr) {\n\t  var map = {};\n\t\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    map['$' + arr[i]] = true;\n\t  }\n\t\n\t  var keys = Object.keys(map);\n\t  var output = new Array(keys.length);\n\t\n\t  for (i = 0, len = keys.length; i < len; i++) {\n\t    output[i] = keys[i].substring(1);\n\t  }\n\t  return output;\n\t};\n\t\n\tvar persistentQueues = {};\n\tvar tempViewQueue = new TaskQueue$1();\n\tvar CHANGES_BATCH_SIZE$1 = 50;\n\t\n\tfunction parseViewName(name) {\n\t  // can be either 'ddocname/viewname' or just 'viewname'\n\t  // (where the ddoc name is the same)\n\t  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n\t}\n\t\n\tfunction isGenOne(changes) {\n\t  // only return true if the current change is 1-\n\t  // and there are no other leafs\n\t  return changes.length === 1 && /^1-/.test(changes[0].rev);\n\t}\n\t\n\tfunction emitError(db, e) {\n\t  try {\n\t    db.emit('error', e);\n\t  } catch (err) {\n\t    guardedConsole('error',\n\t      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n\t      'You can debug this error by doing:\\n' +\n\t      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n\t      'Please double-check your map/reduce function.');\n\t    guardedConsole('error', e);\n\t  }\n\t}\n\t\n\tfunction tryCode$1(db, fun, args) {\n\t  // emit an event if there was an error thrown by a map/reduce function.\n\t  // putting try/catches in a single function also avoids deoptimizations.\n\t  try {\n\t    return {\n\t      output : fun.apply(null, args)\n\t    };\n\t  } catch (e) {\n\t    emitError(db, e);\n\t    return {error: e};\n\t  }\n\t}\n\t\n\tfunction sortByKeyThenValue(x, y) {\n\t  var keyCompare = collate(x.key, y.key);\n\t  return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n\t}\n\t\n\tfunction sliceResults(results, limit, skip) {\n\t  skip = skip || 0;\n\t  if (typeof limit === 'number') {\n\t    return results.slice(skip, limit + skip);\n\t  } else if (skip > 0) {\n\t    return results.slice(skip);\n\t  }\n\t  return results;\n\t}\n\t\n\tfunction rowToDocId(row) {\n\t  var val = row.value;\n\t  // Users can explicitly specify a joined doc _id, or it\n\t  // defaults to the doc _id that emitted the key/value.\n\t  var docId = (val && typeof val === 'object' && val._id) || row.id;\n\t  return docId;\n\t}\n\t\n\tfunction readAttachmentsAsBlobOrBuffer$1(res) {\n\t  res.rows.forEach(function (row) {\n\t    var atts = row.doc && row.doc._attachments;\n\t    if (!atts) {\n\t      return;\n\t    }\n\t    Object.keys(atts).forEach(function (filename) {\n\t      var att = atts[filename];\n\t      atts[filename].data = b64ToBluffer(att.data, att.content_type);\n\t    });\n\t  });\n\t}\n\t\n\tfunction postprocessAttachments(opts) {\n\t  return function (res) {\n\t    if (opts.include_docs && opts.attachments && opts.binary) {\n\t      readAttachmentsAsBlobOrBuffer$1(res);\n\t    }\n\t    return res;\n\t  };\n\t}\n\t\n\tvar builtInReduce = {\n\t  _sum: function (keys, values) {\n\t    return sum(values);\n\t  },\n\t\n\t  _count: function (keys, values) {\n\t    return values.length;\n\t  },\n\t\n\t  _stats: function (keys, values) {\n\t    // no need to implement rereduce=true, because Pouch\n\t    // will never call it\n\t    function sumsqr(values) {\n\t      var _sumsqr = 0;\n\t      for (var i = 0, len = values.length; i < len; i++) {\n\t        var num = values[i];\n\t        _sumsqr += (num * num);\n\t      }\n\t      return _sumsqr;\n\t    }\n\t    return {\n\t      sum     : sum(values),\n\t      min     : Math.min.apply(null, values),\n\t      max     : Math.max.apply(null, values),\n\t      count   : values.length,\n\t      sumsqr : sumsqr(values)\n\t    };\n\t  }\n\t};\n\t\n\tfunction addHttpParam(paramName, opts, params, asJson) {\n\t  // add an http param from opts to params, optionally json-encoded\n\t  var val = opts[paramName];\n\t  if (typeof val !== 'undefined') {\n\t    if (asJson) {\n\t      val = encodeURIComponent(JSON.stringify(val));\n\t    }\n\t    params.push(paramName + '=' + val);\n\t  }\n\t}\n\t\n\tfunction coerceInteger(integerCandidate) {\n\t  if (typeof integerCandidate !== 'undefined') {\n\t    var asNumber = Number(integerCandidate);\n\t    // prevents e.g. '1foo' or '1.1' being coerced to 1\n\t    if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n\t      return asNumber;\n\t    } else {\n\t      return integerCandidate;\n\t    }\n\t  }\n\t}\n\t\n\tfunction coerceOptions(opts) {\n\t  opts.group_level = coerceInteger(opts.group_level);\n\t  opts.limit = coerceInteger(opts.limit);\n\t  opts.skip = coerceInteger(opts.skip);\n\t  return opts;\n\t}\n\t\n\tfunction checkPositiveInteger(number) {\n\t  if (number) {\n\t    if (typeof number !== 'number') {\n\t      return  new QueryParseError('Invalid value for integer: \"' +\n\t      number + '\"');\n\t    }\n\t    if (number < 0) {\n\t      return new QueryParseError('Invalid value for positive integer: ' +\n\t        '\"' + number + '\"');\n\t    }\n\t  }\n\t}\n\t\n\tfunction checkQueryParseError(options, fun) {\n\t  var startkeyName = options.descending ? 'endkey' : 'startkey';\n\t  var endkeyName = options.descending ? 'startkey' : 'endkey';\n\t\n\t  if (typeof options[startkeyName] !== 'undefined' &&\n\t    typeof options[endkeyName] !== 'undefined' &&\n\t    collate(options[startkeyName], options[endkeyName]) > 0) {\n\t    throw new QueryParseError('No rows can match your key range, ' +\n\t    'reverse your start_key and end_key or set {descending : true}');\n\t  } else if (fun.reduce && options.reduce !== false) {\n\t    if (options.include_docs) {\n\t      throw new QueryParseError('{include_docs:true} is invalid for reduce');\n\t    } else if (options.keys && options.keys.length > 1 &&\n\t        !options.group && !options.group_level) {\n\t      throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n\t      '{group: true}');\n\t    }\n\t  }\n\t  ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n\t    var error = checkPositiveInteger(options[optionName]);\n\t    if (error) {\n\t      throw error;\n\t    }\n\t  });\n\t}\n\t\n\tfunction httpQuery(db, fun, opts) {\n\t  // List of parameters to add to the PUT request\n\t  var params = [];\n\t  var body;\n\t  var method = 'GET';\n\t\n\t  // If opts.reduce exists and is defined, then add it to the list\n\t  // of parameters.\n\t  // If reduce=false then the results are that of only the map function\n\t  // not the final result of map and reduce.\n\t  addHttpParam('reduce', opts, params);\n\t  addHttpParam('include_docs', opts, params);\n\t  addHttpParam('attachments', opts, params);\n\t  addHttpParam('limit', opts, params);\n\t  addHttpParam('descending', opts, params);\n\t  addHttpParam('group', opts, params);\n\t  addHttpParam('group_level', opts, params);\n\t  addHttpParam('skip', opts, params);\n\t  addHttpParam('stale', opts, params);\n\t  addHttpParam('conflicts', opts, params);\n\t  addHttpParam('startkey', opts, params, true);\n\t  addHttpParam('start_key', opts, params, true);\n\t  addHttpParam('endkey', opts, params, true);\n\t  addHttpParam('end_key', opts, params, true);\n\t  addHttpParam('inclusive_end', opts, params);\n\t  addHttpParam('key', opts, params, true);\n\t\n\t  // Format the list of parameters into a valid URI query string\n\t  params = params.join('&');\n\t  params = params === '' ? '' : '?' + params;\n\t\n\t  // If keys are supplied, issue a POST to circumvent GET query string limits\n\t  // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n\t  if (typeof opts.keys !== 'undefined') {\n\t    var MAX_URL_LENGTH = 2000;\n\t    // according to http://stackoverflow.com/a/417184/680742,\n\t    // the de facto URL length limit is 2000 characters\n\t\n\t    var keysAsString =\n\t      'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n\t    if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n\t      // If the keys are short enough, do a GET. we do this to work around\n\t      // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n\t      params += (params[0] === '?' ? '&' : '?') + keysAsString;\n\t    } else {\n\t      method = 'POST';\n\t      if (typeof fun === 'string') {\n\t        body = {keys: opts.keys};\n\t      } else { // fun is {map : mapfun}, so append to this\n\t        fun.keys = opts.keys;\n\t      }\n\t    }\n\t  }\n\t\n\t  // We are referencing a query defined in the design doc\n\t  if (typeof fun === 'string') {\n\t    var parts = parseViewName(fun);\n\t    return db.request({\n\t      method: method,\n\t      url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n\t      body: body\n\t    }).then(postprocessAttachments(opts));\n\t  }\n\t\n\t  // We are using a temporary view, terrible for performance, good for testing\n\t  body = body || {};\n\t  Object.keys(fun).forEach(function (key) {\n\t    if (Array.isArray(fun[key])) {\n\t      body[key] = fun[key];\n\t    } else {\n\t      body[key] = fun[key].toString();\n\t    }\n\t  });\n\t  return db.request({\n\t    method: 'POST',\n\t    url: '_temp_view' + params,\n\t    body: body\n\t  }).then(postprocessAttachments(opts));\n\t}\n\t\n\t// custom adapters can define their own api._query\n\t// and override the default behavior\n\t/* istanbul ignore next */\n\tfunction customQuery(db, fun, opts) {\n\t  return new PouchPromise(function (resolve, reject) {\n\t    db._query(fun, opts, function (err, res) {\n\t      if (err) {\n\t        return reject(err);\n\t      }\n\t      resolve(res);\n\t    });\n\t  });\n\t}\n\t\n\t// custom adapters can define their own api._viewCleanup\n\t// and override the default behavior\n\t/* istanbul ignore next */\n\tfunction customViewCleanup(db) {\n\t  return new PouchPromise(function (resolve, reject) {\n\t    db._viewCleanup(function (err, res) {\n\t      if (err) {\n\t        return reject(err);\n\t      }\n\t      resolve(res);\n\t    });\n\t  });\n\t}\n\t\n\tfunction defaultsTo(value) {\n\t  return function (reason) {\n\t    /* istanbul ignore else */\n\t    if (reason.status === 404) {\n\t      return value;\n\t    } else {\n\t      throw reason;\n\t    }\n\t  };\n\t}\n\t\n\t// returns a promise for a list of docs to update, based on the input docId.\n\t// the order doesn't matter, because post-3.2.0, bulkDocs\n\t// is an atomic operation in all three adapters.\n\tfunction getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n\t  var metaDocId = '_local/doc_' + docId;\n\t  var defaultMetaDoc = {_id: metaDocId, keys: []};\n\t  var docData = docIdsToChangesAndEmits[docId];\n\t  var indexableKeysToKeyValues = docData.indexableKeysToKeyValues;\n\t  var changes = docData.changes;\n\t\n\t  function getMetaDoc() {\n\t    if (isGenOne(changes)) {\n\t      // generation 1, so we can safely assume initial state\n\t      // for performance reasons (avoids unnecessary GETs)\n\t      return PouchPromise.resolve(defaultMetaDoc);\n\t    }\n\t    return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n\t  }\n\t\n\t  function getKeyValueDocs(metaDoc) {\n\t    if (!metaDoc.keys.length) {\n\t      // no keys, no need for a lookup\n\t      return PouchPromise.resolve({rows: []});\n\t    }\n\t    return view.db.allDocs({\n\t      keys: metaDoc.keys,\n\t      include_docs: true\n\t    });\n\t  }\n\t\n\t  function processKvDocs(metaDoc, kvDocsRes) {\n\t    var kvDocs = [];\n\t    var oldKeysMap = {};\n\t\n\t    for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n\t      var row = kvDocsRes.rows[i];\n\t      var doc = row.doc;\n\t      if (!doc) { // deleted\n\t        continue;\n\t      }\n\t      kvDocs.push(doc);\n\t      oldKeysMap[doc._id] = true;\n\t      doc._deleted = !indexableKeysToKeyValues[doc._id];\n\t      if (!doc._deleted) {\n\t        var keyValue = indexableKeysToKeyValues[doc._id];\n\t        if ('value' in keyValue) {\n\t          doc.value = keyValue.value;\n\t        }\n\t      }\n\t    }\n\t\n\t    var newKeys = Object.keys(indexableKeysToKeyValues);\n\t    newKeys.forEach(function (key) {\n\t      if (!oldKeysMap[key]) {\n\t        // new doc\n\t        var kvDoc = {\n\t          _id: key\n\t        };\n\t        var keyValue = indexableKeysToKeyValues[key];\n\t        if ('value' in keyValue) {\n\t          kvDoc.value = keyValue.value;\n\t        }\n\t        kvDocs.push(kvDoc);\n\t      }\n\t    });\n\t    metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n\t    kvDocs.push(metaDoc);\n\t\n\t    return kvDocs;\n\t  }\n\t\n\t  return getMetaDoc().then(function (metaDoc) {\n\t    return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n\t      return processKvDocs(metaDoc, kvDocsRes);\n\t    });\n\t  });\n\t}\n\t\n\t// updates all emitted key/value docs and metaDocs in the mrview database\n\t// for the given batch of documents from the source database\n\tfunction saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n\t  var seqDocId = '_local/lastSeq';\n\t  return view.db.get(seqDocId)\n\t  .catch(defaultsTo({_id: seqDocId, seq: 0}))\n\t  .then(function (lastSeqDoc) {\n\t    var docIds = Object.keys(docIdsToChangesAndEmits);\n\t    return PouchPromise.all(docIds.map(function (docId) {\n\t      return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n\t    })).then(function (listOfDocsToPersist) {\n\t      var docsToPersist = flatten(listOfDocsToPersist);\n\t      lastSeqDoc.seq = seq;\n\t      docsToPersist.push(lastSeqDoc);\n\t      // write all docs in a single operation, update the seq once\n\t      return view.db.bulkDocs({docs : docsToPersist});\n\t    });\n\t  });\n\t}\n\t\n\tfunction getQueue(view) {\n\t  var viewName = typeof view === 'string' ? view : view.name;\n\t  var queue = persistentQueues[viewName];\n\t  if (!queue) {\n\t    queue = persistentQueues[viewName] = new TaskQueue$1();\n\t  }\n\t  return queue;\n\t}\n\t\n\tfunction updateView(view) {\n\t  return sequentialize(getQueue(view), function () {\n\t    return updateViewInQueue(view);\n\t  })();\n\t}\n\t\n\tfunction updateViewInQueue(view) {\n\t  // bind the emit function once\n\t  var mapResults;\n\t  var doc;\n\t\n\t  function emit(key, value) {\n\t    var output = {id: doc._id, key: normalizeKey(key)};\n\t    // Don't explicitly store the value unless it's defined and non-null.\n\t    // This saves on storage space, because often people don't use it.\n\t    if (typeof value !== 'undefined' && value !== null) {\n\t      output.value = normalizeKey(value);\n\t    }\n\t    mapResults.push(output);\n\t  }\n\t\n\t  var mapFun;\n\t  // for temp_views one can use emit(doc, emit), see #38\n\t  if (typeof view.mapFun === \"function\" && view.mapFun.length === 2) {\n\t    var origMap = view.mapFun;\n\t    mapFun = function (doc) {\n\t      return origMap(doc, emit);\n\t    };\n\t  } else {\n\t    mapFun = evalFunctionWithEval(view.mapFun.toString(), emit);\n\t  }\n\t\n\t  var currentSeq = view.seq || 0;\n\t\n\t  function processChange(docIdsToChangesAndEmits, seq) {\n\t    return function () {\n\t      return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n\t    };\n\t  }\n\t\n\t  var queue = new TaskQueue$1();\n\t  // TODO(neojski): https://github.com/daleharvey/pouchdb/issues/1521\n\t\n\t  return new PouchPromise(function (resolve, reject) {\n\t\n\t    function complete() {\n\t      queue.finish().then(function () {\n\t        view.seq = currentSeq;\n\t        resolve();\n\t      });\n\t    }\n\t\n\t    function processNextBatch() {\n\t      view.sourceDB.changes({\n\t        conflicts: true,\n\t        include_docs: true,\n\t        style: 'all_docs',\n\t        since: currentSeq,\n\t        limit: CHANGES_BATCH_SIZE$1\n\t      }).on('complete', function (response) {\n\t        var results = response.results;\n\t        if (!results.length) {\n\t          return complete();\n\t        }\n\t        var docIdsToChangesAndEmits = {};\n\t        for (var i = 0, l = results.length; i < l; i++) {\n\t          var change = results[i];\n\t          if (change.doc._id[0] !== '_') {\n\t            mapResults = [];\n\t            doc = change.doc;\n\t\n\t            if (!doc._deleted) {\n\t              tryCode$1(view.sourceDB, mapFun, [doc]);\n\t            }\n\t            mapResults.sort(sortByKeyThenValue);\n\t\n\t            var indexableKeysToKeyValues = {};\n\t            var lastKey;\n\t            for (var j = 0, jl = mapResults.length; j < jl; j++) {\n\t              var obj = mapResults[j];\n\t              var complexKey = [obj.key, obj.id];\n\t              if (collate(obj.key, lastKey) === 0) {\n\t                complexKey.push(j); // dup key+id, so make it unique\n\t              }\n\t              var indexableKey = toIndexableString(complexKey);\n\t              indexableKeysToKeyValues[indexableKey] = obj;\n\t              lastKey = obj.key;\n\t            }\n\t            docIdsToChangesAndEmits[change.doc._id] = {\n\t              indexableKeysToKeyValues: indexableKeysToKeyValues,\n\t              changes: change.changes\n\t            };\n\t          }\n\t          currentSeq = change.seq;\n\t        }\n\t        queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n\t        if (results.length < CHANGES_BATCH_SIZE$1) {\n\t          return complete();\n\t        }\n\t        return processNextBatch();\n\t      }).on('error', onError);\n\t      /* istanbul ignore next */\n\t      function onError(err) {\n\t        reject(err);\n\t      }\n\t    }\n\t\n\t    processNextBatch();\n\t  });\n\t}\n\t\n\tfunction reduceView(view, results, options) {\n\t  if (options.group_level === 0) {\n\t    delete options.group_level;\n\t  }\n\t\n\t  var shouldGroup = options.group || options.group_level;\n\t\n\t  var reduceFun;\n\t  if (builtInReduce[view.reduceFun]) {\n\t    reduceFun = builtInReduce[view.reduceFun];\n\t  } else {\n\t    reduceFun = evalFunctionWithEval(view.reduceFun.toString());\n\t  }\n\t\n\t  var groups = [];\n\t  var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n\t    options.group_level;\n\t  results.forEach(function (e) {\n\t    var last = groups[groups.length - 1];\n\t    var groupKey = shouldGroup ? e.key : null;\n\t\n\t    // only set group_level for array keys\n\t    if (shouldGroup && Array.isArray(groupKey)) {\n\t      groupKey = groupKey.slice(0, lvl);\n\t    }\n\t\n\t    if (last && collate(last.groupKey, groupKey) === 0) {\n\t      last.keys.push([e.key, e.id]);\n\t      last.values.push(e.value);\n\t      return;\n\t    }\n\t    groups.push({\n\t      keys: [[e.key, e.id]],\n\t      values: [e.value],\n\t      groupKey: groupKey\n\t    });\n\t  });\n\t  results = [];\n\t  for (var i = 0, len = groups.length; i < len; i++) {\n\t    var e = groups[i];\n\t    var reduceTry = tryCode$1(view.sourceDB, reduceFun,\n\t      [e.keys, e.values, false]);\n\t    if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n\t      // CouchDB returns an error if a built-in errors out\n\t      throw reduceTry.error;\n\t    }\n\t    results.push({\n\t      // CouchDB just sets the value to null if a non-built-in errors out\n\t      value: reduceTry.error ? null : reduceTry.output,\n\t      key: e.groupKey\n\t    });\n\t  }\n\t  // no total_rows/offset when reducing\n\t  return {rows: sliceResults(results, options.limit, options.skip)};\n\t}\n\t\n\tfunction queryView(view, opts) {\n\t  return sequentialize(getQueue(view), function () {\n\t    return queryViewInQueue(view, opts);\n\t  })();\n\t}\n\t\n\tfunction queryViewInQueue(view, opts) {\n\t  var totalRows;\n\t  var shouldReduce = view.reduceFun && opts.reduce !== false;\n\t  var skip = opts.skip || 0;\n\t  if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n\t    // equivalent query\n\t    opts.limit = 0;\n\t    delete opts.keys;\n\t  }\n\t\n\t  function fetchFromView(viewOpts) {\n\t    viewOpts.include_docs = true;\n\t    return view.db.allDocs(viewOpts).then(function (res) {\n\t      totalRows = res.total_rows;\n\t      return res.rows.map(function (result) {\n\t\n\t        // implicit migration - in older versions of PouchDB,\n\t        // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n\t        // this is tested in a migration test\n\t        /* istanbul ignore next */\n\t        if ('value' in result.doc && typeof result.doc.value === 'object' &&\n\t            result.doc.value !== null) {\n\t          var keys = Object.keys(result.doc.value).sort();\n\t          // this detection method is not perfect, but it's unlikely the user\n\t          // emitted a value which was an object with these 3 exact keys\n\t          var expectedKeys = ['id', 'key', 'value'];\n\t          if (!(keys < expectedKeys || keys > expectedKeys)) {\n\t            return result.doc.value;\n\t          }\n\t        }\n\t\n\t        var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n\t        return {\n\t          key: parsedKeyAndDocId[0],\n\t          id: parsedKeyAndDocId[1],\n\t          value: ('value' in result.doc ? result.doc.value : null)\n\t        };\n\t      });\n\t    });\n\t  }\n\t\n\t  function onMapResultsReady(rows) {\n\t    var finalResults;\n\t    if (shouldReduce) {\n\t      finalResults = reduceView(view, rows, opts);\n\t    } else {\n\t      finalResults = {\n\t        total_rows: totalRows,\n\t        offset: skip,\n\t        rows: rows\n\t      };\n\t    }\n\t    if (opts.include_docs) {\n\t      var docIds = uniq(rows.map(rowToDocId));\n\t\n\t      return view.sourceDB.allDocs({\n\t        keys: docIds,\n\t        include_docs: true,\n\t        conflicts: opts.conflicts,\n\t        attachments: opts.attachments,\n\t        binary: opts.binary\n\t      }).then(function (allDocsRes) {\n\t        var docIdsToDocs = {};\n\t        allDocsRes.rows.forEach(function (row) {\n\t          if (row.doc) {\n\t            docIdsToDocs['$' + row.id] = row.doc;\n\t          }\n\t        });\n\t        rows.forEach(function (row) {\n\t          var docId = rowToDocId(row);\n\t          var doc = docIdsToDocs['$' + docId];\n\t          if (doc) {\n\t            row.doc = doc;\n\t          }\n\t        });\n\t        return finalResults;\n\t      });\n\t    } else {\n\t      return finalResults;\n\t    }\n\t  }\n\t\n\t  if (typeof opts.keys !== 'undefined') {\n\t    var keys = opts.keys;\n\t    var fetchPromises = keys.map(function (key) {\n\t      var viewOpts = {\n\t        startkey : toIndexableString([key]),\n\t        endkey   : toIndexableString([key, {}])\n\t      };\n\t      return fetchFromView(viewOpts);\n\t    });\n\t    return PouchPromise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n\t  } else { // normal query, no 'keys'\n\t    var viewOpts = {\n\t      descending : opts.descending\n\t    };\n\t    if (opts.start_key) {\n\t        opts.startkey = opts.start_key;\n\t    }\n\t    if (opts.end_key) {\n\t        opts.endkey = opts.end_key;\n\t    }\n\t    if (typeof opts.startkey !== 'undefined') {\n\t      viewOpts.startkey = opts.descending ?\n\t        toIndexableString([opts.startkey, {}]) :\n\t        toIndexableString([opts.startkey]);\n\t    }\n\t    if (typeof opts.endkey !== 'undefined') {\n\t      var inclusiveEnd = opts.inclusive_end !== false;\n\t      if (opts.descending) {\n\t        inclusiveEnd = !inclusiveEnd;\n\t      }\n\t\n\t      viewOpts.endkey = toIndexableString(\n\t        inclusiveEnd ? [opts.endkey, {}] : [opts.endkey]);\n\t    }\n\t    if (typeof opts.key !== 'undefined') {\n\t      var keyStart = toIndexableString([opts.key]);\n\t      var keyEnd = toIndexableString([opts.key, {}]);\n\t      if (viewOpts.descending) {\n\t        viewOpts.endkey = keyStart;\n\t        viewOpts.startkey = keyEnd;\n\t      } else {\n\t        viewOpts.startkey = keyStart;\n\t        viewOpts.endkey = keyEnd;\n\t      }\n\t    }\n\t    if (!shouldReduce) {\n\t      if (typeof opts.limit === 'number') {\n\t        viewOpts.limit = opts.limit;\n\t      }\n\t      viewOpts.skip = skip;\n\t    }\n\t    return fetchFromView(viewOpts).then(onMapResultsReady);\n\t  }\n\t}\n\t\n\tfunction httpViewCleanup(db) {\n\t  return db.request({\n\t    method: 'POST',\n\t    url: '_view_cleanup'\n\t  });\n\t}\n\t\n\tfunction localViewCleanup(db) {\n\t  return db.get('_local/mrviews').then(function (metaDoc) {\n\t    var docsToViews = {};\n\t    Object.keys(metaDoc.views).forEach(function (fullViewName) {\n\t      var parts = parseViewName(fullViewName);\n\t      var designDocName = '_design/' + parts[0];\n\t      var viewName = parts[1];\n\t      docsToViews[designDocName] = docsToViews[designDocName] || {};\n\t      docsToViews[designDocName][viewName] = true;\n\t    });\n\t    var opts = {\n\t      keys : Object.keys(docsToViews),\n\t      include_docs : true\n\t    };\n\t    return db.allDocs(opts).then(function (res) {\n\t      var viewsToStatus = {};\n\t      res.rows.forEach(function (row) {\n\t        var ddocName = row.key.substring(8);\n\t        Object.keys(docsToViews[row.key]).forEach(function (viewName) {\n\t          var fullViewName = ddocName + '/' + viewName;\n\t          /* istanbul ignore if */\n\t          if (!metaDoc.views[fullViewName]) {\n\t            // new format, without slashes, to support PouchDB 2.2.0\n\t            // migration test in pouchdb's browser.migration.js verifies this\n\t            fullViewName = viewName;\n\t          }\n\t          var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n\t          // design doc deleted, or view function nonexistent\n\t          var statusIsGood = row.doc && row.doc.views &&\n\t            row.doc.views[viewName];\n\t          viewDBNames.forEach(function (viewDBName) {\n\t            viewsToStatus[viewDBName] =\n\t              viewsToStatus[viewDBName] || statusIsGood;\n\t          });\n\t        });\n\t      });\n\t      var dbsToDelete = Object.keys(viewsToStatus).filter(\n\t        function (viewDBName) { return !viewsToStatus[viewDBName]; });\n\t      var destroyPromises = dbsToDelete.map(function (viewDBName) {\n\t        return sequentialize(getQueue(viewDBName), function () {\n\t          return new db.constructor(viewDBName, db.__opts).destroy();\n\t        })();\n\t      });\n\t      return PouchPromise.all(destroyPromises).then(function () {\n\t        return {ok: true};\n\t      });\n\t    });\n\t  }, defaultsTo({ok: true}));\n\t}\n\t\n\tvar viewCleanup = callbackify(function () {\n\t  var db = this;\n\t  if (db.type() === 'http') {\n\t    return httpViewCleanup(db);\n\t  }\n\t  /* istanbul ignore next */\n\t  if (typeof db._viewCleanup === 'function') {\n\t    return customViewCleanup(db);\n\t  }\n\t  return localViewCleanup(db);\n\t});\n\t\n\tfunction queryPromised(db, fun, opts) {\n\t  if (db.type() === 'http') {\n\t    return httpQuery(db, fun, opts);\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  if (typeof db._query === 'function') {\n\t    return customQuery(db, fun, opts);\n\t  }\n\t\n\t  if (typeof fun !== 'string') {\n\t    // temp_view\n\t    checkQueryParseError(opts, fun);\n\t\n\t    var createViewOpts = {\n\t      db : db,\n\t      viewName : 'temp_view/temp_view',\n\t      map : fun.map,\n\t      reduce : fun.reduce,\n\t      temporary : true\n\t    };\n\t    tempViewQueue.add(function () {\n\t      return createView(createViewOpts).then(function (view) {\n\t        function cleanup() {\n\t          return view.db.destroy();\n\t        }\n\t        return fin(updateView(view).then(function () {\n\t          return queryView(view, opts);\n\t        }), cleanup);\n\t      });\n\t    });\n\t    return tempViewQueue.finish();\n\t  } else {\n\t    // persistent view\n\t    var fullViewName = fun;\n\t    var parts = parseViewName(fullViewName);\n\t    var designDocName = parts[0];\n\t    var viewName = parts[1];\n\t    return db.get('_design/' + designDocName).then(function (doc) {\n\t      var fun = doc.views && doc.views[viewName];\n\t\n\t      if (!fun || typeof fun.map !== 'string') {\n\t        throw new NotFoundError('ddoc ' + designDocName +\n\t        ' has no view named ' + viewName);\n\t      }\n\t      checkQueryParseError(opts, fun);\n\t\n\t      var createViewOpts = {\n\t        db : db,\n\t        viewName : fullViewName,\n\t        map : fun.map,\n\t        reduce : fun.reduce\n\t      };\n\t      return createView(createViewOpts).then(function (view) {\n\t        if (opts.stale === 'ok' || opts.stale === 'update_after') {\n\t          if (opts.stale === 'update_after') {\n\t            immediate(function () {\n\t              updateView(view);\n\t            });\n\t          }\n\t          return queryView(view, opts);\n\t        } else { // stale not ok\n\t          return updateView(view).then(function () {\n\t            return queryView(view, opts);\n\t          });\n\t        }\n\t      });\n\t    });\n\t  }\n\t}\n\t\n\tvar query = function (fun, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  opts = opts ? coerceOptions(opts) : {};\n\t\n\t  if (typeof fun === 'function') {\n\t    fun = {map : fun};\n\t  }\n\t\n\t  var db = this;\n\t  var promise = PouchPromise.resolve().then(function () {\n\t    return queryPromised(db, fun, opts);\n\t  });\n\t  promisedCallback(promise, callback);\n\t  return promise;\n\t};\n\t\n\t\n\tvar mapreduce = {\n\t  query: query,\n\t  viewCleanup: viewCleanup\n\t};\n\t\n\tfunction isGenOne$1(rev) {\n\t  return /^1-/.test(rev);\n\t}\n\t\n\tfunction fileHasChanged(localDoc, remoteDoc, filename) {\n\t  return !localDoc._attachments ||\n\t         !localDoc._attachments[filename] ||\n\t         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n\t}\n\t\n\tfunction getDocAttachments(db, doc) {\n\t  var filenames = Object.keys(doc._attachments);\n\t  return PouchPromise.all(filenames.map(function (filename) {\n\t    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n\t  }));\n\t}\n\t\n\tfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n\t  var doCheckForLocalAttachments = src.type() === 'http' && target.type() !== 'http';\n\t  var filenames = Object.keys(doc._attachments);\n\t\n\t  if (!doCheckForLocalAttachments) {\n\t    return getDocAttachments(src, doc);\n\t  }\n\t\n\t  return target.get(doc._id).then(function (localDoc) {\n\t    return PouchPromise.all(filenames.map(function (filename) {\n\t      if (fileHasChanged(localDoc, doc, filename)) {\n\t        return src.getAttachment(doc._id, filename);\n\t      }\n\t\n\t      return target.getAttachment(localDoc._id, filename);\n\t    }));\n\t  }).catch(function (error) {\n\t    /* istanbul ignore if */\n\t    if (error.status !== 404) {\n\t      throw error;\n\t    }\n\t\n\t    return getDocAttachments(src, doc);\n\t  });\n\t}\n\t\n\tfunction createBulkGetOpts(diffs) {\n\t  var requests = [];\n\t  Object.keys(diffs).forEach(function (id) {\n\t    var missingRevs = diffs[id].missing;\n\t    missingRevs.forEach(function (missingRev) {\n\t      requests.push({\n\t        id: id,\n\t        rev: missingRev\n\t      });\n\t    });\n\t  });\n\t\n\t  return {\n\t    docs: requests,\n\t    revs: true,\n\t    latest: true\n\t  };\n\t}\n\t\n\t//\n\t// Fetch all the documents from the src as described in the \"diffs\",\n\t// which is a mapping of docs IDs to revisions. If the state ever\n\t// changes to \"cancelled\", then the returned promise will be rejected.\n\t// Else it will be resolved with a list of fetched documents.\n\t//\n\tfunction getDocs(src, target, diffs, state) {\n\t  diffs = clone(diffs); // we do not need to modify this\n\t\n\t  var resultDocs = [],\n\t      ok = true;\n\t\n\t  function getAllDocs() {\n\t\n\t    var bulkGetOpts = createBulkGetOpts(diffs);\n\t\n\t    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n\t      return;\n\t    }\n\t\n\t    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n\t      /* istanbul ignore if */\n\t      if (state.cancelled) {\n\t        throw new Error('cancelled');\n\t      }\n\t      return PouchPromise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n\t        return PouchPromise.all(bulkGetInfo.docs.map(function (doc) {\n\t          var remoteDoc = doc.ok;\n\t\n\t          if (doc.error) {\n\t            // when AUTO_COMPACTION is set, docs can be returned which look\n\t            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n\t            ok = false;\n\t          }\n\t\n\t          if (!remoteDoc || !remoteDoc._attachments) {\n\t            return remoteDoc;\n\t          }\n\t\n\t          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc).then(function (attachments) {\n\t            var filenames = Object.keys(remoteDoc._attachments);\n\t            attachments.forEach(function (attachment, i) {\n\t              var att = remoteDoc._attachments[filenames[i]];\n\t              delete att.stub;\n\t              delete att.length;\n\t              att.data = attachment;\n\t            });\n\t\n\t            return remoteDoc;\n\t          });\n\t        }));\n\t      }))\n\t\n\t      .then(function (results) {\n\t        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n\t      });\n\t    });\n\t  }\n\t\n\t  function hasAttachments(doc) {\n\t    return doc._attachments && Object.keys(doc._attachments).length > 0;\n\t  }\n\t\n\t  function hasConflicts(doc) {\n\t    return doc._conflicts && doc._conflicts.length > 0;\n\t  }\n\t\n\t  function fetchRevisionOneDocs(ids) {\n\t    // Optimization: fetch gen-1 docs and attachments in\n\t    // a single request using _all_docs\n\t    return src.allDocs({\n\t      keys: ids,\n\t      include_docs: true,\n\t      conflicts: true\n\t    }).then(function (res) {\n\t      if (state.cancelled) {\n\t        throw new Error('cancelled');\n\t      }\n\t      res.rows.forEach(function (row) {\n\t        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n\t            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n\t          // if any of these conditions apply, we need to fetch using get()\n\t          return;\n\t        }\n\t\n\t        // strip _conflicts array to appease CSG (#5793)\n\t        /* istanbul ignore if */\n\t        if (row.doc._conflicts) {\n\t          delete row.doc._conflicts;\n\t        }\n\t\n\t        // the doc we got back from allDocs() is sufficient\n\t        resultDocs.push(row.doc);\n\t        delete diffs[row.id];\n\t      });\n\t    });\n\t  }\n\t\n\t  function getRevisionOneDocs() {\n\t    // filter out the generation 1 docs and get them\n\t    // leaving the non-generation one docs to be got otherwise\n\t    var ids = Object.keys(diffs).filter(function (id) {\n\t      var missing = diffs[id].missing;\n\t      return missing.length === 1 && isGenOne$1(missing[0]);\n\t    });\n\t    if (ids.length > 0) {\n\t      return fetchRevisionOneDocs(ids);\n\t    }\n\t  }\n\t\n\t  function returnResult() {\n\t    return { ok:ok, docs:resultDocs };\n\t  }\n\t\n\t  return PouchPromise.resolve()\n\t    .then(getRevisionOneDocs)\n\t    .then(getAllDocs)\n\t    .then(returnResult);\n\t}\n\t\n\tvar CHECKPOINT_VERSION = 1;\n\tvar REPLICATOR = \"pouchdb\";\n\t// This is an arbitrary number to limit the\n\t// amount of replication history we save in the checkpoint.\n\t// If we save too much, the checkpoing docs will become very big,\n\t// if we save fewer, we'll run a greater risk of having to\n\t// read all the changes from 0 when checkpoint PUTs fail\n\t// CouchDB 2.0 has a more involved history pruning,\n\t// but let's go for the simple version for now.\n\tvar CHECKPOINT_HISTORY_SIZE = 5;\n\tvar LOWEST_SEQ = 0;\n\t\n\tfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n\t  return db.get(id).catch(function (err) {\n\t    if (err.status === 404) {\n\t      if (db.type() === 'http') {\n\t        explainError(\n\t          404, 'PouchDB is just checking if a remote checkpoint exists.'\n\t        );\n\t      }\n\t      return {\n\t        session_id: session,\n\t        _id: id,\n\t        history: [],\n\t        replicator: REPLICATOR,\n\t        version: CHECKPOINT_VERSION\n\t      };\n\t    }\n\t    throw err;\n\t  }).then(function (doc) {\n\t    if (returnValue.cancelled) {\n\t      return;\n\t    }\n\t\n\t    // if the checkpoint has not changed, do not update\n\t    if (doc.last_seq === checkpoint) {\n\t      return;\n\t    }\n\t\n\t    // Filter out current entry for this replication\n\t    doc.history = (doc.history || []).filter(function (item) {\n\t      return item.session_id !== session;\n\t    });\n\t\n\t    // Add the latest checkpoint to history\n\t    doc.history.unshift({\n\t      last_seq: checkpoint,\n\t      session_id: session\n\t    });\n\t\n\t    // Just take the last pieces in history, to\n\t    // avoid really big checkpoint docs.\n\t    // see comment on history size above\n\t    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\t\n\t    doc.version = CHECKPOINT_VERSION;\n\t    doc.replicator = REPLICATOR;\n\t\n\t    doc.session_id = session;\n\t    doc.last_seq = checkpoint;\n\t\n\t    return db.put(doc).catch(function (err) {\n\t      if (err.status === 409) {\n\t        // retry; someone is trying to write a checkpoint simultaneously\n\t        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n\t      }\n\t      throw err;\n\t    });\n\t  });\n\t}\n\t\n\tfunction Checkpointer(src, target, id, returnValue) {\n\t  this.src = src;\n\t  this.target = target;\n\t  this.id = id;\n\t  this.returnValue = returnValue;\n\t}\n\t\n\tCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n\t  var self = this;\n\t  return this.updateTarget(checkpoint, session).then(function () {\n\t    return self.updateSource(checkpoint, session);\n\t  });\n\t};\n\t\n\tCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n\t  return updateCheckpoint(this.target, this.id, checkpoint,\n\t    session, this.returnValue);\n\t};\n\t\n\tCheckpointer.prototype.updateSource = function (checkpoint, session) {\n\t  var self = this;\n\t  if (this.readOnlySource) {\n\t    return PouchPromise.resolve(true);\n\t  }\n\t  return updateCheckpoint(this.src, this.id, checkpoint,\n\t    session, this.returnValue)\n\t    .catch(function (err) {\n\t      if (isForbiddenError(err)) {\n\t        self.readOnlySource = true;\n\t        return true;\n\t      }\n\t      throw err;\n\t    });\n\t};\n\t\n\tvar comparisons = {\n\t  \"undefined\": function (targetDoc, sourceDoc) {\n\t    // This is the previous comparison function\n\t    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n\t      return sourceDoc.last_seq;\n\t    }\n\t    /* istanbul ignore next */\n\t    return 0;\n\t  },\n\t  \"1\": function (targetDoc, sourceDoc) {\n\t    // This is the comparison function ported from CouchDB\n\t    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n\t  }\n\t};\n\t\n\tCheckpointer.prototype.getCheckpoint = function () {\n\t  var self = this;\n\t  return self.target.get(self.id).then(function (targetDoc) {\n\t    if (self.readOnlySource) {\n\t      return PouchPromise.resolve(targetDoc.last_seq);\n\t    }\n\t\n\t    return self.src.get(self.id).then(function (sourceDoc) {\n\t      // Since we can't migrate an old version doc to a new one\n\t      // (no session id), we just go with the lowest seq in this case\n\t      /* istanbul ignore if */\n\t      if (targetDoc.version !== sourceDoc.version) {\n\t        return LOWEST_SEQ;\n\t      }\n\t\n\t      var version;\n\t      if (targetDoc.version) {\n\t        version = targetDoc.version.toString();\n\t      } else {\n\t        version = \"undefined\";\n\t      }\n\t\n\t      if (version in comparisons) {\n\t        return comparisons[version](targetDoc, sourceDoc);\n\t      }\n\t      /* istanbul ignore next */\n\t      return LOWEST_SEQ;\n\t    }, function (err) {\n\t      if (err.status === 404 && targetDoc.last_seq) {\n\t        return self.src.put({\n\t          _id: self.id,\n\t          last_seq: LOWEST_SEQ\n\t        }).then(function () {\n\t          return LOWEST_SEQ;\n\t        }, function (err) {\n\t          if (isForbiddenError(err)) {\n\t            self.readOnlySource = true;\n\t            return targetDoc.last_seq;\n\t          }\n\t          /* istanbul ignore next */\n\t          return LOWEST_SEQ;\n\t        });\n\t      }\n\t      throw err;\n\t    });\n\t  }).catch(function (err) {\n\t    if (err.status !== 404) {\n\t      throw err;\n\t    }\n\t    return LOWEST_SEQ;\n\t  });\n\t};\n\t// This checkpoint comparison is ported from CouchDBs source\n\t// they come from here:\n\t// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\t\n\tfunction compareReplicationLogs(srcDoc, tgtDoc) {\n\t  if (srcDoc.session_id === tgtDoc.session_id) {\n\t    return {\n\t      last_seq: srcDoc.last_seq,\n\t      history: srcDoc.history\n\t    };\n\t  }\n\t\n\t  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n\t}\n\t\n\tfunction compareReplicationHistory(sourceHistory, targetHistory) {\n\t  // the erlang loop via function arguments is not so easy to repeat in JS\n\t  // therefore, doing this as recursion\n\t  var S = sourceHistory[0];\n\t  var sourceRest = sourceHistory.slice(1);\n\t  var T = targetHistory[0];\n\t  var targetRest = targetHistory.slice(1);\n\t\n\t  if (!S || targetHistory.length === 0) {\n\t    return {\n\t      last_seq: LOWEST_SEQ,\n\t      history: []\n\t    };\n\t  }\n\t\n\t  var sourceId = S.session_id;\n\t  /* istanbul ignore if */\n\t  if (hasSessionId(sourceId, targetHistory)) {\n\t    return {\n\t      last_seq: S.last_seq,\n\t      history: sourceHistory\n\t    };\n\t  }\n\t\n\t  var targetId = T.session_id;\n\t  if (hasSessionId(targetId, sourceRest)) {\n\t    return {\n\t      last_seq: T.last_seq,\n\t      history: targetRest\n\t    };\n\t  }\n\t\n\t  return compareReplicationHistory(sourceRest, targetRest);\n\t}\n\t\n\tfunction hasSessionId(sessionId, history) {\n\t  var props = history[0];\n\t  var rest = history.slice(1);\n\t\n\t  if (!sessionId || history.length === 0) {\n\t    return false;\n\t  }\n\t\n\t  if (sessionId === props.session_id) {\n\t    return true;\n\t  }\n\t\n\t  return hasSessionId(sessionId, rest);\n\t}\n\t\n\tfunction isForbiddenError(err) {\n\t  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n\t}\n\t\n\tvar STARTING_BACK_OFF = 0;\n\t\n\tfunction backOff(opts, returnValue, error, callback) {\n\t  if (opts.retry === false) {\n\t    returnValue.emit('error', error);\n\t    returnValue.removeAllListeners();\n\t    return;\n\t  }\n\t  if (typeof opts.back_off_function !== 'function') {\n\t    opts.back_off_function = defaultBackOff;\n\t  }\n\t  returnValue.emit('requestError', error);\n\t  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n\t    returnValue.emit('paused', error);\n\t    returnValue.state = 'stopped';\n\t    var backOffSet = function backoffTimeSet() {\n\t      opts.current_back_off = STARTING_BACK_OFF;\n\t    };\n\t    var removeBackOffSetter = function removeBackOffTimeSet() {\n\t      returnValue.removeListener('active', backOffSet);\n\t    };\n\t    returnValue.once('paused', removeBackOffSetter);\n\t    returnValue.once('active', backOffSet);\n\t  }\n\t\n\t  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n\t  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n\t  setTimeout(callback, opts.current_back_off);\n\t}\n\t\n\tfunction sortObjectPropertiesByKey(queryParams) {\n\t  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n\t    result[key] = queryParams[key];\n\t    return result;\n\t  }, {});\n\t}\n\t\n\t// Generate a unique id particular to this replication.\n\t// Not guaranteed to align perfectly with CouchDB's rep ids.\n\tfunction generateReplicationId(src, target, opts) {\n\t  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n\t  var filterFun = opts.filter ? opts.filter.toString() : '';\n\t  var queryParams = '';\n\t  var filterViewName =  '';\n\t\n\t  if (opts.filter && opts.query_params) {\n\t    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n\t  }\n\t\n\t  if (opts.filter && opts.filter === '_view') {\n\t    filterViewName = opts.view.toString();\n\t  }\n\t\n\t  return PouchPromise.all([src.id(), target.id()]).then(function (res) {\n\t    var queryData = res[0] + res[1] + filterFun + filterViewName +\n\t      queryParams + docIds;\n\t    return new PouchPromise(function (resolve) {\n\t      binaryMd5(queryData, resolve);\n\t    });\n\t  }).then(function (md5sum) {\n\t    // can't use straight-up md5 alphabet, because\n\t    // the char '/' is interpreted as being for attachments,\n\t    // and + is also not url-safe\n\t    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n\t    return '_local/' + md5sum;\n\t  });\n\t}\n\t\n\tfunction replicate$1(src, target, opts, returnValue, result) {\n\t  var batches = [];               // list of batches to be processed\n\t  var currentBatch;               // the batch currently being processed\n\t  var pendingBatch = {\n\t    seq: 0,\n\t    changes: [],\n\t    docs: []\n\t  }; // next batch, not yet ready to be processed\n\t  var writingCheckpoint = false;  // true while checkpoint is being written\n\t  var changesCompleted = false;   // true when all changes received\n\t  var replicationCompleted = false; // true when replication has completed\n\t  var last_seq = 0;\n\t  var continuous = opts.continuous || opts.live || false;\n\t  var batch_size = opts.batch_size || 100;\n\t  var batches_limit = opts.batches_limit || 10;\n\t  var changesPending = false;     // true while src.changes is running\n\t  var doc_ids = opts.doc_ids;\n\t  var repId;\n\t  var checkpointer;\n\t  var changedDocs = [];\n\t  // Like couchdb, every replication gets a unique session id\n\t  var session = uuid();\n\t\n\t  result = result || {\n\t    ok: true,\n\t    start_time: new Date(),\n\t    docs_read: 0,\n\t    docs_written: 0,\n\t    doc_write_failures: 0,\n\t    errors: []\n\t  };\n\t\n\t  var changesOpts = {};\n\t  returnValue.ready(src, target);\n\t\n\t  function initCheckpointer() {\n\t    if (checkpointer) {\n\t      return PouchPromise.resolve();\n\t    }\n\t    return generateReplicationId(src, target, opts).then(function (res) {\n\t      repId = res;\n\t      checkpointer = new Checkpointer(src, target, repId, returnValue);\n\t    });\n\t  }\n\t\n\t  function writeDocs() {\n\t    changedDocs = [];\n\t\n\t    if (currentBatch.docs.length === 0) {\n\t      return;\n\t    }\n\t    var docs = currentBatch.docs;\n\t    var bulkOpts = {timeout: opts.timeout};\n\t    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t\n\t      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n\t      // (id -> error), and check for errors while iterating over `docs`\n\t      var errorsById = Object.create(null);\n\t      res.forEach(function (res) {\n\t        if (res.error) {\n\t          errorsById[res.id] = res;\n\t        }\n\t      });\n\t\n\t      var errorsNo = Object.keys(errorsById).length;\n\t      result.doc_write_failures += errorsNo;\n\t      result.docs_written += docs.length - errorsNo;\n\t\n\t      docs.forEach(function (doc) {\n\t        var error = errorsById[doc._id];\n\t        if (error) {\n\t          result.errors.push(error);\n\t          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n\t            returnValue.emit('denied', clone(error));\n\t          } else {\n\t            throw error;\n\t          }\n\t        } else {\n\t          changedDocs.push(doc);\n\t        }\n\t      });\n\t\n\t    }, function (err) {\n\t      result.doc_write_failures += docs.length;\n\t      throw err;\n\t    });\n\t  }\n\t\n\t  function finishBatch() {\n\t    if (currentBatch.error) {\n\t      throw new Error('There was a problem getting docs.');\n\t    }\n\t    result.last_seq = last_seq = currentBatch.seq;\n\t    var outResult = clone(result);\n\t    if (changedDocs.length) {\n\t      outResult.docs = changedDocs;\n\t      returnValue.emit('change', outResult);\n\t    }\n\t    writingCheckpoint = true;\n\t    return checkpointer.writeCheckpoint(currentBatch.seq,\n\t        session).then(function () {\n\t      writingCheckpoint = false;\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t      currentBatch = undefined;\n\t      getChanges();\n\t    }).catch(function (err) {\n\t      onCheckpointError(err);\n\t      throw err;\n\t    });\n\t  }\n\t\n\t  function getDiffs() {\n\t    var diff = {};\n\t    currentBatch.changes.forEach(function (change) {\n\t      // Couchbase Sync Gateway emits these, but we can ignore them\n\t      /* istanbul ignore if */\n\t      if (change.id === \"_user/\") {\n\t        return;\n\t      }\n\t      diff[change.id] = change.changes.map(function (x) {\n\t        return x.rev;\n\t      });\n\t    });\n\t    return target.revsDiff(diff).then(function (diffs) {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t      // currentBatch.diffs elements are deleted as the documents are written\n\t      currentBatch.diffs = diffs;\n\t    });\n\t  }\n\t\n\t  function getBatchDocs() {\n\t    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n\t      currentBatch.error = !got.ok;\n\t      got.docs.forEach(function (doc) {\n\t        delete currentBatch.diffs[doc._id];\n\t        result.docs_read++;\n\t        currentBatch.docs.push(doc);\n\t      });\n\t    });\n\t  }\n\t\n\t  function startNextBatch() {\n\t    if (returnValue.cancelled || currentBatch) {\n\t      return;\n\t    }\n\t    if (batches.length === 0) {\n\t      processPendingBatch(true);\n\t      return;\n\t    }\n\t    currentBatch = batches.shift();\n\t    getDiffs()\n\t      .then(getBatchDocs)\n\t      .then(writeDocs)\n\t      .then(finishBatch)\n\t      .then(startNextBatch)\n\t      .catch(function (err) {\n\t        abortReplication('batch processing terminated with error', err);\n\t      });\n\t  }\n\t\n\t\n\t  function processPendingBatch(immediate) {\n\t    if (pendingBatch.changes.length === 0) {\n\t      if (batches.length === 0 && !currentBatch) {\n\t        if ((continuous && changesOpts.live) || changesCompleted) {\n\t          returnValue.state = 'pending';\n\t          returnValue.emit('paused');\n\t        }\n\t        if (changesCompleted) {\n\t          completeReplication();\n\t        }\n\t      }\n\t      return;\n\t    }\n\t    if (\n\t      immediate ||\n\t      changesCompleted ||\n\t      pendingBatch.changes.length >= batch_size\n\t    ) {\n\t      batches.push(pendingBatch);\n\t      pendingBatch = {\n\t        seq: 0,\n\t        changes: [],\n\t        docs: []\n\t      };\n\t      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n\t        returnValue.state = 'active';\n\t        returnValue.emit('active');\n\t      }\n\t      startNextBatch();\n\t    }\n\t  }\n\t\n\t\n\t  function abortReplication(reason, err) {\n\t    if (replicationCompleted) {\n\t      return;\n\t    }\n\t    if (!err.message) {\n\t      err.message = reason;\n\t    }\n\t    result.ok = false;\n\t    result.status = 'aborting';\n\t    batches = [];\n\t    pendingBatch = {\n\t      seq: 0,\n\t      changes: [],\n\t      docs: []\n\t    };\n\t    completeReplication(err);\n\t  }\n\t\n\t\n\t  function completeReplication(fatalError) {\n\t    if (replicationCompleted) {\n\t      return;\n\t    }\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      result.status = 'cancelled';\n\t      if (writingCheckpoint) {\n\t        return;\n\t      }\n\t    }\n\t    result.status = result.status || 'complete';\n\t    result.end_time = new Date();\n\t    result.last_seq = last_seq;\n\t    replicationCompleted = true;\n\t\n\t    if (fatalError) {\n\t      fatalError.result = result;\n\t\n\t      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n\t        returnValue.emit('error', fatalError);\n\t        returnValue.removeAllListeners();\n\t      } else {\n\t        backOff(opts, returnValue, fatalError, function () {\n\t          replicate$1(src, target, opts, returnValue);\n\t        });\n\t      }\n\t    } else {\n\t      returnValue.emit('complete', result);\n\t      returnValue.removeAllListeners();\n\t    }\n\t  }\n\t\n\t\n\t  function onChange(change) {\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t    var filter = filterChange(opts)(change);\n\t    if (!filter) {\n\t      return;\n\t    }\n\t    pendingBatch.seq = change.seq;\n\t    pendingBatch.changes.push(change);\n\t    processPendingBatch(batches.length === 0 && changesOpts.live);\n\t  }\n\t\n\t\n\t  function onChangesComplete(changes) {\n\t    changesPending = false;\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t\n\t    // if no results were returned then we're done,\n\t    // else fetch more\n\t    if (changes.results.length > 0) {\n\t      changesOpts.since = changes.last_seq;\n\t      getChanges();\n\t      processPendingBatch(true);\n\t    } else {\n\t\n\t      var complete = function () {\n\t        if (continuous) {\n\t          changesOpts.live = true;\n\t          getChanges();\n\t        } else {\n\t          changesCompleted = true;\n\t        }\n\t        processPendingBatch(true);\n\t      };\n\t\n\t      // update the checkpoint so we start from the right seq next time\n\t      if (!currentBatch && changes.results.length === 0) {\n\t        writingCheckpoint = true;\n\t        checkpointer.writeCheckpoint(changes.last_seq,\n\t            session).then(function () {\n\t          writingCheckpoint = false;\n\t          result.last_seq = last_seq = changes.last_seq;\n\t          complete();\n\t        })\n\t        .catch(onCheckpointError);\n\t      } else {\n\t        complete();\n\t      }\n\t    }\n\t  }\n\t\n\t\n\t  function onChangesError(err) {\n\t    changesPending = false;\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t    abortReplication('changes rejected', err);\n\t  }\n\t\n\t\n\t  function getChanges() {\n\t    if (!(\n\t      !changesPending &&\n\t      !changesCompleted &&\n\t      batches.length < batches_limit\n\t      )) {\n\t      return;\n\t    }\n\t    changesPending = true;\n\t    function abortChanges() {\n\t      changes.cancel();\n\t    }\n\t    function removeListener() {\n\t      returnValue.removeListener('cancel', abortChanges);\n\t    }\n\t\n\t    if (returnValue._changes) { // remove old changes() and listeners\n\t      returnValue.removeListener('cancel', returnValue._abortChanges);\n\t      returnValue._changes.cancel();\n\t    }\n\t    returnValue.once('cancel', abortChanges);\n\t\n\t    var changes = src.changes(changesOpts)\n\t      .on('change', onChange);\n\t    changes.then(removeListener, removeListener);\n\t    changes.then(onChangesComplete)\n\t      .catch(onChangesError);\n\t\n\t    if (opts.retry) {\n\t      // save for later so we can cancel if necessary\n\t      returnValue._changes = changes;\n\t      returnValue._abortChanges = abortChanges;\n\t    }\n\t  }\n\t\n\t\n\t  function startChanges() {\n\t    initCheckpointer().then(function () {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        return;\n\t      }\n\t      return checkpointer.getCheckpoint().then(function (checkpoint) {\n\t        last_seq = checkpoint;\n\t        changesOpts = {\n\t          since: last_seq,\n\t          limit: batch_size,\n\t          batch_size: batch_size,\n\t          style: 'all_docs',\n\t          doc_ids: doc_ids,\n\t          return_docs: true // required so we know when we're done\n\t        };\n\t        if (opts.filter) {\n\t          if (typeof opts.filter !== 'string') {\n\t            // required for the client-side filter in onChange\n\t            changesOpts.include_docs = true;\n\t          } else { // ddoc filter\n\t            changesOpts.filter = opts.filter;\n\t          }\n\t        }\n\t        if ('heartbeat' in opts) {\n\t          changesOpts.heartbeat = opts.heartbeat;\n\t        }\n\t        if ('timeout' in opts) {\n\t          changesOpts.timeout = opts.timeout;\n\t        }\n\t        if (opts.query_params) {\n\t          changesOpts.query_params = opts.query_params;\n\t        }\n\t        if (opts.view) {\n\t          changesOpts.view = opts.view;\n\t        }\n\t        getChanges();\n\t      });\n\t    }).catch(function (err) {\n\t      abortReplication('getCheckpoint rejected with ', err);\n\t    });\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  function onCheckpointError(err) {\n\t    writingCheckpoint = false;\n\t    abortReplication('writeCheckpoint completed with error', err);\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (returnValue.cancelled) { // cancelled immediately\n\t    completeReplication();\n\t    return;\n\t  }\n\t\n\t  if (!returnValue._addedListeners) {\n\t    returnValue.once('cancel', completeReplication);\n\t\n\t    if (typeof opts.complete === 'function') {\n\t      returnValue.once('error', opts.complete);\n\t      returnValue.once('complete', function (result) {\n\t        opts.complete(null, result);\n\t      });\n\t    }\n\t    returnValue._addedListeners = true;\n\t  }\n\t\n\t  if (typeof opts.since === 'undefined') {\n\t    startChanges();\n\t  } else {\n\t    initCheckpointer().then(function () {\n\t      writingCheckpoint = true;\n\t      return checkpointer.writeCheckpoint(opts.since, session);\n\t    }).then(function () {\n\t      writingCheckpoint = false;\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        return;\n\t      }\n\t      last_seq = opts.since;\n\t      startChanges();\n\t    }).catch(onCheckpointError);\n\t  }\n\t}\n\t\n\t// We create a basic promise so the caller can cancel the replication possibly\n\t// before we have actually started listening to changes etc\n\tinherits(Replication, events.EventEmitter);\n\tfunction Replication() {\n\t  events.EventEmitter.call(this);\n\t  this.cancelled = false;\n\t  this.state = 'pending';\n\t  var self = this;\n\t  var promise = new PouchPromise(function (fulfill, reject) {\n\t    self.once('complete', fulfill);\n\t    self.once('error', reject);\n\t  });\n\t  self.then = function (resolve, reject) {\n\t    return promise.then(resolve, reject);\n\t  };\n\t  self.catch = function (reject) {\n\t    return promise.catch(reject);\n\t  };\n\t  // As we allow error handling via \"error\" event as well,\n\t  // put a stub in here so that rejecting never throws UnhandledError.\n\t  self.catch(function () {});\n\t}\n\t\n\tReplication.prototype.cancel = function () {\n\t  this.cancelled = true;\n\t  this.state = 'cancelled';\n\t  this.emit('cancel');\n\t};\n\t\n\tReplication.prototype.ready = function (src, target) {\n\t  var self = this;\n\t  if (self._readyCalled) {\n\t    return;\n\t  }\n\t  self._readyCalled = true;\n\t\n\t  function onDestroy() {\n\t    self.cancel();\n\t  }\n\t  src.once('destroyed', onDestroy);\n\t  target.once('destroyed', onDestroy);\n\t  function cleanup() {\n\t    src.removeListener('destroyed', onDestroy);\n\t    target.removeListener('destroyed', onDestroy);\n\t  }\n\t  self.once('complete', cleanup);\n\t};\n\t\n\tfunction toPouch(db, opts) {\n\t  var PouchConstructor = opts.PouchConstructor;\n\t  if (typeof db === 'string') {\n\t    return new PouchConstructor(db, opts);\n\t  } else {\n\t    return db;\n\t  }\n\t}\n\t\n\tfunction replicate(src, target, opts, callback) {\n\t\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof opts === 'undefined') {\n\t    opts = {};\n\t  }\n\t\n\t  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n\t    throw createError(BAD_REQUEST,\n\t                       \"`doc_ids` filter parameter is not a list.\");\n\t  }\n\t\n\t  opts.complete = callback;\n\t  opts = clone(opts);\n\t  opts.continuous = opts.continuous || opts.live;\n\t  opts.retry = ('retry' in opts) ? opts.retry : false;\n\t  /*jshint validthis:true */\n\t  opts.PouchConstructor = opts.PouchConstructor || this;\n\t  var replicateRet = new Replication(opts);\n\t  var srcPouch = toPouch(src, opts);\n\t  var targetPouch = toPouch(target, opts);\n\t  replicate$1(srcPouch, targetPouch, opts, replicateRet);\n\t  return replicateRet;\n\t}\n\t\n\tinherits(Sync, events.EventEmitter);\n\tfunction sync(src, target, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof opts === 'undefined') {\n\t    opts = {};\n\t  }\n\t  opts = clone(opts);\n\t  /*jshint validthis:true */\n\t  opts.PouchConstructor = opts.PouchConstructor || this;\n\t  src = toPouch(src, opts);\n\t  target = toPouch(target, opts);\n\t  return new Sync(src, target, opts, callback);\n\t}\n\t\n\tfunction Sync(src, target, opts, callback) {\n\t  var self = this;\n\t  this.canceled = false;\n\t\n\t  var optsPush = opts.push ? extend$1({}, opts, opts.push) : opts;\n\t  var optsPull = opts.pull ? extend$1({}, opts, opts.pull) : opts;\n\t\n\t  this.push = replicate(src, target, optsPush);\n\t  this.pull = replicate(target, src, optsPull);\n\t\n\t  this.pushPaused = true;\n\t  this.pullPaused = true;\n\t\n\t  function pullChange(change) {\n\t    self.emit('change', {\n\t      direction: 'pull',\n\t      change: change\n\t    });\n\t  }\n\t  function pushChange(change) {\n\t    self.emit('change', {\n\t      direction: 'push',\n\t      change: change\n\t    });\n\t  }\n\t  function pushDenied(doc) {\n\t    self.emit('denied', {\n\t      direction: 'push',\n\t      doc: doc\n\t    });\n\t  }\n\t  function pullDenied(doc) {\n\t    self.emit('denied', {\n\t      direction: 'pull',\n\t      doc: doc\n\t    });\n\t  }\n\t  function pushPaused() {\n\t    self.pushPaused = true;\n\t    /* istanbul ignore if */\n\t    if (self.pullPaused) {\n\t      self.emit('paused');\n\t    }\n\t  }\n\t  function pullPaused() {\n\t    self.pullPaused = true;\n\t    /* istanbul ignore if */\n\t    if (self.pushPaused) {\n\t      self.emit('paused');\n\t    }\n\t  }\n\t  function pushActive() {\n\t    self.pushPaused = false;\n\t    /* istanbul ignore if */\n\t    if (self.pullPaused) {\n\t      self.emit('active', {\n\t        direction: 'push'\n\t      });\n\t    }\n\t  }\n\t  function pullActive() {\n\t    self.pullPaused = false;\n\t    /* istanbul ignore if */\n\t    if (self.pushPaused) {\n\t      self.emit('active', {\n\t        direction: 'pull'\n\t      });\n\t    }\n\t  }\n\t\n\t  var removed = {};\n\t\n\t  function removeAll(type) { // type is 'push' or 'pull'\n\t    return function (event, func) {\n\t      var isChange = event === 'change' &&\n\t        (func === pullChange || func === pushChange);\n\t      var isDenied = event === 'denied' &&\n\t        (func === pullDenied || func === pushDenied);\n\t      var isPaused = event === 'paused' &&\n\t        (func === pullPaused || func === pushPaused);\n\t      var isActive = event === 'active' &&\n\t        (func === pullActive || func === pushActive);\n\t\n\t      if (isChange || isDenied || isPaused || isActive) {\n\t        if (!(event in removed)) {\n\t          removed[event] = {};\n\t        }\n\t        removed[event][type] = true;\n\t        if (Object.keys(removed[event]).length === 2) {\n\t          // both push and pull have asked to be removed\n\t          self.removeAllListeners(event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (opts.live) {\n\t    this.push.on('complete', self.pull.cancel.bind(self.pull));\n\t    this.pull.on('complete', self.push.cancel.bind(self.push));\n\t  }\n\t\n\t  function addOneListener(ee, event, listener) {\n\t    if (ee.listeners(event).indexOf(listener) == -1) {\n\t      ee.on(event, listener);\n\t    }\n\t  }\n\t\n\t  this.on('newListener', function (event) {\n\t    if (event === 'change') {\n\t      addOneListener(self.pull, 'change', pullChange);\n\t      addOneListener(self.push, 'change', pushChange);\n\t    } else if (event === 'denied') {\n\t      addOneListener(self.pull, 'denied', pullDenied);\n\t      addOneListener(self.push, 'denied', pushDenied);\n\t    } else if (event === 'active') {\n\t      addOneListener(self.pull, 'active', pullActive);\n\t      addOneListener(self.push, 'active', pushActive);\n\t    } else if (event === 'paused') {\n\t      addOneListener(self.pull, 'paused', pullPaused);\n\t      addOneListener(self.push, 'paused', pushPaused);\n\t    }\n\t  });\n\t\n\t  this.on('removeListener', function (event) {\n\t    if (event === 'change') {\n\t      self.pull.removeListener('change', pullChange);\n\t      self.push.removeListener('change', pushChange);\n\t    } else if (event === 'denied') {\n\t      self.pull.removeListener('denied', pullDenied);\n\t      self.push.removeListener('denied', pushDenied);\n\t    } else if (event === 'active') {\n\t      self.pull.removeListener('active', pullActive);\n\t      self.push.removeListener('active', pushActive);\n\t    } else if (event === 'paused') {\n\t      self.pull.removeListener('paused', pullPaused);\n\t      self.push.removeListener('paused', pushPaused);\n\t    }\n\t  });\n\t\n\t  this.pull.on('removeListener', removeAll('pull'));\n\t  this.push.on('removeListener', removeAll('push'));\n\t\n\t  var promise = PouchPromise.all([\n\t    this.push,\n\t    this.pull\n\t  ]).then(function (resp) {\n\t    var out = {\n\t      push: resp[0],\n\t      pull: resp[1]\n\t    };\n\t    self.emit('complete', out);\n\t    if (callback) {\n\t      callback(null, out);\n\t    }\n\t    self.removeAllListeners();\n\t    return out;\n\t  }, function (err) {\n\t    self.cancel();\n\t    if (callback) {\n\t      // if there's a callback, then the callback can receive\n\t      // the error event\n\t      callback(err);\n\t    } else {\n\t      // if there's no callback, then we're safe to emit an error\n\t      // event, which would otherwise throw an unhandled error\n\t      // due to 'error' being a special event in EventEmitters\n\t      self.emit('error', err);\n\t    }\n\t    self.removeAllListeners();\n\t    if (callback) {\n\t      // no sense throwing if we're already emitting an 'error' event\n\t      throw err;\n\t    }\n\t  });\n\t\n\t  this.then = function (success, err) {\n\t    return promise.then(success, err);\n\t  };\n\t\n\t  this.catch = function (err) {\n\t    return promise.catch(err);\n\t  };\n\t}\n\t\n\tSync.prototype.cancel = function () {\n\t  if (!this.canceled) {\n\t    this.canceled = true;\n\t    this.push.cancel();\n\t    this.pull.cancel();\n\t  }\n\t};\n\t\n\tfunction replication(PouchDB) {\n\t  PouchDB.replicate = replicate;\n\t  PouchDB.sync = sync;\n\t\n\t  Object.defineProperty(PouchDB.prototype, 'replicate', {\n\t    get: function () {\n\t      var self = this;\n\t      return {\n\t        from: function (other, opts, callback) {\n\t          return self.constructor.replicate(other, self, opts, callback);\n\t        },\n\t        to: function (other, opts, callback) {\n\t          return self.constructor.replicate(self, other, opts, callback);\n\t        }\n\t      };\n\t    }\n\t  });\n\t\n\t  PouchDB.prototype.sync = function (dbName, opts, callback) {\n\t    return this.constructor.sync(this, dbName, opts, callback);\n\t  };\n\t}\n\t\n\tPouchDB.plugin(IDBPouch)\n\t  .plugin(WebSqlPouch)\n\t  .plugin(HttpPouch$1)\n\t  .plugin(mapreduce)\n\t  .plugin(replication);\n\t\n\t// Pull from src because pouchdb-node/pouchdb-browser themselves\n\t// are aggressively optimized and jsnext:main would normally give us this\n\t// aggressive bundle.\n\t\n\tmodule.exports = PouchDB;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t// Generated by CoffeeScript 1.9.2\n\t(function() {\n\t  var hasProp = {}.hasOwnProperty,\n\t    slice = [].slice;\n\t\n\t  module.exports = function(source, scope) {\n\t    var key, keys, value, values;\n\t    keys = [];\n\t    values = [];\n\t    for (key in scope) {\n\t      if (!hasProp.call(scope, key)) continue;\n\t      value = scope[key];\n\t      if (key === 'this') {\n\t        continue;\n\t      }\n\t      keys.push(key);\n\t      values.push(value);\n\t    }\n\t    return Function.apply(null, slice.call(keys).concat([source])).apply(scope[\"this\"], values);\n\t  };\n\t\n\t}).call(this);\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (factory) {\n\t    if (true) {\n\t        // Node/CommonJS\n\t        module.exports = factory();\n\t    } else if (typeof define === 'function' && define.amd) {\n\t        // AMD\n\t        define(factory);\n\t    } else {\n\t        // Browser globals (with support for web workers)\n\t        var glob;\n\t\n\t        try {\n\t            glob = window;\n\t        } catch (e) {\n\t            glob = self;\n\t        }\n\t\n\t        glob.SparkMD5 = factory();\n\t    }\n\t}(function (undefined) {\n\t\n\t    'use strict';\n\t\n\t    /*\n\t     * Fastest md5 implementation around (JKM md5).\n\t     * Credits: Joseph Myers\n\t     *\n\t     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n\t     * @see http://jsperf.com/md5-shootout/7\n\t     */\n\t\n\t    /* this function is much faster,\n\t      so if possible we use it. Some IEs\n\t      are the only ones I know of that\n\t      need the idiotic second function,\n\t      generated by an if clause.  */\n\t    var add32 = function (a, b) {\n\t        return (a + b) & 0xFFFFFFFF;\n\t    },\n\t        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\t\n\t\n\t    function cmn(q, a, b, x, s, t) {\n\t        a = add32(add32(a, q), add32(x, t));\n\t        return add32((a << s) | (a >>> (32 - s)), b);\n\t    }\n\t\n\t    function md5cycle(x, k) {\n\t        var a = x[0],\n\t            b = x[1],\n\t            c = x[2],\n\t            d = x[3];\n\t\n\t        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t\n\t        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t\n\t        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t\n\t        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n\t        b  = (b << 21 |b >>> 11) + c | 0;\n\t        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n\t        b  = (b << 21 |b >>> 11) + c | 0;\n\t        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n\t        b  = (b << 21 |b >>> 11) + c | 0;\n\t        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n\t        b  = (b << 21 | b >>> 11) + c | 0;\n\t\n\t        x[0] = a + x[0] | 0;\n\t        x[1] = b + x[1] | 0;\n\t        x[2] = c + x[2] | 0;\n\t        x[3] = d + x[3] | 0;\n\t    }\n\t\n\t    function md5blk(s) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\t\n\t    function md5blk_array(a) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\t\n\t    function md51(s) {\n\t        var n = s.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk(s.substring(i - 64, i)));\n\t        }\n\t        s = s.substring(i - 64);\n\t        length = s.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t        return state;\n\t    }\n\t\n\t    function md51_array(a) {\n\t        var n = a.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n\t        }\n\t\n\t        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n\t        // containing the last element of the parent array if the sub array specified starts\n\t        // beyond the length of the parent array - weird.\n\t        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n\t        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\t\n\t        length = a.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t\n\t        return state;\n\t    }\n\t\n\t    function rhex(n) {\n\t        var s = '',\n\t            j;\n\t        for (j = 0; j < 4; j += 1) {\n\t            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n\t        }\n\t        return s;\n\t    }\n\t\n\t    function hex(x) {\n\t        var i;\n\t        for (i = 0; i < x.length; i += 1) {\n\t            x[i] = rhex(x[i]);\n\t        }\n\t        return x.join('');\n\t    }\n\t\n\t    // In some cases the fast add32 function cannot be used..\n\t    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n\t        add32 = function (x, y) {\n\t            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n\t                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t            return (msw << 16) | (lsw & 0xFFFF);\n\t        };\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * ArrayBuffer slice polyfill.\n\t     *\n\t     * @see https://github.com/ttaubert/node-arraybuffer-slice\n\t     */\n\t\n\t    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n\t        (function () {\n\t            function clamp(val, length) {\n\t                val = (val | 0) || 0;\n\t\n\t                if (val < 0) {\n\t                    return Math.max(val + length, 0);\n\t                }\n\t\n\t                return Math.min(val, length);\n\t            }\n\t\n\t            ArrayBuffer.prototype.slice = function (from, to) {\n\t                var length = this.byteLength,\n\t                    begin = clamp(from, length),\n\t                    end = length,\n\t                    num,\n\t                    target,\n\t                    targetArray,\n\t                    sourceArray;\n\t\n\t                if (to !== undefined) {\n\t                    end = clamp(to, length);\n\t                }\n\t\n\t                if (begin > end) {\n\t                    return new ArrayBuffer(0);\n\t                }\n\t\n\t                num = end - begin;\n\t                target = new ArrayBuffer(num);\n\t                targetArray = new Uint8Array(target);\n\t\n\t                sourceArray = new Uint8Array(this, begin, num);\n\t                targetArray.set(sourceArray);\n\t\n\t                return target;\n\t            };\n\t        })();\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * Helpers.\n\t     */\n\t\n\t    function toUtf8(str) {\n\t        if (/[\\u0080-\\uFFFF]/.test(str)) {\n\t            str = unescape(encodeURIComponent(str));\n\t        }\n\t\n\t        return str;\n\t    }\n\t\n\t    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n\t        var length = str.length,\n\t           buff = new ArrayBuffer(length),\n\t           arr = new Uint8Array(buff),\n\t           i;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            arr[i] = str.charCodeAt(i);\n\t        }\n\t\n\t        return returnUInt8Array ? arr : buff;\n\t    }\n\t\n\t    function arrayBuffer2Utf8Str(buff) {\n\t        return String.fromCharCode.apply(null, new Uint8Array(buff));\n\t    }\n\t\n\t    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n\t        var result = new Uint8Array(first.byteLength + second.byteLength);\n\t\n\t        result.set(new Uint8Array(first));\n\t        result.set(new Uint8Array(second), first.byteLength);\n\t\n\t        return returnUInt8Array ? result : result.buffer;\n\t    }\n\t\n\t    function hexToBinaryString(hex) {\n\t        var bytes = [],\n\t            length = hex.length,\n\t            x;\n\t\n\t        for (x = 0; x < length - 1; x += 2) {\n\t            bytes.push(parseInt(hex.substr(x, 2), 16));\n\t        }\n\t\n\t        return String.fromCharCode.apply(String, bytes);\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation.\n\t     *\n\t     * Use this class to perform an incremental md5, otherwise use the\n\t     * static methods instead.\n\t     */\n\t\n\t    function SparkMD5() {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    }\n\t\n\t    /**\n\t     * Appends a string.\n\t     * A conversion will be applied if an utf8 string is detected.\n\t     *\n\t     * @param {String} str The string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.append = function (str) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then append as binary\n\t        this.appendBinary(toUtf8(str));\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Appends a binary string.\n\t     *\n\t     * @param {String} contents The binary string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.appendBinary = function (contents) {\n\t        this._buff += contents;\n\t        this._length += contents.length;\n\t\n\t        var length = this._buff.length,\n\t            i;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n\t        }\n\t\n\t        this._buff = this._buff.substring(i - 64);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            i,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\t\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.reset = function () {\n\t        this._buff = '';\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.prototype.getState = function () {\n\t        return {\n\t            buff: this._buff,\n\t            length: this._length,\n\t            hash: this._hash\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.setState = function (state) {\n\t        this._buff = state.buff;\n\t        this._length = state.length;\n\t        this._hash = state.hash;\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Releases memory used by the incremental buffer and other additional\n\t     * resources. If you plan to use the instance again, use reset instead.\n\t     */\n\t    SparkMD5.prototype.destroy = function () {\n\t        delete this._hash;\n\t        delete this._buff;\n\t        delete this._length;\n\t    };\n\t\n\t    /**\n\t     * Finish the final calculation based on the tail.\n\t     *\n\t     * @param {Array}  tail   The tail (will be modified)\n\t     * @param {Number} length The length of the remaining buffer\n\t     */\n\t    SparkMD5.prototype._finish = function (tail, length) {\n\t        var i = length,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(this._hash, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Do the final computation based on the tail and length\n\t        // Beware that the final length may not fit in 32 bits so we take care of that\n\t        tmp = this._length * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t        md5cycle(this._hash, tail);\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on a string.\n\t     * A conversion will be applied if utf8 string is detected.\n\t     *\n\t     * @param {String}  str The string\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hash = function (str, raw) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then compute it using the binary function\n\t        return SparkMD5.hashBinary(toUtf8(str), raw);\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on a binary string.\n\t     *\n\t     * @param {String}  content The binary string\n\t     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hashBinary = function (content, raw) {\n\t        var hash = md51(content),\n\t            ret = hex(hash);\n\t\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation for array buffers.\n\t     *\n\t     * Use this class to perform an incremental md5 ONLY for array buffers.\n\t     */\n\t    SparkMD5.ArrayBuffer = function () {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    };\n\t\n\t    /**\n\t     * Appends an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array to be appended\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n\t        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n\t            length = buff.length,\n\t            i;\n\t\n\t        this._length += arr.byteLength;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n\t        }\n\t\n\t        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            i,\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\t\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.reset = function () {\n\t        this._buff = new Uint8Array(0);\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.getState = function () {\n\t        var state = SparkMD5.prototype.getState.call(this);\n\t\n\t        // Convert buffer to a string\n\t        state.buff = arrayBuffer2Utf8Str(state.buff);\n\t\n\t        return state;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n\t        // Convert string to buffer\n\t        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\t\n\t        return SparkMD5.prototype.setState.call(this, state);\n\t    };\n\t\n\t    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\t\n\t    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\t\n\t    /**\n\t     * Performs the md5 hash on an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array buffer\n\t     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n\t        var hash = md51_array(new Uint8Array(arr)),\n\t            ret = hex(hash);\n\t\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\t\n\t    return SparkMD5;\n\t}));\n\n\n/***/ },\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t  * vue-router v2.1.1\n\t  * (c) 2016 Evan You\n\t  * @license MIT\n\t  */\n\t'use strict';\n\t\n\tvar View = {\n\t  name: 'router-view',\n\t  functional: true,\n\t  props: {\n\t    name: {\n\t      type: String,\n\t      default: 'default'\n\t    }\n\t  },\n\t  render: function render (h, ref) {\n\t    var props = ref.props;\n\t    var children = ref.children;\n\t    var parent = ref.parent;\n\t    var data = ref.data;\n\t\n\t    data.routerView = true\n\t\n\t    var route = parent.$route\n\t    var cache = parent._routerViewCache || (parent._routerViewCache = {})\n\t    var depth = 0\n\t    var inactive = false\n\t\n\t    while (parent) {\n\t      if (parent.$vnode && parent.$vnode.data.routerView) {\n\t        depth++\n\t      }\n\t      if (parent._inactive) {\n\t        inactive = true\n\t      }\n\t      parent = parent.$parent\n\t    }\n\t\n\t    data.routerViewDepth = depth\n\t    var matched = route.matched[depth]\n\t    if (!matched) {\n\t      return h()\n\t    }\n\t\n\t    var name = props.name\n\t    var component = inactive\n\t      ? cache[name]\n\t      : (cache[name] = matched.components[name])\n\t\n\t    if (!inactive) {\n\t      var hooks = data.hook || (data.hook = {})\n\t      hooks.init = function (vnode) {\n\t        matched.instances[name] = vnode.child\n\t      }\n\t      hooks.prepatch = function (oldVnode, vnode) {\n\t        matched.instances[name] = vnode.child\n\t      }\n\t      hooks.destroy = function (vnode) {\n\t        if (matched.instances[name] === vnode.child) {\n\t          matched.instances[name] = undefined\n\t        }\n\t      }\n\t    }\n\t\n\t    return h(component, data, children)\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction assert (condition, message) {\n\t  if (!condition) {\n\t    throw new Error((\"[vue-router] \" + message))\n\t  }\n\t}\n\t\n\tfunction warn (condition, message) {\n\t  if (!condition) {\n\t    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message))\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar encode = encodeURIComponent\n\tvar decode = decodeURIComponent\n\t\n\tfunction resolveQuery (\n\t  query,\n\t  extraQuery\n\t) {\n\t  if ( extraQuery === void 0 ) extraQuery = {};\n\t\n\t  if (query) {\n\t    var parsedQuery\n\t    try {\n\t      parsedQuery = parseQuery(query)\n\t    } catch (e) {\n\t      (\"production\") !== 'production' && warn(false, e.message)\n\t      parsedQuery = {}\n\t    }\n\t    for (var key in extraQuery) {\n\t      parsedQuery[key] = extraQuery[key]\n\t    }\n\t    return parsedQuery\n\t  } else {\n\t    return extraQuery\n\t  }\n\t}\n\t\n\tfunction parseQuery (query) {\n\t  var res = {}\n\t\n\t  query = query.trim().replace(/^(\\?|#|&)/, '')\n\t\n\t  if (!query) {\n\t    return res\n\t  }\n\t\n\t  query.split('&').forEach(function (param) {\n\t    var parts = param.replace(/\\+/g, ' ').split('=')\n\t    var key = decode(parts.shift())\n\t    var val = parts.length > 0\n\t      ? decode(parts.join('='))\n\t      : null\n\t\n\t    if (res[key] === undefined) {\n\t      res[key] = val\n\t    } else if (Array.isArray(res[key])) {\n\t      res[key].push(val)\n\t    } else {\n\t      res[key] = [res[key], val]\n\t    }\n\t  })\n\t\n\t  return res\n\t}\n\t\n\tfunction stringifyQuery (obj) {\n\t  var res = obj ? Object.keys(obj).map(function (key) {\n\t    var val = obj[key]\n\t\n\t    if (val === undefined) {\n\t      return ''\n\t    }\n\t\n\t    if (val === null) {\n\t      return encode(key)\n\t    }\n\t\n\t    if (Array.isArray(val)) {\n\t      var result = []\n\t      val.slice().forEach(function (val2) {\n\t        if (val2 === undefined) {\n\t          return\n\t        }\n\t        if (val2 === null) {\n\t          result.push(encode(key))\n\t        } else {\n\t          result.push(encode(key) + '=' + encode(val2))\n\t        }\n\t      })\n\t      return result.join('&')\n\t    }\n\t\n\t    return encode(key) + '=' + encode(val)\n\t  }).filter(function (x) { return x.length > 0; }).join('&') : null\n\t  return res ? (\"?\" + res) : ''\n\t}\n\t\n\t/*  */\n\t\n\tfunction createRoute (\n\t  record,\n\t  location,\n\t  redirectedFrom\n\t) {\n\t  var route = {\n\t    name: location.name || (record && record.name),\n\t    meta: (record && record.meta) || {},\n\t    path: location.path || '/',\n\t    hash: location.hash || '',\n\t    query: location.query || {},\n\t    params: location.params || {},\n\t    fullPath: getFullPath(location),\n\t    matched: record ? formatMatch(record) : []\n\t  }\n\t  if (redirectedFrom) {\n\t    route.redirectedFrom = getFullPath(redirectedFrom)\n\t  }\n\t  return Object.freeze(route)\n\t}\n\t\n\t// the starting route that represents the initial state\n\tvar START = createRoute(null, {\n\t  path: '/'\n\t})\n\t\n\tfunction formatMatch (record) {\n\t  var res = []\n\t  while (record) {\n\t    res.unshift(record)\n\t    record = record.parent\n\t  }\n\t  return res\n\t}\n\t\n\tfunction getFullPath (ref) {\n\t  var path = ref.path;\n\t  var query = ref.query; if ( query === void 0 ) query = {};\n\t  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\t\n\t  return (path || '/') + stringifyQuery(query) + hash\n\t}\n\t\n\tvar trailingSlashRE = /\\/$/\n\tfunction isSameRoute (a, b) {\n\t  if (b === START) {\n\t    return a === b\n\t  } else if (!b) {\n\t    return false\n\t  } else if (a.path && b.path) {\n\t    return (\n\t      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n\t      a.hash === b.hash &&\n\t      isObjectEqual(a.query, b.query)\n\t    )\n\t  } else if (a.name && b.name) {\n\t    return (\n\t      a.name === b.name &&\n\t      a.hash === b.hash &&\n\t      isObjectEqual(a.query, b.query) &&\n\t      isObjectEqual(a.params, b.params)\n\t    )\n\t  } else {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction isObjectEqual (a, b) {\n\t  if ( a === void 0 ) a = {};\n\t  if ( b === void 0 ) b = {};\n\t\n\t  var aKeys = Object.keys(a)\n\t  var bKeys = Object.keys(b)\n\t  if (aKeys.length !== bKeys.length) {\n\t    return false\n\t  }\n\t  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n\t}\n\t\n\tfunction isIncludedRoute (current, target) {\n\t  return (\n\t    current.path.indexOf(target.path.replace(/\\/$/, '')) === 0 &&\n\t    (!target.hash || current.hash === target.hash) &&\n\t    queryIncludes(current.query, target.query)\n\t  )\n\t}\n\t\n\tfunction queryIncludes (current, target) {\n\t  for (var key in target) {\n\t    if (!(key in current)) {\n\t      return false\n\t    }\n\t  }\n\t  return true\n\t}\n\t\n\t/*  */\n\t\n\t// work around weird flow bug\n\tvar toTypes = [String, Object]\n\t\n\tvar Link = {\n\t  name: 'router-link',\n\t  props: {\n\t    to: {\n\t      type: toTypes,\n\t      required: true\n\t    },\n\t    tag: {\n\t      type: String,\n\t      default: 'a'\n\t    },\n\t    exact: Boolean,\n\t    append: Boolean,\n\t    replace: Boolean,\n\t    activeClass: String,\n\t    event: {\n\t      type: [String, Array],\n\t      default: 'click'\n\t    }\n\t  },\n\t  render: function render (h) {\n\t    var this$1 = this;\n\t\n\t    var router = this.$router\n\t    var current = this.$route\n\t    var ref = router.resolve(this.to, current, this.append);\n\t    var normalizedTo = ref.normalizedTo;\n\t    var resolved = ref.resolved;\n\t    var href = ref.href;\n\t    var classes = {}\n\t    var activeClass = this.activeClass || router.options.linkActiveClass || 'router-link-active'\n\t    var compareTarget = normalizedTo.path ? createRoute(null, normalizedTo) : resolved\n\t    classes[activeClass] = this.exact\n\t      ? isSameRoute(current, compareTarget)\n\t      : isIncludedRoute(current, compareTarget)\n\t\n\t    var handler = function (e) {\n\t      if (guardEvent(e)) {\n\t        if (this$1.replace) {\n\t          router.replace(normalizedTo)\n\t        } else {\n\t          router.push(normalizedTo)\n\t        }\n\t      }\n\t    }\n\t\n\t    var on = { click: guardEvent }\n\t    if (Array.isArray(this.event)) {\n\t      this.event.forEach(function (e) { on[e] = handler })\n\t    } else {\n\t      on[this.event] = handler\n\t    }\n\t\n\t    var data = {\n\t      class: classes\n\t    }\n\t\n\t    if (this.tag === 'a') {\n\t      data.on = on\n\t      data.attrs = { href: href }\n\t    } else {\n\t      // find the first <a> child and apply listener and href\n\t      var a = findAnchor(this.$slots.default)\n\t      if (a) {\n\t        // in case the <a> is a static node\n\t        a.isStatic = false\n\t        var extend = _Vue.util.extend\n\t        var aData = a.data = extend({}, a.data)\n\t        aData.on = on\n\t        var aAttrs = a.data.attrs = extend({}, a.data.attrs)\n\t        aAttrs.href = href\n\t      } else {\n\t        // doesn't have <a> child, apply listener to self\n\t        data.on = on\n\t      }\n\t    }\n\t\n\t    return h(this.tag, data, this.$slots.default)\n\t  }\n\t}\n\t\n\tfunction guardEvent (e) {\n\t  // don't redirect with control keys\n\t  /* istanbul ignore if */\n\t  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n\t  // don't redirect when preventDefault called\n\t  /* istanbul ignore if */\n\t  if (e.defaultPrevented) { return }\n\t  // don't redirect on right click\n\t  /* istanbul ignore if */\n\t  if (e.button !== 0) { return }\n\t  // don't redirect if `target=\"_blank\"`\n\t  /* istanbul ignore if */\n\t  var target = e.target.getAttribute('target')\n\t  if (/\\b_blank\\b/i.test(target)) { return }\n\t\n\t  e.preventDefault()\n\t  return true\n\t}\n\t\n\tfunction findAnchor (children) {\n\t  if (children) {\n\t    var child\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i]\n\t      if (child.tag === 'a') {\n\t        return child\n\t      }\n\t      if (child.children && (child = findAnchor(child.children))) {\n\t        return child\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar _Vue\n\t\n\tfunction install (Vue) {\n\t  if (install.installed) { return }\n\t  install.installed = true\n\t\n\t  _Vue = Vue\n\t\n\t  Object.defineProperty(Vue.prototype, '$router', {\n\t    get: function get () { return this.$root._router }\n\t  })\n\t\n\t  Object.defineProperty(Vue.prototype, '$route', {\n\t    get: function get$1 () { return this.$root._route }\n\t  })\n\t\n\t  Vue.mixin({\n\t    beforeCreate: function beforeCreate () {\n\t      if (this.$options.router) {\n\t        this._router = this.$options.router\n\t        this._router.init(this)\n\t        Vue.util.defineReactive(this, '_route', this._router.history.current)\n\t      }\n\t    }\n\t  })\n\t\n\t  Vue.component('router-view', View)\n\t  Vue.component('router-link', Link)\n\t\n\t  var strats = Vue.config.optionMergeStrategies\n\t  // use the same hook merging strategy for route hooks\n\t  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created\n\t}\n\t\n\t/*  */\n\t\n\tfunction resolvePath (\n\t  relative,\n\t  base,\n\t  append\n\t) {\n\t  if (relative.charAt(0) === '/') {\n\t    return relative\n\t  }\n\t\n\t  if (relative.charAt(0) === '?' || relative.charAt(0) === '#') {\n\t    return base + relative\n\t  }\n\t\n\t  var stack = base.split('/')\n\t\n\t  // remove trailing segment if:\n\t  // - not appending\n\t  // - appending to trailing slash (last segment is empty)\n\t  if (!append || !stack[stack.length - 1]) {\n\t    stack.pop()\n\t  }\n\t\n\t  // resolve relative path\n\t  var segments = relative.replace(/^\\//, '').split('/')\n\t  for (var i = 0; i < segments.length; i++) {\n\t    var segment = segments[i]\n\t    if (segment === '.') {\n\t      continue\n\t    } else if (segment === '..') {\n\t      stack.pop()\n\t    } else {\n\t      stack.push(segment)\n\t    }\n\t  }\n\t\n\t  // ensure leading slash\n\t  if (stack[0] !== '') {\n\t    stack.unshift('')\n\t  }\n\t\n\t  return stack.join('/')\n\t}\n\t\n\tfunction parsePath (path) {\n\t  var hash = ''\n\t  var query = ''\n\t\n\t  var hashIndex = path.indexOf('#')\n\t  if (hashIndex >= 0) {\n\t    hash = path.slice(hashIndex)\n\t    path = path.slice(0, hashIndex)\n\t  }\n\t\n\t  var queryIndex = path.indexOf('?')\n\t  if (queryIndex >= 0) {\n\t    query = path.slice(queryIndex + 1)\n\t    path = path.slice(0, queryIndex)\n\t  }\n\t\n\t  return {\n\t    path: path,\n\t    query: query,\n\t    hash: hash\n\t  }\n\t}\n\t\n\tfunction cleanPath (path) {\n\t  return path.replace(/\\/\\//g, '/')\n\t}\n\t\n\t/*  */\n\t\n\tfunction createRouteMap (routes) {\n\t  var pathMap = Object.create(null)\n\t  var nameMap = Object.create(null)\n\t\n\t  routes.forEach(function (route) {\n\t    addRouteRecord(pathMap, nameMap, route)\n\t  })\n\t\n\t  return {\n\t    pathMap: pathMap,\n\t    nameMap: nameMap\n\t  }\n\t}\n\t\n\tfunction addRouteRecord (\n\t  pathMap,\n\t  nameMap,\n\t  route,\n\t  parent,\n\t  matchAs\n\t) {\n\t  var path = route.path;\n\t  var name = route.name;\n\t  if (false) {\n\t    assert(path != null, \"\\\"path\\\" is required in a route configuration.\")\n\t    assert(\n\t      typeof route.component !== 'string',\n\t      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n\t      \"string id. Use an actual component instead.\"\n\t    )\n\t  }\n\t\n\t  var record = {\n\t    path: normalizePath(path, parent),\n\t    components: route.components || { default: route.component },\n\t    instances: {},\n\t    name: name,\n\t    parent: parent,\n\t    matchAs: matchAs,\n\t    redirect: route.redirect,\n\t    beforeEnter: route.beforeEnter,\n\t    meta: route.meta || {}\n\t  }\n\t\n\t  if (route.children) {\n\t    // Warn if route is named and has a default child route.\n\t    // If users navigate to this route by name, the default child will\n\t    // not be rendered (GH Issue #629)\n\t    if (false) {\n\t      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n\t        warn(false, (\"Named Route '\" + (route.name) + \"' has a default child route.\\n          When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), the default child route will not be rendered.\\n          Remove the name from this route and use the name of the default child route for named links instead.\")\n\t        )\n\t      }\n\t    }\n\t    route.children.forEach(function (child) {\n\t      addRouteRecord(pathMap, nameMap, child, record)\n\t    })\n\t  }\n\t\n\t  if (route.alias !== undefined) {\n\t    if (Array.isArray(route.alias)) {\n\t      route.alias.forEach(function (alias) {\n\t        addRouteRecord(pathMap, nameMap, { path: alias }, parent, record.path)\n\t      })\n\t    } else {\n\t      addRouteRecord(pathMap, nameMap, { path: route.alias }, parent, record.path)\n\t    }\n\t  }\n\t\n\t  if (!pathMap[record.path]) {\n\t    pathMap[record.path] = record\n\t  }\n\t  if (name) {\n\t    if (!nameMap[name]) {\n\t      nameMap[name] = record\n\t    } else if (false) {\n\t      warn(false, (\"Duplicate named routes definition: { name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"))\n\t    }\n\t  }\n\t}\n\t\n\tfunction normalizePath (path, parent) {\n\t  path = path.replace(/\\/$/, '')\n\t  if (path[0] === '/') { return path }\n\t  if (parent == null) { return path }\n\t  return cleanPath(((parent.path) + \"/\" + path))\n\t}\n\t\n\tvar __moduleExports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\t\n\tvar isarray = __moduleExports\n\t\n\t/**\n\t * Expose `pathToRegexp`.\n\t */\n\tvar index = pathToRegexp\n\tvar parse_1 = parse\n\tvar compile_1 = compile\n\tvar tokensToFunction_1 = tokensToFunction\n\tvar tokensToRegExp_1 = tokensToRegExp\n\t\n\t/**\n\t * The main path matching regexp utility.\n\t *\n\t * @type {RegExp}\n\t */\n\tvar PATH_REGEXP = new RegExp([\n\t  // Match escaped characters that would otherwise appear in future matches.\n\t  // This allows the user to escape special characters that won't transform.\n\t  '(\\\\\\\\.)',\n\t  // Match Express-style parameters and un-named parameters with a prefix\n\t  // and optional suffixes. Matches appear as:\n\t  //\n\t  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n\t  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n\t  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n\t  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n\t].join('|'), 'g')\n\t\n\t/**\n\t * Parse a string for the raw tokens.\n\t *\n\t * @param  {string}  str\n\t * @param  {Object=} options\n\t * @return {!Array}\n\t */\n\tfunction parse (str, options) {\n\t  var tokens = []\n\t  var key = 0\n\t  var index = 0\n\t  var path = ''\n\t  var defaultDelimiter = options && options.delimiter || '/'\n\t  var res\n\t\n\t  while ((res = PATH_REGEXP.exec(str)) != null) {\n\t    var m = res[0]\n\t    var escaped = res[1]\n\t    var offset = res.index\n\t    path += str.slice(index, offset)\n\t    index = offset + m.length\n\t\n\t    // Ignore already escaped sequences.\n\t    if (escaped) {\n\t      path += escaped[1]\n\t      continue\n\t    }\n\t\n\t    var next = str[index]\n\t    var prefix = res[2]\n\t    var name = res[3]\n\t    var capture = res[4]\n\t    var group = res[5]\n\t    var modifier = res[6]\n\t    var asterisk = res[7]\n\t\n\t    // Push the current path onto the tokens.\n\t    if (path) {\n\t      tokens.push(path)\n\t      path = ''\n\t    }\n\t\n\t    var partial = prefix != null && next != null && next !== prefix\n\t    var repeat = modifier === '+' || modifier === '*'\n\t    var optional = modifier === '?' || modifier === '*'\n\t    var delimiter = res[2] || defaultDelimiter\n\t    var pattern = capture || group\n\t\n\t    tokens.push({\n\t      name: name || key++,\n\t      prefix: prefix || '',\n\t      delimiter: delimiter,\n\t      optional: optional,\n\t      repeat: repeat,\n\t      partial: partial,\n\t      asterisk: !!asterisk,\n\t      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n\t    })\n\t  }\n\t\n\t  // Match any characters still remaining.\n\t  if (index < str.length) {\n\t    path += str.substr(index)\n\t  }\n\t\n\t  // If the path exists, push it onto the end.\n\t  if (path) {\n\t    tokens.push(path)\n\t  }\n\t\n\t  return tokens\n\t}\n\t\n\t/**\n\t * Compile a string to a template function for the path.\n\t *\n\t * @param  {string}             str\n\t * @param  {Object=}            options\n\t * @return {!function(Object=, Object=)}\n\t */\n\tfunction compile (str, options) {\n\t  return tokensToFunction(parse(str, options))\n\t}\n\t\n\t/**\n\t * Prettier encoding of URI path segments.\n\t *\n\t * @param  {string}\n\t * @return {string}\n\t */\n\tfunction encodeURIComponentPretty (str) {\n\t  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n\t    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n\t  })\n\t}\n\t\n\t/**\n\t * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n\t *\n\t * @param  {string}\n\t * @return {string}\n\t */\n\tfunction encodeAsterisk (str) {\n\t  return encodeURI(str).replace(/[?#]/g, function (c) {\n\t    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n\t  })\n\t}\n\t\n\t/**\n\t * Expose a method for transforming tokens into the path function.\n\t */\n\tfunction tokensToFunction (tokens) {\n\t  // Compile all the tokens into regexps.\n\t  var matches = new Array(tokens.length)\n\t\n\t  // Compile all the patterns before compilation.\n\t  for (var i = 0; i < tokens.length; i++) {\n\t    if (typeof tokens[i] === 'object') {\n\t      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n\t    }\n\t  }\n\t\n\t  return function (obj, opts) {\n\t    var path = ''\n\t    var data = obj || {}\n\t    var options = opts || {}\n\t    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\t\n\t    for (var i = 0; i < tokens.length; i++) {\n\t      var token = tokens[i]\n\t\n\t      if (typeof token === 'string') {\n\t        path += token\n\t\n\t        continue\n\t      }\n\t\n\t      var value = data[token.name]\n\t      var segment\n\t\n\t      if (value == null) {\n\t        if (token.optional) {\n\t          // Prepend partial segment prefixes.\n\t          if (token.partial) {\n\t            path += token.prefix\n\t          }\n\t\n\t          continue\n\t        } else {\n\t          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n\t        }\n\t      }\n\t\n\t      if (isarray(value)) {\n\t        if (!token.repeat) {\n\t          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n\t        }\n\t\n\t        if (value.length === 0) {\n\t          if (token.optional) {\n\t            continue\n\t          } else {\n\t            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n\t          }\n\t        }\n\t\n\t        for (var j = 0; j < value.length; j++) {\n\t          segment = encode(value[j])\n\t\n\t          if (!matches[i].test(segment)) {\n\t            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n\t          }\n\t\n\t          path += (j === 0 ? token.prefix : token.delimiter) + segment\n\t        }\n\t\n\t        continue\n\t      }\n\t\n\t      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\t\n\t      if (!matches[i].test(segment)) {\n\t        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n\t      }\n\t\n\t      path += token.prefix + segment\n\t    }\n\t\n\t    return path\n\t  }\n\t}\n\t\n\t/**\n\t * Escape a regular expression string.\n\t *\n\t * @param  {string} str\n\t * @return {string}\n\t */\n\tfunction escapeString (str) {\n\t  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n\t}\n\t\n\t/**\n\t * Escape the capturing group by escaping special characters and meaning.\n\t *\n\t * @param  {string} group\n\t * @return {string}\n\t */\n\tfunction escapeGroup (group) {\n\t  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n\t}\n\t\n\t/**\n\t * Attach the keys as a property of the regexp.\n\t *\n\t * @param  {!RegExp} re\n\t * @param  {Array}   keys\n\t * @return {!RegExp}\n\t */\n\tfunction attachKeys (re, keys) {\n\t  re.keys = keys\n\t  return re\n\t}\n\t\n\t/**\n\t * Get the flags for a regexp from the options.\n\t *\n\t * @param  {Object} options\n\t * @return {string}\n\t */\n\tfunction flags (options) {\n\t  return options.sensitive ? '' : 'i'\n\t}\n\t\n\t/**\n\t * Pull out keys from a regexp.\n\t *\n\t * @param  {!RegExp} path\n\t * @param  {!Array}  keys\n\t * @return {!RegExp}\n\t */\n\tfunction regexpToRegexp (path, keys) {\n\t  // Use a negative lookahead to match only capturing groups.\n\t  var groups = path.source.match(/\\((?!\\?)/g)\n\t\n\t  if (groups) {\n\t    for (var i = 0; i < groups.length; i++) {\n\t      keys.push({\n\t        name: i,\n\t        prefix: null,\n\t        delimiter: null,\n\t        optional: false,\n\t        repeat: false,\n\t        partial: false,\n\t        asterisk: false,\n\t        pattern: null\n\t      })\n\t    }\n\t  }\n\t\n\t  return attachKeys(path, keys)\n\t}\n\t\n\t/**\n\t * Transform an array into a regexp.\n\t *\n\t * @param  {!Array}  path\n\t * @param  {Array}   keys\n\t * @param  {!Object} options\n\t * @return {!RegExp}\n\t */\n\tfunction arrayToRegexp (path, keys, options) {\n\t  var parts = []\n\t\n\t  for (var i = 0; i < path.length; i++) {\n\t    parts.push(pathToRegexp(path[i], keys, options).source)\n\t  }\n\t\n\t  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\t\n\t  return attachKeys(regexp, keys)\n\t}\n\t\n\t/**\n\t * Create a path regexp from string input.\n\t *\n\t * @param  {string}  path\n\t * @param  {!Array}  keys\n\t * @param  {!Object} options\n\t * @return {!RegExp}\n\t */\n\tfunction stringToRegexp (path, keys, options) {\n\t  return tokensToRegExp(parse(path, options), keys, options)\n\t}\n\t\n\t/**\n\t * Expose a function for taking tokens and returning a RegExp.\n\t *\n\t * @param  {!Array}          tokens\n\t * @param  {(Array|Object)=} keys\n\t * @param  {Object=}         options\n\t * @return {!RegExp}\n\t */\n\tfunction tokensToRegExp (tokens, keys, options) {\n\t  if (!isarray(keys)) {\n\t    options = /** @type {!Object} */ (keys || options)\n\t    keys = []\n\t  }\n\t\n\t  options = options || {}\n\t\n\t  var strict = options.strict\n\t  var end = options.end !== false\n\t  var route = ''\n\t\n\t  // Iterate over the tokens and create our regexp string.\n\t  for (var i = 0; i < tokens.length; i++) {\n\t    var token = tokens[i]\n\t\n\t    if (typeof token === 'string') {\n\t      route += escapeString(token)\n\t    } else {\n\t      var prefix = escapeString(token.prefix)\n\t      var capture = '(?:' + token.pattern + ')'\n\t\n\t      keys.push(token)\n\t\n\t      if (token.repeat) {\n\t        capture += '(?:' + prefix + capture + ')*'\n\t      }\n\t\n\t      if (token.optional) {\n\t        if (!token.partial) {\n\t          capture = '(?:' + prefix + '(' + capture + '))?'\n\t        } else {\n\t          capture = prefix + '(' + capture + ')?'\n\t        }\n\t      } else {\n\t        capture = prefix + '(' + capture + ')'\n\t      }\n\t\n\t      route += capture\n\t    }\n\t  }\n\t\n\t  var delimiter = escapeString(options.delimiter || '/')\n\t  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\t\n\t  // In non-strict mode we allow a slash at the end of match. If the path to\n\t  // match already ends with a slash, we remove it for consistency. The slash\n\t  // is valid at the end of a path match, not in the middle. This is important\n\t  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n\t  if (!strict) {\n\t    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n\t  }\n\t\n\t  if (end) {\n\t    route += '$'\n\t  } else {\n\t    // In non-ending mode, we need the capturing groups to match as much as\n\t    // possible by using a positive lookahead to the end or next path segment.\n\t    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n\t  }\n\t\n\t  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n\t}\n\t\n\t/**\n\t * Normalize the given path string, returning a regular expression.\n\t *\n\t * An empty array can be passed in for the keys, which will hold the\n\t * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n\t * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n\t *\n\t * @param  {(string|RegExp|Array)} path\n\t * @param  {(Array|Object)=}       keys\n\t * @param  {Object=}               options\n\t * @return {!RegExp}\n\t */\n\tfunction pathToRegexp (path, keys, options) {\n\t  if (!isarray(keys)) {\n\t    options = /** @type {!Object} */ (keys || options)\n\t    keys = []\n\t  }\n\t\n\t  options = options || {}\n\t\n\t  if (path instanceof RegExp) {\n\t    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n\t  }\n\t\n\t  if (isarray(path)) {\n\t    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n\t  }\n\t\n\t  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n\t}\n\t\n\tindex.parse = parse_1;\n\tindex.compile = compile_1;\n\tindex.tokensToFunction = tokensToFunction_1;\n\tindex.tokensToRegExp = tokensToRegExp_1;\n\t\n\t/*  */\n\t\n\tvar regexpCache = Object.create(null)\n\t\n\tfunction getRouteRegex (path) {\n\t  var hit = regexpCache[path]\n\t  var keys, regexp\n\t\n\t  if (hit) {\n\t    keys = hit.keys\n\t    regexp = hit.regexp\n\t  } else {\n\t    keys = []\n\t    regexp = index(path, keys)\n\t    regexpCache[path] = { keys: keys, regexp: regexp }\n\t  }\n\t\n\t  return { keys: keys, regexp: regexp }\n\t}\n\t\n\tvar regexpCompileCache = Object.create(null)\n\t\n\tfunction fillParams (\n\t  path,\n\t  params,\n\t  routeMsg\n\t) {\n\t  try {\n\t    var filler =\n\t      regexpCompileCache[path] ||\n\t      (regexpCompileCache[path] = index.compile(path))\n\t    return filler(params || {}, { pretty: true })\n\t  } catch (e) {\n\t    if (false) {\n\t      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)))\n\t    }\n\t    return ''\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction normalizeLocation (\n\t  raw,\n\t  current,\n\t  append\n\t) {\n\t  var next = typeof raw === 'string' ? { path: raw } : raw\n\t  // named target\n\t  if (next.name || next._normalized) {\n\t    return next\n\t  }\n\t\n\t  // relative params\n\t  if (!next.path && next.params && current) {\n\t    next = assign({}, next)\n\t    next._normalized = true\n\t    var params = assign(assign({}, current.params), next.params)\n\t    if (current.name) {\n\t      next.name = current.name\n\t      next.params = params\n\t    } else if (current.matched) {\n\t      var rawPath = current.matched[current.matched.length - 1].path\n\t      next.path = fillParams(rawPath, params, (\"path \" + (current.path)))\n\t    } else if (false) {\n\t      warn(false, \"relative params navigation requires a current route.\")\n\t    }\n\t    return next\n\t  }\n\t\n\t  var parsedPath = parsePath(next.path || '')\n\t  var basePath = (current && current.path) || '/'\n\t  var path = parsedPath.path\n\t    ? resolvePath(parsedPath.path, basePath, append || next.append)\n\t    : (current && current.path) || '/'\n\t  var query = resolveQuery(parsedPath.query, next.query)\n\t  var hash = next.hash || parsedPath.hash\n\t  if (hash && hash.charAt(0) !== '#') {\n\t    hash = \"#\" + hash\n\t  }\n\t\n\t  return {\n\t    _normalized: true,\n\t    path: path,\n\t    query: query,\n\t    hash: hash\n\t  }\n\t}\n\t\n\tfunction assign (a, b) {\n\t  for (var key in b) {\n\t    a[key] = b[key]\n\t  }\n\t  return a\n\t}\n\t\n\t/*  */\n\t\n\tfunction createMatcher (routes) {\n\t  var ref = createRouteMap(routes);\n\t  var pathMap = ref.pathMap;\n\t  var nameMap = ref.nameMap;\n\t\n\t  function match (\n\t    raw,\n\t    currentRoute,\n\t    redirectedFrom\n\t  ) {\n\t    var location = normalizeLocation(raw, currentRoute)\n\t    var name = location.name;\n\t\n\t    if (name) {\n\t      var record = nameMap[name]\n\t      var paramNames = getRouteRegex(record.path).keys\n\t        .filter(function (key) { return !key.optional; })\n\t        .map(function (key) { return key.name; })\n\t\n\t      if (typeof location.params !== 'object') {\n\t        location.params = {}\n\t      }\n\t\n\t      if (currentRoute && typeof currentRoute.params === 'object') {\n\t        for (var key in currentRoute.params) {\n\t          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n\t            location.params[key] = currentRoute.params[key]\n\t          }\n\t        }\n\t      }\n\t\n\t      if (record) {\n\t        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"))\n\t        return _createRoute(record, location, redirectedFrom)\n\t      }\n\t    } else if (location.path) {\n\t      location.params = {}\n\t      for (var path in pathMap) {\n\t        if (matchRoute(path, location.params, location.path)) {\n\t          return _createRoute(pathMap[path], location, redirectedFrom)\n\t        }\n\t      }\n\t    }\n\t    // no match\n\t    return _createRoute(null, location)\n\t  }\n\t\n\t  function redirect (\n\t    record,\n\t    location\n\t  ) {\n\t    var originalRedirect = record.redirect\n\t    var redirect = typeof originalRedirect === 'function'\n\t        ? originalRedirect(createRoute(record, location))\n\t        : originalRedirect\n\t\n\t    if (typeof redirect === 'string') {\n\t      redirect = { path: redirect }\n\t    }\n\t\n\t    if (!redirect || typeof redirect !== 'object') {\n\t      (\"production\") !== 'production' && warn(\n\t        false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n\t      )\n\t      return _createRoute(null, location)\n\t    }\n\t\n\t    var re = redirect\n\t    var name = re.name;\n\t    var path = re.path;\n\t    var query = location.query;\n\t    var hash = location.hash;\n\t    var params = location.params;\n\t    query = re.hasOwnProperty('query') ? re.query : query\n\t    hash = re.hasOwnProperty('hash') ? re.hash : hash\n\t    params = re.hasOwnProperty('params') ? re.params : params\n\t\n\t    if (name) {\n\t      // resolved named direct\n\t      var targetRecord = nameMap[name]\n\t      if (false) {\n\t        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"))\n\t      }\n\t      return match({\n\t        _normalized: true,\n\t        name: name,\n\t        query: query,\n\t        hash: hash,\n\t        params: params\n\t      }, undefined, location)\n\t    } else if (path) {\n\t      // 1. resolve relative redirect\n\t      var rawPath = resolveRecordPath(path, record)\n\t      // 2. resolve params\n\t      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"))\n\t      // 3. rematch with existing query and hash\n\t      return match({\n\t        _normalized: true,\n\t        path: resolvedPath,\n\t        query: query,\n\t        hash: hash\n\t      }, undefined, location)\n\t    } else {\n\t      warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))))\n\t      return _createRoute(null, location)\n\t    }\n\t  }\n\t\n\t  function alias (\n\t    record,\n\t    location,\n\t    matchAs\n\t  ) {\n\t    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"))\n\t    var aliasedMatch = match({\n\t      _normalized: true,\n\t      path: aliasedPath\n\t    })\n\t    if (aliasedMatch) {\n\t      var matched = aliasedMatch.matched\n\t      var aliasedRecord = matched[matched.length - 1]\n\t      location.params = aliasedMatch.params\n\t      return _createRoute(aliasedRecord, location)\n\t    }\n\t    return _createRoute(null, location)\n\t  }\n\t\n\t  function _createRoute (\n\t    record,\n\t    location,\n\t    redirectedFrom\n\t  ) {\n\t    if (record && record.redirect) {\n\t      return redirect(record, redirectedFrom || location)\n\t    }\n\t    if (record && record.matchAs) {\n\t      return alias(record, location, record.matchAs)\n\t    }\n\t    return createRoute(record, location, redirectedFrom)\n\t  }\n\t\n\t  return match\n\t}\n\t\n\tfunction matchRoute (\n\t  path,\n\t  params,\n\t  pathname\n\t) {\n\t  var ref = getRouteRegex(path);\n\t  var regexp = ref.regexp;\n\t  var keys = ref.keys;\n\t  var m = pathname.match(regexp)\n\t\n\t  if (!m) {\n\t    return false\n\t  } else if (!params) {\n\t    return true\n\t  }\n\t\n\t  for (var i = 1, len = m.length; i < len; ++i) {\n\t    var key = keys[i - 1]\n\t    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i]\n\t    if (key) { params[key.name] = val }\n\t  }\n\t\n\t  return true\n\t}\n\t\n\tfunction resolveRecordPath (path, record) {\n\t  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n\t}\n\t\n\t/*  */\n\t\n\tvar inBrowser = typeof window !== 'undefined'\n\t\n\tvar supportsHistory = inBrowser && (function () {\n\t  var ua = window.navigator.userAgent\n\t\n\t  if (\n\t    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n\t    ua.indexOf('Mobile Safari') !== -1 &&\n\t    ua.indexOf('Chrome') === -1 &&\n\t    ua.indexOf('Windows Phone') === -1\n\t  ) {\n\t    return false\n\t  }\n\t\n\t  return window.history && 'pushState' in window.history\n\t})()\n\t\n\t/*  */\n\t\n\tfunction runQueue (queue, fn, cb) {\n\t  var step = function (index) {\n\t    if (index >= queue.length) {\n\t      cb()\n\t    } else {\n\t      if (queue[index]) {\n\t        fn(queue[index], function () {\n\t          step(index + 1)\n\t        })\n\t      } else {\n\t        step(index + 1)\n\t      }\n\t    }\n\t  }\n\t  step(0)\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar History = function History (router, base) {\n\t  this.router = router\n\t  this.base = normalizeBase(base)\n\t  // start with a route object that stands for \"nowhere\"\n\t  this.current = START\n\t  this.pending = null\n\t};\n\t\n\tHistory.prototype.listen = function listen (cb) {\n\t  this.cb = cb\n\t};\n\t\n\tHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n\t    var this$1 = this;\n\t\n\t  var route = this.router.match(location, this.current)\n\t  this.confirmTransition(route, function () {\n\t    this$1.updateRoute(route)\n\t    onComplete && onComplete(route)\n\t    this$1.ensureURL()\n\t  }, onAbort)\n\t};\n\t\n\tHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n\t    var this$1 = this;\n\t\n\t  var current = this.current\n\t  var abort = function () { onAbort && onAbort() }\n\t  if (isSameRoute(route, current)) {\n\t    this.ensureURL()\n\t    return abort()\n\t  }\n\t\n\t  var ref = resolveQueue(this.current.matched, route.matched);\n\t    var deactivated = ref.deactivated;\n\t    var activated = ref.activated;\n\t\n\t  var queue = [].concat(\n\t    // in-component leave guards\n\t    extractLeaveGuards(deactivated),\n\t    // global before hooks\n\t    this.router.beforeHooks,\n\t    // enter guards\n\t    activated.map(function (m) { return m.beforeEnter; }),\n\t    // async components\n\t    resolveAsyncComponents(activated)\n\t  )\n\t\n\t  this.pending = route\n\t  var iterator = function (hook, next) {\n\t    if (this$1.pending !== route) {\n\t      return abort()\n\t    }\n\t    hook(route, current, function (to) {\n\t      if (to === false) {\n\t        // next(false) -> abort navigation, ensure current URL\n\t        this$1.ensureURL(true)\n\t        abort()\n\t      } else if (typeof to === 'string' || typeof to === 'object') {\n\t        // next('/') or next({ path: '/' }) -> redirect\n\t        (typeof to === 'object' && to.replace) ? this$1.replace(to) : this$1.push(to)\n\t        abort()\n\t      } else {\n\t        // confirm transition and pass on the value\n\t        next(to)\n\t      }\n\t    })\n\t  }\n\t\n\t  runQueue(queue, iterator, function () {\n\t    var postEnterCbs = []\n\t    var enterGuards = extractEnterGuards(activated, postEnterCbs, function () {\n\t      return this$1.current === route\n\t    })\n\t    // wait until async components are resolved before\n\t    // extracting in-component enter guards\n\t    runQueue(enterGuards, iterator, function () {\n\t      if (this$1.pending !== route) {\n\t        return abort()\n\t      }\n\t      this$1.pending = null\n\t      onComplete(route)\n\t      if (this$1.router.app) {\n\t        this$1.router.app.$nextTick(function () {\n\t          postEnterCbs.forEach(function (cb) { return cb(); })\n\t        })\n\t      }\n\t    })\n\t  })\n\t};\n\t\n\tHistory.prototype.updateRoute = function updateRoute (route) {\n\t  var prev = this.current\n\t  this.current = route\n\t  this.cb && this.cb(route)\n\t  this.router.afterHooks.forEach(function (hook) {\n\t    hook && hook(route, prev)\n\t  })\n\t};\n\t\n\tfunction normalizeBase (base) {\n\t  if (!base) {\n\t    if (inBrowser) {\n\t      // respect <base> tag\n\t      var baseEl = document.querySelector('base')\n\t      base = baseEl ? baseEl.getAttribute('href') : '/'\n\t    } else {\n\t      base = '/'\n\t    }\n\t  }\n\t  // make sure there's the starting slash\n\t  if (base.charAt(0) !== '/') {\n\t    base = '/' + base\n\t  }\n\t  // remove trailing slash\n\t  return base.replace(/\\/$/, '')\n\t}\n\t\n\tfunction resolveQueue (\n\t  current,\n\t  next\n\t) {\n\t  var i\n\t  var max = Math.max(current.length, next.length)\n\t  for (i = 0; i < max; i++) {\n\t    if (current[i] !== next[i]) {\n\t      break\n\t    }\n\t  }\n\t  return {\n\t    activated: next.slice(i),\n\t    deactivated: current.slice(i)\n\t  }\n\t}\n\t\n\tfunction extractGuard (\n\t  def,\n\t  key\n\t) {\n\t  if (typeof def !== 'function') {\n\t    // extend now so that global mixins are applied.\n\t    def = _Vue.extend(def)\n\t  }\n\t  return def.options[key]\n\t}\n\t\n\tfunction extractLeaveGuards (matched) {\n\t  return flatten(flatMapComponents(matched, function (def, instance) {\n\t    var guard = extractGuard(def, 'beforeRouteLeave')\n\t    if (guard) {\n\t      return Array.isArray(guard)\n\t        ? guard.map(function (guard) { return wrapLeaveGuard(guard, instance); })\n\t        : wrapLeaveGuard(guard, instance)\n\t    }\n\t  }).reverse())\n\t}\n\t\n\tfunction wrapLeaveGuard (\n\t  guard,\n\t  instance\n\t) {\n\t  return function routeLeaveGuard () {\n\t    return guard.apply(instance, arguments)\n\t  }\n\t}\n\t\n\tfunction extractEnterGuards (\n\t  matched,\n\t  cbs,\n\t  isValid\n\t) {\n\t  return flatten(flatMapComponents(matched, function (def, _, match, key) {\n\t    var guard = extractGuard(def, 'beforeRouteEnter')\n\t    if (guard) {\n\t      return Array.isArray(guard)\n\t        ? guard.map(function (guard) { return wrapEnterGuard(guard, cbs, match, key, isValid); })\n\t        : wrapEnterGuard(guard, cbs, match, key, isValid)\n\t    }\n\t  }))\n\t}\n\t\n\tfunction wrapEnterGuard (\n\t  guard,\n\t  cbs,\n\t  match,\n\t  key,\n\t  isValid\n\t) {\n\t  return function routeEnterGuard (to, from, next) {\n\t    return guard(to, from, function (cb) {\n\t      next(cb)\n\t      if (typeof cb === 'function') {\n\t        cbs.push(function () {\n\t          // #750\n\t          // if a router-view is wrapped with an out-in transition,\n\t          // the instance may not have been registered at this time.\n\t          // we will need to poll for registration until current route\n\t          // is no longer valid.\n\t          poll(cb, match.instances, key, isValid)\n\t        })\n\t      }\n\t    })\n\t  }\n\t}\n\t\n\tfunction poll (\n\t  cb, // somehow flow cannot infer this is a function\n\t  instances,\n\t  key,\n\t  isValid\n\t) {\n\t  if (instances[key]) {\n\t    cb(instances[key])\n\t  } else if (isValid()) {\n\t    setTimeout(function () {\n\t      poll(cb, instances, key, isValid)\n\t    }, 16)\n\t  }\n\t}\n\t\n\tfunction resolveAsyncComponents (matched) {\n\t  return flatMapComponents(matched, function (def, _, match, key) {\n\t    // if it's a function and doesn't have Vue options attached,\n\t    // assume it's an async component resolve function.\n\t    // we are not using Vue's default async resolving mechanism because\n\t    // we want to halt the navigation until the incoming component has been\n\t    // resolved.\n\t    if (typeof def === 'function' && !def.options) {\n\t      return function (to, from, next) {\n\t        var resolve = function (resolvedDef) {\n\t          match.components[key] = resolvedDef\n\t          next()\n\t        }\n\t\n\t        var reject = function (reason) {\n\t          warn(false, (\"Failed to resolve async component \" + key + \": \" + reason))\n\t          next(false)\n\t        }\n\t\n\t        var res = def(resolve, reject)\n\t        if (res && typeof res.then === 'function') {\n\t          res.then(resolve, reject)\n\t        }\n\t      }\n\t    }\n\t  })\n\t}\n\t\n\tfunction flatMapComponents (\n\t  matched,\n\t  fn\n\t) {\n\t  return flatten(matched.map(function (m) {\n\t    return Object.keys(m.components).map(function (key) { return fn(\n\t      m.components[key],\n\t      m.instances[key],\n\t      m, key\n\t    ); })\n\t  }))\n\t}\n\t\n\tfunction flatten (arr) {\n\t  return Array.prototype.concat.apply([], arr)\n\t}\n\t\n\t/*  */\n\t\n\tvar positionStore = Object.create(null)\n\t\n\tfunction saveScrollPosition (key) {\n\t  if (!key) { return }\n\t  positionStore[key] = {\n\t    x: window.pageXOffset,\n\t    y: window.pageYOffset\n\t  }\n\t}\n\t\n\tfunction getScrollPosition (key) {\n\t  if (!key) { return }\n\t  return positionStore[key]\n\t}\n\t\n\tfunction getElementPosition (el) {\n\t  var docRect = document.documentElement.getBoundingClientRect()\n\t  var elRect = el.getBoundingClientRect()\n\t  return {\n\t    x: elRect.left - docRect.left,\n\t    y: elRect.top - docRect.top\n\t  }\n\t}\n\t\n\tfunction isValidPosition (obj) {\n\t  return isNumber(obj.x) || isNumber(obj.y)\n\t}\n\t\n\tfunction normalizePosition (obj) {\n\t  return {\n\t    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n\t    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n\t  }\n\t}\n\t\n\tfunction isNumber (v) {\n\t  return typeof v === 'number'\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar genKey = function () { return String(Date.now()); }\n\tvar _key = genKey()\n\t\n\tvar HTML5History = (function (History) {\n\t  function HTML5History (router, base) {\n\t    var this$1 = this;\n\t\n\t    History.call(this, router, base)\n\t\n\t    var expectScroll = router.options.scrollBehavior\n\t    window.addEventListener('popstate', function (e) {\n\t      _key = e.state && e.state.key\n\t      var current = this$1.current\n\t      this$1.transitionTo(getLocation(this$1.base), function (next) {\n\t        if (expectScroll) {\n\t          this$1.handleScroll(next, current, true)\n\t        }\n\t      })\n\t    })\n\t\n\t    if (expectScroll) {\n\t      window.addEventListener('scroll', function () {\n\t        saveScrollPosition(_key)\n\t      })\n\t    }\n\t  }\n\t\n\t  if ( History ) HTML5History.__proto__ = History;\n\t  HTML5History.prototype = Object.create( History && History.prototype );\n\t  HTML5History.prototype.constructor = HTML5History;\n\t\n\t  HTML5History.prototype.go = function go (n) {\n\t    window.history.go(n)\n\t  };\n\t\n\t  HTML5History.prototype.push = function push (location) {\n\t    var this$1 = this;\n\t\n\t    var current = this.current\n\t    this.transitionTo(location, function (route) {\n\t      pushState(cleanPath(this$1.base + route.fullPath))\n\t      this$1.handleScroll(route, current, false)\n\t    })\n\t  };\n\t\n\t  HTML5History.prototype.replace = function replace (location) {\n\t    var this$1 = this;\n\t\n\t    var current = this.current\n\t    this.transitionTo(location, function (route) {\n\t      replaceState(cleanPath(this$1.base + route.fullPath))\n\t      this$1.handleScroll(route, current, false)\n\t    })\n\t  };\n\t\n\t  HTML5History.prototype.ensureURL = function ensureURL (push) {\n\t    if (getLocation(this.base) !== this.current.fullPath) {\n\t      var current = cleanPath(this.base + this.current.fullPath)\n\t      push ? pushState(current) : replaceState(current)\n\t    }\n\t  };\n\t\n\t  HTML5History.prototype.handleScroll = function handleScroll (to, from, isPop) {\n\t    var router = this.router\n\t    if (!router.app) {\n\t      return\n\t    }\n\t\n\t    var behavior = router.options.scrollBehavior\n\t    if (!behavior) {\n\t      return\n\t    }\n\t    if (false) {\n\t      assert(typeof behavior === 'function', \"scrollBehavior must be a function\")\n\t    }\n\t\n\t    // wait until re-render finishes before scrolling\n\t    router.app.$nextTick(function () {\n\t      var position = getScrollPosition(_key)\n\t      var shouldScroll = behavior(to, from, isPop ? position : null)\n\t      if (!shouldScroll) {\n\t        return\n\t      }\n\t      var isObject = typeof shouldScroll === 'object'\n\t      if (isObject && typeof shouldScroll.selector === 'string') {\n\t        var el = document.querySelector(shouldScroll.selector)\n\t        if (el) {\n\t          position = getElementPosition(el)\n\t        } else if (isValidPosition(shouldScroll)) {\n\t          position = normalizePosition(shouldScroll)\n\t        }\n\t      } else if (isObject && isValidPosition(shouldScroll)) {\n\t        position = normalizePosition(shouldScroll)\n\t      }\n\t\n\t      if (position) {\n\t        window.scrollTo(position.x, position.y)\n\t      }\n\t    })\n\t  };\n\t\n\t  return HTML5History;\n\t}(History));\n\t\n\tfunction getLocation (base) {\n\t  var path = window.location.pathname\n\t  if (base && path.indexOf(base) === 0) {\n\t    path = path.slice(base.length)\n\t  }\n\t  return (path || '/') + window.location.search + window.location.hash\n\t}\n\t\n\tfunction pushState (url, replace) {\n\t  // try...catch the pushState call to get around Safari\n\t  // DOM Exception 18 where it limits to 100 pushState calls\n\t  var history = window.history\n\t  try {\n\t    if (replace) {\n\t      history.replaceState({ key: _key }, '', url)\n\t    } else {\n\t      _key = genKey()\n\t      history.pushState({ key: _key }, '', url)\n\t    }\n\t    saveScrollPosition(_key)\n\t  } catch (e) {\n\t    window.location[replace ? 'assign' : 'replace'](url)\n\t  }\n\t}\n\t\n\tfunction replaceState (url) {\n\t  pushState(url, true)\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar HashHistory = (function (History) {\n\t  function HashHistory (router, base, fallback) {\n\t    History.call(this, router, base)\n\t    // check history fallback deeplinking\n\t    if (fallback && this.checkFallback()) {\n\t      return\n\t    }\n\t    ensureSlash()\n\t  }\n\t\n\t  if ( History ) HashHistory.__proto__ = History;\n\t  HashHistory.prototype = Object.create( History && History.prototype );\n\t  HashHistory.prototype.constructor = HashHistory;\n\t\n\t  HashHistory.prototype.checkFallback = function checkFallback () {\n\t    var location = getLocation(this.base)\n\t    if (!/^\\/#/.test(location)) {\n\t      window.location.replace(\n\t        cleanPath(this.base + '/#' + location)\n\t      )\n\t      return true\n\t    }\n\t  };\n\t\n\t  HashHistory.prototype.onHashChange = function onHashChange () {\n\t    if (!ensureSlash()) {\n\t      return\n\t    }\n\t    this.transitionTo(getHash(), function (route) {\n\t      replaceHash(route.fullPath)\n\t    })\n\t  };\n\t\n\t  HashHistory.prototype.push = function push (location) {\n\t    this.transitionTo(location, function (route) {\n\t      pushHash(route.fullPath)\n\t    })\n\t  };\n\t\n\t  HashHistory.prototype.replace = function replace (location) {\n\t    this.transitionTo(location, function (route) {\n\t      replaceHash(route.fullPath)\n\t    })\n\t  };\n\t\n\t  HashHistory.prototype.go = function go (n) {\n\t    window.history.go(n)\n\t  };\n\t\n\t  HashHistory.prototype.ensureURL = function ensureURL (push) {\n\t    var current = this.current.fullPath\n\t    if (getHash() !== current) {\n\t      push ? pushHash(current) : replaceHash(current)\n\t    }\n\t  };\n\t\n\t  return HashHistory;\n\t}(History));\n\t\n\tfunction ensureSlash () {\n\t  var path = getHash()\n\t  if (path.charAt(0) === '/') {\n\t    return true\n\t  }\n\t  replaceHash('/' + path)\n\t  return false\n\t}\n\t\n\tfunction getHash () {\n\t  // We can't use window.location.hash here because it's not\n\t  // consistent across browsers - Firefox will pre-decode it!\n\t  var href = window.location.href\n\t  var index = href.indexOf('#')\n\t  return index === -1 ? '' : href.slice(index + 1)\n\t}\n\t\n\tfunction pushHash (path) {\n\t  window.location.hash = path\n\t}\n\t\n\tfunction replaceHash (path) {\n\t  var i = window.location.href.indexOf('#')\n\t  window.location.replace(\n\t    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n\t  )\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar AbstractHistory = (function (History) {\n\t  function AbstractHistory (router) {\n\t    History.call(this, router)\n\t    this.stack = []\n\t    this.index = -1\n\t  }\n\t\n\t  if ( History ) AbstractHistory.__proto__ = History;\n\t  AbstractHistory.prototype = Object.create( History && History.prototype );\n\t  AbstractHistory.prototype.constructor = AbstractHistory;\n\t\n\t  AbstractHistory.prototype.push = function push (location) {\n\t    var this$1 = this;\n\t\n\t    this.transitionTo(location, function (route) {\n\t      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route)\n\t      this$1.index++\n\t    })\n\t  };\n\t\n\t  AbstractHistory.prototype.replace = function replace (location) {\n\t    var this$1 = this;\n\t\n\t    this.transitionTo(location, function (route) {\n\t      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route)\n\t    })\n\t  };\n\t\n\t  AbstractHistory.prototype.go = function go (n) {\n\t    var this$1 = this;\n\t\n\t    var targetIndex = this.index + n\n\t    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n\t      return\n\t    }\n\t    var route = this.stack[targetIndex]\n\t    this.confirmTransition(route, function () {\n\t      this$1.index = targetIndex\n\t      this$1.updateRoute(route)\n\t    })\n\t  };\n\t\n\t  AbstractHistory.prototype.ensureURL = function ensureURL () {\n\t    // noop\n\t  };\n\t\n\t  return AbstractHistory;\n\t}(History));\n\t\n\t/*  */\n\t\n\tvar VueRouter = function VueRouter (options) {\n\t  if ( options === void 0 ) options = {};\n\t\n\t  this.app = null\n\t  this.options = options\n\t  this.beforeHooks = []\n\t  this.afterHooks = []\n\t  this.match = createMatcher(options.routes || [])\n\t\n\t  var mode = options.mode || 'hash'\n\t  this.fallback = mode === 'history' && !supportsHistory\n\t  if (this.fallback) {\n\t    mode = 'hash'\n\t  }\n\t  if (!inBrowser) {\n\t    mode = 'abstract'\n\t  }\n\t  this.mode = mode\n\t\n\t  switch (mode) {\n\t    case 'history':\n\t      this.history = new HTML5History(this, options.base)\n\t      break\n\t    case 'hash':\n\t      this.history = new HashHistory(this, options.base, this.fallback)\n\t      break\n\t    case 'abstract':\n\t      this.history = new AbstractHistory(this)\n\t      break\n\t    default:\n\t      (\"production\") !== 'production' && assert(false, (\"invalid mode: \" + mode))\n\t  }\n\t};\n\t\n\tvar prototypeAccessors = { currentRoute: {} };\n\t\n\tprototypeAccessors.currentRoute.get = function () {\n\t  return this.history && this.history.current\n\t};\n\t\n\tVueRouter.prototype.init = function init (app /* Vue component instance */) {\n\t    var this$1 = this;\n\t\n\t  (\"production\") !== 'production' && assert(\n\t    install.installed,\n\t    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n\t    \"before creating root instance.\"\n\t  )\n\t\n\t  this.app = app\n\t\n\t  var history = this.history\n\t\n\t  if (history instanceof HTML5History) {\n\t    history.transitionTo(getLocation(history.base))\n\t  } else if (history instanceof HashHistory) {\n\t    var setupHashListener = function () {\n\t      window.addEventListener('hashchange', function () {\n\t        history.onHashChange()\n\t      })\n\t    }\n\t    history.transitionTo(getHash(), setupHashListener, setupHashListener)\n\t  }\n\t\n\t  history.listen(function (route) {\n\t    this$1.app._route = route\n\t  })\n\t};\n\t\n\tVueRouter.prototype.beforeEach = function beforeEach (fn) {\n\t  this.beforeHooks.push(fn)\n\t};\n\t\n\tVueRouter.prototype.afterEach = function afterEach (fn) {\n\t  this.afterHooks.push(fn)\n\t};\n\t\n\tVueRouter.prototype.push = function push (location) {\n\t  this.history.push(location)\n\t};\n\t\n\tVueRouter.prototype.replace = function replace (location) {\n\t  this.history.replace(location)\n\t};\n\t\n\tVueRouter.prototype.go = function go (n) {\n\t  this.history.go(n)\n\t};\n\t\n\tVueRouter.prototype.back = function back () {\n\t  this.go(-1)\n\t};\n\t\n\tVueRouter.prototype.forward = function forward () {\n\t  this.go(1)\n\t};\n\t\n\tVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n\t  var route = to\n\t    ? this.resolve(to).resolved\n\t    : this.currentRoute\n\t  if (!route) {\n\t    return []\n\t  }\n\t  return [].concat.apply([], route.matched.map(function (m) {\n\t    return Object.keys(m.components).map(function (key) {\n\t      return m.components[key]\n\t    })\n\t  }))\n\t};\n\t\n\tVueRouter.prototype.resolve = function resolve (\n\t  to,\n\t  current,\n\t  append\n\t) {\n\t  var normalizedTo = normalizeLocation(to, current || this.history.current, append)\n\t  var resolved = this.match(normalizedTo, current)\n\t  var fullPath = resolved.redirectedFrom || resolved.fullPath\n\t  var base = this.history.base\n\t  var href = createHref(base, fullPath, this.mode)\n\t  return {\n\t    normalizedTo: normalizedTo,\n\t    resolved: resolved,\n\t    href: href\n\t  }\n\t};\n\t\n\tObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\t\n\tfunction createHref (base, fullPath, mode) {\n\t  var path = mode === 'hash' ? '#' + fullPath : fullPath\n\t  return base ? cleanPath(base + '/' + path) : path\n\t}\n\t\n\tVueRouter.install = install\n\t\n\tif (inBrowser && window.Vue) {\n\t  window.Vue.use(VueRouter)\n\t}\n\t\n\tmodule.exports = VueRouter;\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v2.1.4\n\t * (c) 2014-2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\t/*  */\n\t\n\t/**\n\t * Convert a value to a string that is actually rendered.\n\t */\n\tfunction _toString (val) {\n\t  return val == null\n\t    ? ''\n\t    : typeof val === 'object'\n\t      ? JSON.stringify(val, null, 2)\n\t      : String(val)\n\t}\n\t\n\t/**\n\t * Convert a input value to a number for persistence.\n\t * If the conversion fails, return original string.\n\t */\n\tfunction toNumber (val) {\n\t  var n = parseFloat(val, 10);\n\t  return (n || n === 0) ? n : val\n\t}\n\t\n\t/**\n\t * Make a map and return a function for checking if a key\n\t * is in that map.\n\t */\n\tfunction makeMap (\n\t  str,\n\t  expectsLowerCase\n\t) {\n\t  var map = Object.create(null);\n\t  var list = str.split(',');\n\t  for (var i = 0; i < list.length; i++) {\n\t    map[list[i]] = true;\n\t  }\n\t  return expectsLowerCase\n\t    ? function (val) { return map[val.toLowerCase()]; }\n\t    : function (val) { return map[val]; }\n\t}\n\t\n\t/**\n\t * Check if a tag is a built-in tag.\n\t */\n\tvar isBuiltInTag = makeMap('slot,component', true);\n\t\n\t/**\n\t * Remove an item from an array\n\t */\n\tfunction remove$1 (arr, item) {\n\t  if (arr.length) {\n\t    var index = arr.indexOf(item);\n\t    if (index > -1) {\n\t      return arr.splice(index, 1)\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check whether the object has the property.\n\t */\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tfunction hasOwn (obj, key) {\n\t  return hasOwnProperty.call(obj, key)\n\t}\n\t\n\t/**\n\t * Check if value is primitive\n\t */\n\tfunction isPrimitive (value) {\n\t  return typeof value === 'string' || typeof value === 'number'\n\t}\n\t\n\t/**\n\t * Create a cached version of a pure function.\n\t */\n\tfunction cached (fn) {\n\t  var cache = Object.create(null);\n\t  return function cachedFn (str) {\n\t    var hit = cache[str];\n\t    return hit || (cache[str] = fn(str))\n\t  }\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t */\n\tvar camelizeRE = /-(\\w)/g;\n\tvar camelize = cached(function (str) {\n\t  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n\t});\n\t\n\t/**\n\t * Capitalize a string.\n\t */\n\tvar capitalize = cached(function (str) {\n\t  return str.charAt(0).toUpperCase() + str.slice(1)\n\t});\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t */\n\tvar hyphenateRE = /([^-])([A-Z])/g;\n\tvar hyphenate = cached(function (str) {\n\t  return str\n\t    .replace(hyphenateRE, '$1-$2')\n\t    .replace(hyphenateRE, '$1-$2')\n\t    .toLowerCase()\n\t});\n\t\n\t/**\n\t * Simple bind, faster than native\n\t */\n\tfunction bind$1 (fn, ctx) {\n\t  function boundFn (a) {\n\t    var l = arguments.length;\n\t    return l\n\t      ? l > 1\n\t        ? fn.apply(ctx, arguments)\n\t        : fn.call(ctx, a)\n\t      : fn.call(ctx)\n\t  }\n\t  // record original fn length\n\t  boundFn._length = fn.length;\n\t  return boundFn\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t */\n\tfunction toArray (list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t */\n\tfunction extend (to, _from) {\n\t  for (var key in _from) {\n\t    to[key] = _from[key];\n\t  }\n\t  return to\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t */\n\tfunction isObject (obj) {\n\t  return obj !== null && typeof obj === 'object'\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t */\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\tfunction isPlainObject (obj) {\n\t  return toString.call(obj) === OBJECT_STRING\n\t}\n\t\n\t/**\n\t * Merge an Array of Objects into a single Object.\n\t */\n\tfunction toObject (arr) {\n\t  var res = {};\n\t  for (var i = 0; i < arr.length; i++) {\n\t    if (arr[i]) {\n\t      extend(res, arr[i]);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\t/**\n\t * Perform no operation.\n\t */\n\tfunction noop () {}\n\t\n\t/**\n\t * Always return false.\n\t */\n\tvar no = function () { return false; };\n\t\n\t/**\n\t * Generate a static keys string from compiler modules.\n\t */\n\tfunction genStaticKeys (modules) {\n\t  return modules.reduce(function (keys, m) {\n\t    return keys.concat(m.staticKeys || [])\n\t  }, []).join(',')\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t */\n\tfunction looseEqual (a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (\n\t    isObject(a) && isObject(b)\n\t      ? JSON.stringify(a) === JSON.stringify(b)\n\t      : false\n\t  )\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tfunction looseIndexOf (arr, val) {\n\t  for (var i = 0; i < arr.length; i++) {\n\t    if (looseEqual(arr[i], val)) { return i }\n\t  }\n\t  return -1\n\t}\n\t\n\t/*  */\n\t\n\tvar config = {\n\t  /**\n\t   * Option merge strategies (used in core/util/options)\n\t   */\n\t  optionMergeStrategies: Object.create(null),\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   */\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to enable devtools\n\t   */\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Error handler for watcher errors\n\t   */\n\t  errorHandler: null,\n\t\n\t  /**\n\t   * Ignore certain custom elements\n\t   */\n\t  ignoredElements: null,\n\t\n\t  /**\n\t   * Custom user key aliases for v-on\n\t   */\n\t  keyCodes: Object.create(null),\n\t\n\t  /**\n\t   * Check if a tag is reserved so that it cannot be registered as a\n\t   * component. This is platform-dependent and may be overwritten.\n\t   */\n\t  isReservedTag: no,\n\t\n\t  /**\n\t   * Check if a tag is an unknown element.\n\t   * Platform-dependent.\n\t   */\n\t  isUnknownElement: no,\n\t\n\t  /**\n\t   * Get the namespace of an element\n\t   */\n\t  getTagNamespace: noop,\n\t\n\t  /**\n\t   * Check if an attribute must be bound using property, e.g. value\n\t   * Platform-dependent.\n\t   */\n\t  mustUseProp: no,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   */\n\t  _assetTypes: [\n\t    'component',\n\t    'directive',\n\t    'filter'\n\t  ],\n\t\n\t  /**\n\t   * List of lifecycle hooks.\n\t   */\n\t  _lifecycleHooks: [\n\t    'beforeCreate',\n\t    'created',\n\t    'beforeMount',\n\t    'mounted',\n\t    'beforeUpdate',\n\t    'updated',\n\t    'beforeDestroy',\n\t    'destroyed',\n\t    'activated',\n\t    'deactivated'\n\t  ],\n\t\n\t  /**\n\t   * Max circular updates allowed in a scheduler flush cycle.\n\t   */\n\t  _maxUpdateCount: 100\n\t};\n\t\n\t/*  */\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t */\n\tfunction isReserved (str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F\n\t}\n\t\n\t/**\n\t * Define a property.\n\t */\n\tfunction def (obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Parse simple path.\n\t */\n\tvar bailRE = /[^\\w.$]/;\n\tfunction parsePath (path) {\n\t  if (bailRE.test(path)) {\n\t    return\n\t  } else {\n\t    var segments = path.split('.');\n\t    return function (obj) {\n\t      for (var i = 0; i < segments.length; i++) {\n\t        if (!obj) { return }\n\t        obj = obj[segments[i]];\n\t      }\n\t      return obj\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t/* globals MutationObserver */\n\t\n\t// can we use __proto__?\n\tvar hasProto = '__proto__' in {};\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined';\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && /msie|trident/.test(UA);\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isEdge = UA && UA.indexOf('edge/') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\t\n\t// this needs to be lazy-evaled because vue may be required before\n\t// vue-server-renderer can set VUE_ENV\n\tvar _isServer;\n\tvar isServerRendering = function () {\n\t  if (_isServer === undefined) {\n\t    /* istanbul ignore if */\n\t    if (!inBrowser && typeof global !== 'undefined') {\n\t      // detect presence of vue-server-renderer and avoid\n\t      // Webpack shimming the process\n\t      _isServer = global['process'].env.VUE_ENV === 'server';\n\t    } else {\n\t      _isServer = false;\n\t    }\n\t  }\n\t  return _isServer\n\t};\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t/* istanbul ignore next */\n\tfunction isNative (Ctor) {\n\t  return /native code/.test(Ctor.toString())\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously.\n\t */\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t\n\t  function nextTickHandler () {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks.length = 0;\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  // the nextTick behavior leverages the microtask queue, which can be accessed\n\t  // via either native Promise.then or MutationObserver.\n\t  // MutationObserver has wider support, however it is seriously bugged in\n\t  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n\t  // completely stops working after triggering a few times... so, if native\n\t  // Promise is available, we will use it:\n\t  /* istanbul ignore if */\n\t  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n\t    var p = Promise.resolve();\n\t    var logError = function (err) { console.error(err); };\n\t    timerFunc = function () {\n\t      p.then(nextTickHandler).catch(logError);\n\t      // in problematic UIWebViews, Promise.then doesn't completely break, but\n\t      // it can get stuck in a weird state where callbacks are pushed into the\n\t      // microtask queue but the queue isn't being flushed, until the browser\n\t      // needs to do some other work, e.g. handle a timer. Therefore we can\n\t      // \"force\" the microtask queue to be flushed by adding an empty timer.\n\t      if (isIOS) { setTimeout(noop); }\n\t    };\n\t  } else if (typeof MutationObserver !== 'undefined' && (\n\t    isNative(MutationObserver) ||\n\t    // PhantomJS and iOS 7.x\n\t    MutationObserver.toString() === '[object MutationObserverConstructor]'\n\t  )) {\n\t    // use MutationObserver where native Promise is not available,\n\t    // e.g. PhantomJS IE11, iOS7, Android 4.4\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(String(counter));\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = String(counter);\n\t    };\n\t  } else {\n\t    // fallback to setTimeout\n\t    /* istanbul ignore next */\n\t    timerFunc = function () {\n\t      setTimeout(nextTickHandler, 0);\n\t    };\n\t  }\n\t\n\t  return function queueNextTick (cb, ctx) {\n\t    var _resolve;\n\t    callbacks.push(function () {\n\t      if (cb) { cb.call(ctx); }\n\t      if (_resolve) { _resolve(ctx); }\n\t    });\n\t    if (!pending) {\n\t      pending = true;\n\t      timerFunc();\n\t    }\n\t    if (!cb && typeof Promise !== 'undefined') {\n\t      return new Promise(function (resolve) {\n\t        _resolve = resolve;\n\t      })\n\t    }\n\t  }\n\t})();\n\t\n\tvar _Set;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && isNative(Set)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = (function () {\n\t    function Set () {\n\t      this.set = Object.create(null);\n\t    }\n\t    Set.prototype.has = function has (key) {\n\t      return this.set[key] !== undefined\n\t    };\n\t    Set.prototype.add = function add (key) {\n\t      this.set[key] = 1;\n\t    };\n\t    Set.prototype.clear = function clear () {\n\t      this.set = Object.create(null);\n\t    };\n\t\n\t    return Set;\n\t  }());\n\t}\n\t\n\tvar warn = noop;\n\tvar formatComponentName;\n\t\n\tif (false) {\n\t  var hasConsole = typeof console !== 'undefined';\n\t\n\t  warn = function (msg, vm) {\n\t    if (hasConsole && (!config.silent)) {\n\t      console.error(\"[Vue warn]: \" + msg + \" \" + (\n\t        vm ? formatLocation(formatComponentName(vm)) : ''\n\t      ));\n\t    }\n\t  };\n\t\n\t  formatComponentName = function (vm) {\n\t    if (vm.$root === vm) {\n\t      return 'root instance'\n\t    }\n\t    var name = vm._isVue\n\t      ? vm.$options.name || vm.$options._componentTag\n\t      : vm.name;\n\t    return (\n\t      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n\t      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n\t    )\n\t  };\n\t\n\t  var formatLocation = function (str) {\n\t    if (str === 'anonymous component') {\n\t      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n\t    }\n\t    return (\"\\n(found in \" + str + \")\")\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t */\n\tvar Dep = function Dep () {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t};\n\t\n\tDep.prototype.addSub = function addSub (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\tDep.prototype.removeSub = function removeSub (sub) {\n\t  remove$1(this.subs, sub);\n\t};\n\t\n\tDep.prototype.depend = function depend () {\n\t  if (Dep.target) {\n\t    Dep.target.addDep(this);\n\t  }\n\t};\n\t\n\tDep.prototype.notify = function notify () {\n\t  // stablize the subscriber list first\n\t  var subs = this.subs.slice();\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\tvar targetStack = [];\n\t\n\tfunction pushTarget (_target) {\n\t  if (Dep.target) { targetStack.push(Dep.target); }\n\t  Dep.target = _target;\n\t}\n\t\n\tfunction popTarget () {\n\t  Dep.target = targetStack.pop();\n\t}\n\t\n\t/*\n\t * not type checking this file because flow doesn't play well with\n\t * dynamically accessing methods on Array prototype\n\t */\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto);[\n\t  'push',\n\t  'pop',\n\t  'shift',\n\t  'unshift',\n\t  'splice',\n\t  'sort',\n\t  'reverse'\n\t]\n\t.forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator () {\n\t    var arguments$1 = arguments;\n\t\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments$1[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break\n\t      case 'unshift':\n\t        inserted = args;\n\t        break\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break\n\t    }\n\t    if (inserted) { ob.observeArray(inserted); }\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result\n\t  });\n\t});\n\t\n\t/*  */\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However when passing down props,\n\t * we don't want to force conversion because the value may be a nested value\n\t * under a frozen data structure. Converting it would defeat the optimization.\n\t */\n\tvar observerState = {\n\t  shouldConvert: true,\n\t  isSettingProps: false\n\t};\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t */\n\tvar Observer = function Observer (value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  this.vmCount = 0;\n\t  def(value, '__ob__', this);\n\t  if (Array.isArray(value)) {\n\t    var augment = hasProto\n\t      ? protoAugment\n\t      : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t};\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t */\n\tObserver.prototype.walk = function walk (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0; i < keys.length; i++) {\n\t    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t */\n\tObserver.prototype.observeArray = function observeArray (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t */\n\tfunction protoAugment (target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * istanbul ignore next\n\t */\n\tfunction copyAugment (target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t */\n\tfunction observe (value) {\n\t  if (!isObject(value)) {\n\t    return\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (\n\t    observerState.shouldConvert &&\n\t    !isServerRendering() &&\n\t    (Array.isArray(value) || isPlainObject(value)) &&\n\t    Object.isExtensible(value) &&\n\t    !value._isVue\n\t  ) {\n\t    ob = new Observer(value);\n\t  }\n\t  return ob\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t */\n\tfunction defineReactive$$1 (\n\t  obj,\n\t  key,\n\t  val,\n\t  customSetter\n\t) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter () {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (Array.isArray(value)) {\n\t          dependArray(value);\n\t        }\n\t      }\n\t      return value\n\t    },\n\t    set: function reactiveSetter (newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      /* eslint-disable no-self-compare */\n\t      if (newVal === value || (newVal !== newVal && value !== value)) {\n\t        return\n\t      }\n\t      /* eslint-enable no-self-compare */\n\t      if (false) {\n\t        customSetter();\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Set a property on an object. Adds the new property and\n\t * triggers change notification if the property doesn't\n\t * already exist.\n\t */\n\tfunction set$1 (obj, key, val) {\n\t  if (Array.isArray(obj)) {\n\t    obj.length = Math.max(obj.length, key);\n\t    obj.splice(key, 1, val);\n\t    return val\n\t  }\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (obj._isVue || (ob && ob.vmCount)) {\n\t    (\"production\") !== 'production' && warn(\n\t      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n\t      'at runtime - declare it upfront in the data option.'\n\t    );\n\t    return\n\t  }\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return\n\t  }\n\t  defineReactive$$1(ob.value, key, val);\n\t  ob.dep.notify();\n\t  return val\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t */\n\tfunction del (obj, key) {\n\t  var ob = obj.__ob__;\n\t  if (obj._isVue || (ob && ob.vmCount)) {\n\t    (\"production\") !== 'production' && warn(\n\t      'Avoid deleting properties on a Vue instance or its root $data ' +\n\t      '- just set it to null.'\n\t    );\n\t    return\n\t  }\n\t  if (!hasOwn(obj, key)) {\n\t    return\n\t  }\n\t  delete obj[key];\n\t  if (!ob) {\n\t    return\n\t  }\n\t  ob.dep.notify();\n\t}\n\t\n\t/**\n\t * Collect dependencies on array elements when the array is touched, since\n\t * we cannot intercept array element access like property getters.\n\t */\n\tfunction dependArray (value) {\n\t  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n\t    e = value[i];\n\t    e && e.__ob__ && e.__ob__.dep.depend();\n\t    if (Array.isArray(e)) {\n\t      dependArray(e);\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t */\n\tvar strats = config.optionMergeStrategies;\n\t\n\t/**\n\t * Options with restrictions\n\t */\n\tif (false) {\n\t  strats.el = strats.propsData = function (parent, child, vm, key) {\n\t    if (!vm) {\n\t      warn(\n\t        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n\t        'creation with the `new` keyword.'\n\t      );\n\t    }\n\t    return defaultStrat(parent, child)\n\t  };\n\t}\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\tfunction mergeData (to, from) {\n\t  if (!from) { return to }\n\t  var key, toVal, fromVal;\n\t  var keys = Object.keys(from);\n\t  for (var i = 0; i < keys.length; i++) {\n\t    key = keys[i];\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set$1(to, key, fromVal);\n\t    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\tstrats.data = function (\n\t  parentVal,\n\t  childVal,\n\t  vm\n\t) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn(\n\t        'The \"data\" option should be a function ' +\n\t        'that returns a per-instance value in component ' +\n\t        'definitions.',\n\t        vm\n\t      );\n\t      return parentVal\n\t    }\n\t    if (!parentVal) {\n\t      return childVal\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn () {\n\t      return mergeData(\n\t        childVal.call(this),\n\t        parentVal.call(this)\n\t      )\n\t    }\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn () {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function'\n\t        ? childVal.call(vm)\n\t        : childVal;\n\t      var defaultData = typeof parentVal === 'function'\n\t        ? parentVal.call(vm)\n\t        : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData)\n\t      } else {\n\t        return defaultData\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\tfunction mergeHook (\n\t  parentVal,\n\t  childVal\n\t) {\n\t  return childVal\n\t    ? parentVal\n\t      ? parentVal.concat(childVal)\n\t      : Array.isArray(childVal)\n\t        ? childVal\n\t        : [childVal]\n\t    : parentVal\n\t}\n\t\n\tconfig._lifecycleHooks.forEach(function (hook) {\n\t  strats[hook] = mergeHook;\n\t});\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\tfunction mergeAssets (parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal\n\t    ? extend(res, childVal)\n\t    : res\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Watchers.\n\t *\n\t * Watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\tstrats.watch = function (parentVal, childVal) {\n\t  /* istanbul ignore if */\n\t  if (!childVal) { return parentVal }\n\t  if (!parentVal) { return childVal }\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !Array.isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent\n\t      ? parent.concat(child)\n\t      : [child];\n\t  }\n\t  return ret\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\tstrats.props =\n\tstrats.methods =\n\tstrats.computed = function (parentVal, childVal) {\n\t  if (!childVal) { return parentVal }\n\t  if (!parentVal) { return childVal }\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\tvar defaultStrat = function (parentVal, childVal) {\n\t  return childVal === undefined\n\t    ? parentVal\n\t    : childVal\n\t};\n\t\n\t/**\n\t * Validate component names\n\t */\n\tfunction checkComponents (options) {\n\t  for (var key in options.components) {\n\t    var lower = key.toLowerCase();\n\t    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n\t      warn(\n\t        'Do not use built-in or reserved HTML elements as component ' +\n\t        'id: ' + key\n\t      );\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t */\n\tfunction normalizeProps (options) {\n\t  var props = options.props;\n\t  if (!props) { return }\n\t  var res = {};\n\t  var i, val, name;\n\t  if (Array.isArray(props)) {\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        name = camelize(val);\n\t        res[name] = { type: null };\n\t      } else if (false) {\n\t        warn('props must be strings when using array syntax.');\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    for (var key in props) {\n\t      val = props[key];\n\t      name = camelize(key);\n\t      res[name] = isPlainObject(val)\n\t        ? val\n\t        : { type: val };\n\t    }\n\t  }\n\t  options.props = res;\n\t}\n\t\n\t/**\n\t * Normalize raw function directives into object format.\n\t */\n\tfunction normalizeDirectives (options) {\n\t  var dirs = options.directives;\n\t  if (dirs) {\n\t    for (var key in dirs) {\n\t      var def = dirs[key];\n\t      if (typeof def === 'function') {\n\t        dirs[key] = { bind: def, update: def };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t */\n\tfunction mergeOptions (\n\t  parent,\n\t  child,\n\t  vm\n\t) {\n\t  if (false) {\n\t    checkComponents(child);\n\t  }\n\t  normalizeProps(child);\n\t  normalizeDirectives(child);\n\t  var extendsFrom = child.extends;\n\t  if (extendsFrom) {\n\t    parent = typeof extendsFrom === 'function'\n\t      ? mergeOptions(parent, extendsFrom.options, vm)\n\t      : mergeOptions(parent, extendsFrom, vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      if (mixin.prototype instanceof Vue$3) {\n\t        mixin = mixin.options;\n\t      }\n\t      parent = mergeOptions(parent, mixin, vm);\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField (key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t */\n\tfunction resolveAsset (\n\t  options,\n\t  type,\n\t  id,\n\t  warnMissing\n\t) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return\n\t  }\n\t  var assets = options[type];\n\t  var res = assets[id] ||\n\t    // camelCase ID\n\t    assets[camelize(id)] ||\n\t    // Pascal Case ID\n\t    assets[capitalize(camelize(id))];\n\t  if (false) {\n\t    warn(\n\t      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n\t      options\n\t    );\n\t  }\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tfunction validateProp (\n\t  key,\n\t  propOptions,\n\t  propsData,\n\t  vm\n\t) {\n\t  var prop = propOptions[key];\n\t  var absent = !hasOwn(propsData, key);\n\t  var value = propsData[key];\n\t  // handle boolean props\n\t  if (isBooleanType(prop.type)) {\n\t    if (absent && !hasOwn(prop, 'default')) {\n\t      value = false;\n\t    } else if (value === '' || value === hyphenate(key)) {\n\t      value = true;\n\t    }\n\t  }\n\t  // check default value\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop, key);\n\t    // since the default value is a fresh copy,\n\t    // make sure to observe it.\n\t    var prevShouldConvert = observerState.shouldConvert;\n\t    observerState.shouldConvert = true;\n\t    observe(value);\n\t    observerState.shouldConvert = prevShouldConvert;\n\t  }\n\t  if (false) {\n\t    assertProp(prop, key, value, vm, absent);\n\t  }\n\t  return value\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t */\n\tfunction getPropDefaultValue (vm, prop, key) {\n\t  // no default, return undefined\n\t  if (!hasOwn(prop, 'default')) {\n\t    return undefined\n\t  }\n\t  var def = prop.default;\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn(\n\t      'Invalid default value for prop \"' + key + '\": ' +\n\t      'Props with type Object/Array must use a factory function ' +\n\t      'to return the default value.',\n\t      vm\n\t    );\n\t  }\n\t  // the raw prop value was also undefined from previous render,\n\t  // return previous default value to avoid unnecessary watcher trigger\n\t  if (vm && vm.$options.propsData &&\n\t    vm.$options.propsData[key] === undefined &&\n\t    vm[key] !== undefined) {\n\t    return vm[key]\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && prop.type !== Function\n\t    ? def.call(vm)\n\t    : def\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t */\n\tfunction assertProp (\n\t  prop,\n\t  name,\n\t  value,\n\t  vm,\n\t  absent\n\t) {\n\t  if (prop.required && absent) {\n\t    warn(\n\t      'Missing required prop: \"' + name + '\"',\n\t      vm\n\t    );\n\t    return\n\t  }\n\t  if (value == null && !prop.required) {\n\t    return\n\t  }\n\t  var type = prop.type;\n\t  var valid = !type || type === true;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!Array.isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    warn(\n\t      'Invalid prop: type check failed for prop \"' + name + '\".' +\n\t      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n\t      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n\t      vm\n\t    );\n\t    return\n\t  }\n\t  var validator = prop.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      warn(\n\t        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n\t        vm\n\t      );\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t */\n\tfunction assertType (value, type) {\n\t  var valid;\n\t  var expectedType = getType(type);\n\t  if (expectedType === 'String') {\n\t    valid = typeof value === (expectedType = 'string');\n\t  } else if (expectedType === 'Number') {\n\t    valid = typeof value === (expectedType = 'number');\n\t  } else if (expectedType === 'Boolean') {\n\t    valid = typeof value === (expectedType = 'boolean');\n\t  } else if (expectedType === 'Function') {\n\t    valid = typeof value === (expectedType = 'function');\n\t  } else if (expectedType === 'Object') {\n\t    valid = isPlainObject(value);\n\t  } else if (expectedType === 'Array') {\n\t    valid = Array.isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  }\n\t}\n\t\n\t/**\n\t * Use function string name to check built-in types,\n\t * because a simple equality check will fail when running\n\t * across different vms / iframes.\n\t */\n\tfunction getType (fn) {\n\t  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n\t  return match && match[1]\n\t}\n\t\n\tfunction isBooleanType (fn) {\n\t  if (!Array.isArray(fn)) {\n\t    return getType(fn) === 'Boolean'\n\t  }\n\t  for (var i = 0, len = fn.length; i < len; i++) {\n\t    if (getType(fn[i]) === 'Boolean') {\n\t      return true\n\t    }\n\t  }\n\t  /* istanbul ignore next */\n\t  return false\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive$$1,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\tmakeMap: makeMap,\n\t\tisBuiltInTag: isBuiltInTag,\n\t\tremove: remove$1,\n\t\thasOwn: hasOwn,\n\t\tisPrimitive: isPrimitive,\n\t\tcached: cached,\n\t\tcamelize: camelize,\n\t\tcapitalize: capitalize,\n\t\thyphenate: hyphenate,\n\t\tbind: bind$1,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\ttoObject: toObject,\n\t\tnoop: noop,\n\t\tno: no,\n\t\tgenStaticKeys: genStaticKeys,\n\t\tlooseEqual: looseEqual,\n\t\tlooseIndexOf: looseIndexOf,\n\t\tisReserved: isReserved,\n\t\tdef: def,\n\t\tparsePath: parsePath,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tUA: UA,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisEdge: isEdge,\n\t\tisAndroid: isAndroid,\n\t\tisIOS: isIOS,\n\t\tisServerRendering: isServerRendering,\n\t\tdevtools: devtools,\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tget warn () { return warn; },\n\t\tget formatComponentName () { return formatComponentName; },\n\t\tvalidateProp: validateProp\n\t});\n\t\n\t/* not type checking this file because flow doesn't play well with Proxy */\n\t\n\tvar initProxy;\n\t\n\tif (false) {\n\t  var allowedGlobals = makeMap(\n\t    'Infinity,undefined,NaN,isFinite,isNaN,' +\n\t    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n\t    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n\t    'require' // for Webpack/Browserify\n\t  );\n\t\n\t  var warnNonPresent = function (target, key) {\n\t    warn(\n\t      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n\t      \"referenced during render. Make sure to declare reactive data \" +\n\t      \"properties in the data option.\",\n\t      target\n\t    );\n\t  };\n\t\n\t  var hasProxy =\n\t    typeof Proxy !== 'undefined' &&\n\t    Proxy.toString().match(/native code/);\n\t\n\t  if (hasProxy) {\n\t    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n\t    config.keyCodes = new Proxy(config.keyCodes, {\n\t      set: function set (target, key, value) {\n\t        if (isBuiltInModifier(key)) {\n\t          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n\t          return false\n\t        } else {\n\t          target[key] = value;\n\t          return true\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  var hasHandler = {\n\t    has: function has (target, key) {\n\t      var has = key in target;\n\t      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n\t      if (!has && !isAllowed) {\n\t        warnNonPresent(target, key);\n\t      }\n\t      return has || !isAllowed\n\t    }\n\t  };\n\t\n\t  var getHandler = {\n\t    get: function get (target, key) {\n\t      if (typeof key === 'string' && !(key in target)) {\n\t        warnNonPresent(target, key);\n\t      }\n\t      return target[key]\n\t    }\n\t  };\n\t\n\t  initProxy = function initProxy (vm) {\n\t    if (hasProxy) {\n\t      // determine which proxy handler to use\n\t      var options = vm.$options;\n\t      var handlers = options.render && options.render._withStripped\n\t        ? getHandler\n\t        : hasHandler;\n\t      vm._renderProxy = new Proxy(vm, handlers);\n\t    } else {\n\t      vm._renderProxy = vm;\n\t    }\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\t\n\tvar queue = [];\n\tvar has$1 = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar flushing = false;\n\tvar index = 0;\n\t\n\t/**\n\t * Reset the scheduler's state.\n\t */\n\tfunction resetSchedulerState () {\n\t  queue.length = 0;\n\t  has$1 = {};\n\t  if (false) {\n\t    circular = {};\n\t  }\n\t  waiting = flushing = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\tfunction flushSchedulerQueue () {\n\t  flushing = true;\n\t\n\t  // Sort queue before flush.\n\t  // This ensures that:\n\t  // 1. Components are updated from parent to child. (because parent is always\n\t  //    created before the child)\n\t  // 2. A component's user watchers are run before its render watcher (because\n\t  //    user watchers are created before the render watcher)\n\t  // 3. If a component is destroyed during a parent component's watcher run,\n\t  //    its watchers can be skipped.\n\t  queue.sort(function (a, b) { return a.id - b.id; });\n\t\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (index = 0; index < queue.length; index++) {\n\t    var watcher = queue[index];\n\t    var id = watcher.id;\n\t    has$1[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn(\n\t          'You may have an infinite update loop ' + (\n\t            watcher.user\n\t              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n\t              : \"in a component render function.\"\n\t          ),\n\t          watcher.vm\n\t        );\n\t        break\n\t      }\n\t    }\n\t  }\n\t\n\t  // devtool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t\n\t  resetSchedulerState();\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t */\n\tfunction queueWatcher (watcher) {\n\t  var id = watcher.id;\n\t  if (has$1[id] == null) {\n\t    has$1[id] = true;\n\t    if (!flushing) {\n\t      queue.push(watcher);\n\t    } else {\n\t      // if already flushing, splice the watcher based on its id\n\t      // if already past its id, it will be run next immediately.\n\t      var i = queue.length - 1;\n\t      while (i >= 0 && queue[i].id > watcher.id) {\n\t        i--;\n\t      }\n\t      queue.splice(Math.max(i, index) + 1, 0, watcher);\n\t    }\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushSchedulerQueue);\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t */\n\tvar Watcher = function Watcher (\n\t  vm,\n\t  expOrFn,\n\t  cb,\n\t  options\n\t) {\n\t  if ( options === void 0 ) options = {};\n\t\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  // options\n\t  this.deep = !!options.deep;\n\t  this.user = !!options.user;\n\t  this.lazy = !!options.lazy;\n\t  this.sync = !!options.sync;\n\t  this.expression = expOrFn.toString();\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  // parse expression for getter\n\t  if (typeof expOrFn === 'function') {\n\t    this.getter = expOrFn;\n\t  } else {\n\t    this.getter = parsePath(expOrFn);\n\t    if (!this.getter) {\n\t      this.getter = function () {};\n\t      (\"production\") !== 'production' && warn(\n\t        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n\t        'Watcher only accepts simple dot-delimited paths. ' +\n\t        'For full control, use a function instead.',\n\t        vm\n\t      );\n\t    }\n\t  }\n\t  this.value = this.lazy\n\t    ? undefined\n\t    : this.get();\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\tWatcher.prototype.get = function get () {\n\t  pushTarget(this);\n\t  var value = this.getter.call(this.vm, this.vm);\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  popTarget();\n\t  this.cleanupDeps();\n\t  return value\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t */\n\tWatcher.prototype.addDep = function addDep (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\tWatcher.prototype.cleanupDeps = function cleanupDeps () {\n\t    var this$1 = this;\n\t\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this$1.deps[i];\n\t    if (!this$1.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this$1);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t */\n\tWatcher.prototype.update = function update () {\n\t  /* istanbul ignore else */\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync) {\n\t    this.run();\n\t  } else {\n\t    queueWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Scheduler job interface.\n\t * Will be called by the scheduler.\n\t */\n\tWatcher.prototype.run = function run () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t      if (\n\t        value !== this.value ||\n\t      // Deep watchers and watchers on Object/Arrays should fire even\n\t      // when the value is the same, because the value may\n\t      // have mutated.\n\t      isObject(value) ||\n\t      this.deep\n\t    ) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      if (this.user) {\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          /* istanbul ignore else */\n\t          if (config.errorHandler) {\n\t            config.errorHandler.call(null, e, this.vm);\n\t          } else {\n\t            (\"production\") !== 'production' && warn(\n\t              (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n\t              this.vm\n\t            );\n\t            throw e\n\t          }\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\tWatcher.prototype.evaluate = function evaluate () {\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\tWatcher.prototype.depend = function depend () {\n\t    var this$1 = this;\n\t\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this$1.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subscriber list.\n\t */\n\tWatcher.prototype.teardown = function teardown () {\n\t    var this$1 = this;\n\t\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      remove$1(this.vm._watchers, this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this$1.deps[i].removeSub(this$1);\n\t    }\n\t    this.active = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Recursively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t */\n\tvar seenObjects = new _Set();\n\tfunction traverse (val) {\n\t  seenObjects.clear();\n\t  _traverse(val, seenObjects);\n\t}\n\t\n\tfunction _traverse (val, seen) {\n\t  var i, keys;\n\t  var isA = Array.isArray(val);\n\t  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n\t    return\n\t  }\n\t  if (val.__ob__) {\n\t    var depId = val.__ob__.dep.id;\n\t    if (seen.has(depId)) {\n\t      return\n\t    }\n\t    seen.add(depId);\n\t  }\n\t  if (isA) {\n\t    i = val.length;\n\t    while (i--) { _traverse(val[i], seen); }\n\t  } else {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) { _traverse(val[keys[i]], seen); }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction initState (vm) {\n\t  vm._watchers = [];\n\t  initProps(vm);\n\t  initMethods(vm);\n\t  initData(vm);\n\t  initComputed(vm);\n\t  initWatch(vm);\n\t}\n\t\n\tvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\t\n\tfunction initProps (vm) {\n\t  var props = vm.$options.props;\n\t  if (props) {\n\t    var propsData = vm.$options.propsData || {};\n\t    var keys = vm.$options._propKeys = Object.keys(props);\n\t    var isRoot = !vm.$parent;\n\t    // root instance props should be converted\n\t    observerState.shouldConvert = isRoot;\n\t    var loop = function ( i ) {\n\t      var key = keys[i];\n\t      /* istanbul ignore else */\n\t      if (false) {\n\t        if (isReservedProp[key]) {\n\t          warn(\n\t            (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n\t            vm\n\t          );\n\t        }\n\t        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n\t          if (vm.$parent && !observerState.isSettingProps) {\n\t            warn(\n\t              \"Avoid mutating a prop directly since the value will be \" +\n\t              \"overwritten whenever the parent component re-renders. \" +\n\t              \"Instead, use a data or computed property based on the prop's \" +\n\t              \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n\t              vm\n\t            );\n\t          }\n\t        });\n\t      } else {\n\t        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n\t      }\n\t    };\n\t\n\t    for (var i = 0; i < keys.length; i++) loop( i );\n\t    observerState.shouldConvert = true;\n\t  }\n\t}\n\t\n\tfunction initData (vm) {\n\t  var data = vm.$options.data;\n\t  data = vm._data = typeof data === 'function'\n\t    ? data.call(vm)\n\t    : data || {};\n\t  if (!isPlainObject(data)) {\n\t    data = {};\n\t    (\"production\") !== 'production' && warn(\n\t      'data functions should return an object.',\n\t      vm\n\t    );\n\t  }\n\t  // proxy data on instance\n\t  var keys = Object.keys(data);\n\t  var props = vm.$options.props;\n\t  var i = keys.length;\n\t  while (i--) {\n\t    if (props && hasOwn(props, keys[i])) {\n\t      (\"production\") !== 'production' && warn(\n\t        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n\t        \"Use prop default value instead.\",\n\t        vm\n\t      );\n\t    } else {\n\t      proxy(vm, keys[i]);\n\t    }\n\t  }\n\t  // observe data\n\t  observe(data);\n\t  data.__ob__ && data.__ob__.vmCount++;\n\t}\n\t\n\tvar computedSharedDefinition = {\n\t  enumerable: true,\n\t  configurable: true,\n\t  get: noop,\n\t  set: noop\n\t};\n\t\n\tfunction initComputed (vm) {\n\t  var computed = vm.$options.computed;\n\t  if (computed) {\n\t    for (var key in computed) {\n\t      var userDef = computed[key];\n\t      if (typeof userDef === 'function') {\n\t        computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n\t        computedSharedDefinition.set = noop;\n\t      } else {\n\t        computedSharedDefinition.get = userDef.get\n\t          ? userDef.cache !== false\n\t            ? makeComputedGetter(userDef.get, vm)\n\t            : bind$1(userDef.get, vm)\n\t          : noop;\n\t        computedSharedDefinition.set = userDef.set\n\t          ? bind$1(userDef.set, vm)\n\t          : noop;\n\t      }\n\t      Object.defineProperty(vm, key, computedSharedDefinition);\n\t    }\n\t  }\n\t}\n\t\n\tfunction makeComputedGetter (getter, owner) {\n\t  var watcher = new Watcher(owner, getter, noop, {\n\t    lazy: true\n\t  });\n\t  return function computedGetter () {\n\t    if (watcher.dirty) {\n\t      watcher.evaluate();\n\t    }\n\t    if (Dep.target) {\n\t      watcher.depend();\n\t    }\n\t    return watcher.value\n\t  }\n\t}\n\t\n\tfunction initMethods (vm) {\n\t  var methods = vm.$options.methods;\n\t  if (methods) {\n\t    for (var key in methods) {\n\t      vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n\t      if (false) {\n\t        warn(\n\t          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n\t          \"Did you reference the function correctly?\",\n\t          vm\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction initWatch (vm) {\n\t  var watch = vm.$options.watch;\n\t  if (watch) {\n\t    for (var key in watch) {\n\t      var handler = watch[key];\n\t      if (Array.isArray(handler)) {\n\t        for (var i = 0; i < handler.length; i++) {\n\t          createWatcher(vm, key, handler[i]);\n\t        }\n\t      } else {\n\t        createWatcher(vm, key, handler);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction createWatcher (vm, key, handler) {\n\t  var options;\n\t  if (isPlainObject(handler)) {\n\t    options = handler;\n\t    handler = handler.handler;\n\t  }\n\t  if (typeof handler === 'string') {\n\t    handler = vm[handler];\n\t  }\n\t  vm.$watch(key, handler, options);\n\t}\n\t\n\tfunction stateMixin (Vue) {\n\t  // flow somehow has problems with directly declared definition object\n\t  // when using Object.defineProperty, so we have to procedurally build up\n\t  // the object here.\n\t  var dataDef = {};\n\t  dataDef.get = function () {\n\t    return this._data\n\t  };\n\t  if (false) {\n\t    dataDef.set = function (newData) {\n\t      warn(\n\t        'Avoid replacing instance root $data. ' +\n\t        'Use nested data properties instead.',\n\t        this\n\t      );\n\t    };\n\t  }\n\t  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\t\n\t  Vue.prototype.$set = set$1;\n\t  Vue.prototype.$delete = del;\n\t\n\t  Vue.prototype.$watch = function (\n\t    expOrFn,\n\t    cb,\n\t    options\n\t  ) {\n\t    var vm = this;\n\t    options = options || {};\n\t    options.user = true;\n\t    var watcher = new Watcher(vm, expOrFn, cb, options);\n\t    if (options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn () {\n\t      watcher.teardown();\n\t    }\n\t  };\n\t}\n\t\n\tfunction proxy (vm, key) {\n\t  if (!isReserved(key)) {\n\t    Object.defineProperty(vm, key, {\n\t      configurable: true,\n\t      enumerable: true,\n\t      get: function proxyGetter () {\n\t        return vm._data[key]\n\t      },\n\t      set: function proxySetter (val) {\n\t        vm._data[key] = val;\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar VNode = function VNode (\n\t  tag,\n\t  data,\n\t  children,\n\t  text,\n\t  elm,\n\t  ns,\n\t  context,\n\t  componentOptions\n\t) {\n\t  this.tag = tag;\n\t  this.data = data;\n\t  this.children = children;\n\t  this.text = text;\n\t  this.elm = elm;\n\t  this.ns = ns;\n\t  this.context = context;\n\t  this.functionalContext = undefined;\n\t  this.key = data && data.key;\n\t  this.componentOptions = componentOptions;\n\t  this.child = undefined;\n\t  this.parent = undefined;\n\t  this.raw = false;\n\t  this.isStatic = false;\n\t  this.isRootInsert = true;\n\t  this.isComment = false;\n\t  this.isCloned = false;\n\t  this.isOnce = false;\n\t};\n\t\n\tvar emptyVNode = function () {\n\t  var node = new VNode();\n\t  node.text = '';\n\t  node.isComment = true;\n\t  return node\n\t};\n\t\n\t// optimized shallow clone\n\t// used for static nodes and slot nodes because they may be reused across\n\t// multiple renders, cloning them avoids errors when DOM manipulations rely\n\t// on their elm reference.\n\tfunction cloneVNode (vnode) {\n\t  var cloned = new VNode(\n\t    vnode.tag,\n\t    vnode.data,\n\t    vnode.children,\n\t    vnode.text,\n\t    vnode.elm,\n\t    vnode.ns,\n\t    vnode.context,\n\t    vnode.componentOptions\n\t  );\n\t  cloned.isStatic = vnode.isStatic;\n\t  cloned.key = vnode.key;\n\t  cloned.isCloned = true;\n\t  return cloned\n\t}\n\t\n\tfunction cloneVNodes (vnodes) {\n\t  var res = new Array(vnodes.length);\n\t  for (var i = 0; i < vnodes.length; i++) {\n\t    res[i] = cloneVNode(vnodes[i]);\n\t  }\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tfunction mergeVNodeHook (def, hookKey, hook, key) {\n\t  key = key + hookKey;\n\t  var injectedHash = def.__injected || (def.__injected = {});\n\t  if (!injectedHash[key]) {\n\t    injectedHash[key] = true;\n\t    var oldHook = def[hookKey];\n\t    if (oldHook) {\n\t      def[hookKey] = function () {\n\t        oldHook.apply(this, arguments);\n\t        hook.apply(this, arguments);\n\t      };\n\t    } else {\n\t      def[hookKey] = hook;\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction updateListeners (\n\t  on,\n\t  oldOn,\n\t  add,\n\t  remove$$1,\n\t  vm\n\t) {\n\t  var name, cur, old, fn, event, capture, once;\n\t  for (name in on) {\n\t    cur = on[name];\n\t    old = oldOn[name];\n\t    if (!cur) {\n\t      (\"production\") !== 'production' && warn(\n\t        \"Invalid handler for event \\\"\" + name + \"\\\": got \" + String(cur),\n\t        vm\n\t      );\n\t    } else if (!old) {\n\t      once = name.charAt(0) === '~'; // Prefixed last, checked first\n\t      event = once ? name.slice(1) : name;\n\t      capture = event.charAt(0) === '!';\n\t      event = capture ? event.slice(1) : event;\n\t      if (Array.isArray(cur)) {\n\t        add(event, (cur.invoker = arrInvoker(cur)), once, capture);\n\t      } else {\n\t        if (!cur.invoker) {\n\t          fn = cur;\n\t          cur = on[name] = {};\n\t          cur.fn = fn;\n\t          cur.invoker = fnInvoker(cur);\n\t        }\n\t        add(event, cur.invoker, once, capture);\n\t      }\n\t    } else if (cur !== old) {\n\t      if (Array.isArray(old)) {\n\t        old.length = cur.length;\n\t        for (var i = 0; i < old.length; i++) { old[i] = cur[i]; }\n\t        on[name] = old;\n\t      } else {\n\t        old.fn = cur;\n\t        on[name] = old;\n\t      }\n\t    }\n\t  }\n\t  for (name in oldOn) {\n\t    if (!on[name]) {\n\t      once = name.charAt(0) === '~'; // Prefixed last, checked first\n\t      event = once ? name.slice(1) : name;\n\t      capture = event.charAt(0) === '!';\n\t      event = capture ? event.slice(1) : event;\n\t      remove$$1(event, oldOn[name].invoker, capture);\n\t    }\n\t  }\n\t}\n\t\n\tfunction arrInvoker (arr) {\n\t  return function (ev) {\n\t    var arguments$1 = arguments;\n\t\n\t    var single = arguments.length === 1;\n\t    for (var i = 0; i < arr.length; i++) {\n\t      single ? arr[i](ev) : arr[i].apply(null, arguments$1);\n\t    }\n\t  }\n\t}\n\t\n\tfunction fnInvoker (o) {\n\t  return function (ev) {\n\t    var single = arguments.length === 1;\n\t    single ? o.fn(ev) : o.fn.apply(null, arguments);\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction normalizeChildren (\n\t  children,\n\t  ns,\n\t  nestedIndex\n\t) {\n\t  if (isPrimitive(children)) {\n\t    return [createTextVNode(children)]\n\t  }\n\t  if (Array.isArray(children)) {\n\t    var res = [];\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var c = children[i];\n\t      var last = res[res.length - 1];\n\t      //  nested\n\t      if (Array.isArray(c)) {\n\t        res.push.apply(res, normalizeChildren(c, ns, ((nestedIndex || '') + \"_\" + i)));\n\t      } else if (isPrimitive(c)) {\n\t        if (last && last.text) {\n\t          last.text += String(c);\n\t        } else if (c !== '') {\n\t          // convert primitive to vnode\n\t          res.push(createTextVNode(c));\n\t        }\n\t      } else if (c instanceof VNode) {\n\t        if (c.text && last && last.text) {\n\t          if (!last.isCloned) {\n\t            last.text += c.text;\n\t          }\n\t        } else {\n\t          // inherit parent namespace\n\t          if (ns) {\n\t            applyNS(c, ns);\n\t          }\n\t          // default key for nested array children (likely generated by v-for)\n\t          if (c.tag && c.key == null && nestedIndex != null) {\n\t            c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n\t          }\n\t          res.push(c);\n\t        }\n\t      }\n\t    }\n\t    return res\n\t  }\n\t}\n\t\n\tfunction createTextVNode (val) {\n\t  return new VNode(undefined, undefined, undefined, String(val))\n\t}\n\t\n\tfunction applyNS (vnode, ns) {\n\t  if (vnode.tag && !vnode.ns) {\n\t    vnode.ns = ns;\n\t    if (vnode.children) {\n\t      for (var i = 0, l = vnode.children.length; i < l; i++) {\n\t        applyNS(vnode.children[i], ns);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction getFirstComponentChild (children) {\n\t  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n\t}\n\t\n\t/*  */\n\t\n\tvar activeInstance = null;\n\t\n\tfunction initLifecycle (vm) {\n\t  var options = vm.$options;\n\t\n\t  // locate first non-abstract parent\n\t  var parent = options.parent;\n\t  if (parent && !options.abstract) {\n\t    while (parent.$options.abstract && parent.$parent) {\n\t      parent = parent.$parent;\n\t    }\n\t    parent.$children.push(vm);\n\t  }\n\t\n\t  vm.$parent = parent;\n\t  vm.$root = parent ? parent.$root : vm;\n\t\n\t  vm.$children = [];\n\t  vm.$refs = {};\n\t\n\t  vm._watcher = null;\n\t  vm._inactive = false;\n\t  vm._isMounted = false;\n\t  vm._isDestroyed = false;\n\t  vm._isBeingDestroyed = false;\n\t}\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  Vue.prototype._mount = function (\n\t    el,\n\t    hydrating\n\t  ) {\n\t    var vm = this;\n\t    vm.$el = el;\n\t    if (!vm.$options.render) {\n\t      vm.$options.render = emptyVNode;\n\t      if (false) {\n\t        /* istanbul ignore if */\n\t        if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n\t          warn(\n\t            'You are using the runtime-only build of Vue where the template ' +\n\t            'option is not available. Either pre-compile the templates into ' +\n\t            'render functions, or use the compiler-included build.',\n\t            vm\n\t          );\n\t        } else {\n\t          warn(\n\t            'Failed to mount component: template or render function not defined.',\n\t            vm\n\t          );\n\t        }\n\t      }\n\t    }\n\t    callHook(vm, 'beforeMount');\n\t    vm._watcher = new Watcher(vm, function () {\n\t      vm._update(vm._render(), hydrating);\n\t    }, noop);\n\t    hydrating = false;\n\t    // manually mounted instance, call mounted on self\n\t    // mounted is called for render-created child components in its inserted hook\n\t    if (vm.$vnode == null) {\n\t      vm._isMounted = true;\n\t      callHook(vm, 'mounted');\n\t    }\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype._update = function (vnode, hydrating) {\n\t    var vm = this;\n\t    if (vm._isMounted) {\n\t      callHook(vm, 'beforeUpdate');\n\t    }\n\t    var prevEl = vm.$el;\n\t    var prevVnode = vm._vnode;\n\t    var prevActiveInstance = activeInstance;\n\t    activeInstance = vm;\n\t    vm._vnode = vnode;\n\t    // Vue.prototype.__patch__ is injected in entry points\n\t    // based on the rendering backend used.\n\t    if (!prevVnode) {\n\t      // initial render\n\t      vm.$el = vm.__patch__(\n\t        vm.$el, vnode, hydrating, false /* removeOnly */,\n\t        vm.$options._parentElm,\n\t        vm.$options._refElm\n\t      );\n\t    } else {\n\t      // updates\n\t      vm.$el = vm.__patch__(prevVnode, vnode);\n\t    }\n\t    activeInstance = prevActiveInstance;\n\t    // update __vue__ reference\n\t    if (prevEl) {\n\t      prevEl.__vue__ = null;\n\t    }\n\t    if (vm.$el) {\n\t      vm.$el.__vue__ = vm;\n\t    }\n\t    // if parent is an HOC, update its $el as well\n\t    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n\t      vm.$parent.$el = vm.$el;\n\t    }\n\t    if (vm._isMounted) {\n\t      callHook(vm, 'updated');\n\t    }\n\t  };\n\t\n\t  Vue.prototype._updateFromParent = function (\n\t    propsData,\n\t    listeners,\n\t    parentVnode,\n\t    renderChildren\n\t  ) {\n\t    var vm = this;\n\t    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n\t    vm.$options._parentVnode = parentVnode;\n\t    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\t    if (vm._vnode) { // update child tree's parent\n\t      vm._vnode.parent = parentVnode;\n\t    }\n\t    vm.$options._renderChildren = renderChildren;\n\t    // update props\n\t    if (propsData && vm.$options.props) {\n\t      observerState.shouldConvert = false;\n\t      if (false) {\n\t        observerState.isSettingProps = true;\n\t      }\n\t      var propKeys = vm.$options._propKeys || [];\n\t      for (var i = 0; i < propKeys.length; i++) {\n\t        var key = propKeys[i];\n\t        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n\t      }\n\t      observerState.shouldConvert = true;\n\t      if (false) {\n\t        observerState.isSettingProps = false;\n\t      }\n\t      vm.$options.propsData = propsData;\n\t    }\n\t    // update listeners\n\t    if (listeners) {\n\t      var oldListeners = vm.$options._parentListeners;\n\t      vm.$options._parentListeners = listeners;\n\t      vm._updateListeners(listeners, oldListeners);\n\t    }\n\t    // resolve slots + force update if has children\n\t    if (hasChildren) {\n\t      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n\t      vm.$forceUpdate();\n\t    }\n\t  };\n\t\n\t  Vue.prototype.$forceUpdate = function () {\n\t    var vm = this;\n\t    if (vm._watcher) {\n\t      vm._watcher.update();\n\t    }\n\t  };\n\t\n\t  Vue.prototype.$destroy = function () {\n\t    var vm = this;\n\t    if (vm._isBeingDestroyed) {\n\t      return\n\t    }\n\t    callHook(vm, 'beforeDestroy');\n\t    vm._isBeingDestroyed = true;\n\t    // remove self from parent\n\t    var parent = vm.$parent;\n\t    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n\t      remove$1(parent.$children, vm);\n\t    }\n\t    // teardown watchers\n\t    if (vm._watcher) {\n\t      vm._watcher.teardown();\n\t    }\n\t    var i = vm._watchers.length;\n\t    while (i--) {\n\t      vm._watchers[i].teardown();\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (vm._data.__ob__) {\n\t      vm._data.__ob__.vmCount--;\n\t    }\n\t    // call the last hook...\n\t    vm._isDestroyed = true;\n\t    callHook(vm, 'destroyed');\n\t    // turn off all instance listeners.\n\t    vm.$off();\n\t    // remove __vue__ reference\n\t    if (vm.$el) {\n\t      vm.$el.__vue__ = null;\n\t    }\n\t    // invoke destroy hooks on current rendered tree\n\t    vm.__patch__(vm._vnode, null);\n\t  };\n\t}\n\t\n\tfunction callHook (vm, hook) {\n\t  var handlers = vm.$options[hook];\n\t  if (handlers) {\n\t    for (var i = 0, j = handlers.length; i < j; i++) {\n\t      handlers[i].call(vm);\n\t    }\n\t  }\n\t  vm.$emit('hook:' + hook);\n\t}\n\t\n\t/*  */\n\t\n\tvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\n\tvar hooksToMerge = Object.keys(hooks);\n\t\n\tfunction createComponent (\n\t  Ctor,\n\t  data,\n\t  context,\n\t  children,\n\t  tag\n\t) {\n\t  if (!Ctor) {\n\t    return\n\t  }\n\t\n\t  var baseCtor = context.$options._base;\n\t  if (isObject(Ctor)) {\n\t    Ctor = baseCtor.extend(Ctor);\n\t  }\n\t\n\t  if (typeof Ctor !== 'function') {\n\t    if (false) {\n\t      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n\t    }\n\t    return\n\t  }\n\t\n\t  // async component\n\t  if (!Ctor.cid) {\n\t    if (Ctor.resolved) {\n\t      Ctor = Ctor.resolved;\n\t    } else {\n\t      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n\t        // it's ok to queue this on every render because\n\t        // $forceUpdate is buffered by the scheduler.\n\t        context.$forceUpdate();\n\t      });\n\t      if (!Ctor) {\n\t        // return nothing if this is indeed an async component\n\t        // wait for the callback to trigger parent update.\n\t        return\n\t      }\n\t    }\n\t  }\n\t\n\t  // resolve constructor options in case global mixins are applied after\n\t  // component constructor creation\n\t  resolveConstructorOptions(Ctor);\n\t\n\t  data = data || {};\n\t\n\t  // extract props\n\t  var propsData = extractProps(data, Ctor);\n\t\n\t  // functional component\n\t  if (Ctor.options.functional) {\n\t    return createFunctionalComponent(Ctor, propsData, data, context, children)\n\t  }\n\t\n\t  // extract listeners, since these needs to be treated as\n\t  // child component listeners instead of DOM listeners\n\t  var listeners = data.on;\n\t  // replace with listeners with .native modifier\n\t  data.on = data.nativeOn;\n\t\n\t  if (Ctor.options.abstract) {\n\t    // abstract components do not keep anything\n\t    // other than props & listeners\n\t    data = {};\n\t  }\n\t\n\t  // merge component management hooks onto the placeholder node\n\t  mergeHooks(data);\n\t\n\t  // return a placeholder vnode\n\t  var name = Ctor.options.name || tag;\n\t  var vnode = new VNode(\n\t    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n\t    data, undefined, undefined, undefined, undefined, context,\n\t    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n\t  );\n\t  return vnode\n\t}\n\t\n\tfunction createFunctionalComponent (\n\t  Ctor,\n\t  propsData,\n\t  data,\n\t  context,\n\t  children\n\t) {\n\t  var props = {};\n\t  var propOptions = Ctor.options.props;\n\t  if (propOptions) {\n\t    for (var key in propOptions) {\n\t      props[key] = validateProp(key, propOptions, propsData);\n\t    }\n\t  }\n\t  var vnode = Ctor.options.render.call(\n\t    null,\n\t    // ensure the createElement function in functional components\n\t    // gets a unique context - this is necessary for correct named slot check\n\t    bind$1(createElement, { _self: Object.create(context) }),\n\t    {\n\t      props: props,\n\t      data: data,\n\t      parent: context,\n\t      children: normalizeChildren(children),\n\t      slots: function () { return resolveSlots(children, context); }\n\t    }\n\t  );\n\t  if (vnode instanceof VNode) {\n\t    vnode.functionalContext = context;\n\t    if (data.slot) {\n\t      (vnode.data || (vnode.data = {})).slot = data.slot;\n\t    }\n\t  }\n\t  return vnode\n\t}\n\t\n\tfunction createComponentInstanceForVnode (\n\t  vnode, // we know it's MountedComponentVNode but flow doesn't\n\t  parent, // activeInstance in lifecycle state\n\t  parentElm,\n\t  refElm\n\t) {\n\t  var vnodeComponentOptions = vnode.componentOptions;\n\t  var options = {\n\t    _isComponent: true,\n\t    parent: parent,\n\t    propsData: vnodeComponentOptions.propsData,\n\t    _componentTag: vnodeComponentOptions.tag,\n\t    _parentVnode: vnode,\n\t    _parentListeners: vnodeComponentOptions.listeners,\n\t    _renderChildren: vnodeComponentOptions.children,\n\t    _parentElm: parentElm || null,\n\t    _refElm: refElm || null\n\t  };\n\t  // check inline-template render functions\n\t  var inlineTemplate = vnode.data.inlineTemplate;\n\t  if (inlineTemplate) {\n\t    options.render = inlineTemplate.render;\n\t    options.staticRenderFns = inlineTemplate.staticRenderFns;\n\t  }\n\t  return new vnodeComponentOptions.Ctor(options)\n\t}\n\t\n\tfunction init (\n\t  vnode,\n\t  hydrating,\n\t  parentElm,\n\t  refElm\n\t) {\n\t  if (!vnode.child || vnode.child._isDestroyed) {\n\t    var child = vnode.child = createComponentInstanceForVnode(\n\t      vnode,\n\t      activeInstance,\n\t      parentElm,\n\t      refElm\n\t    );\n\t    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n\t  } else if (vnode.data.keepAlive) {\n\t    // kept-alive components, treat as a patch\n\t    var mountedNode = vnode; // work around flow\n\t    prepatch(mountedNode, mountedNode);\n\t  }\n\t}\n\t\n\tfunction prepatch (\n\t  oldVnode,\n\t  vnode\n\t) {\n\t  var options = vnode.componentOptions;\n\t  var child = vnode.child = oldVnode.child;\n\t  child._updateFromParent(\n\t    options.propsData, // updated props\n\t    options.listeners, // updated listeners\n\t    vnode, // new parent vnode\n\t    options.children // new children\n\t  );\n\t}\n\t\n\tfunction insert (vnode) {\n\t  if (!vnode.child._isMounted) {\n\t    vnode.child._isMounted = true;\n\t    callHook(vnode.child, 'mounted');\n\t  }\n\t  if (vnode.data.keepAlive) {\n\t    vnode.child._inactive = false;\n\t    callHook(vnode.child, 'activated');\n\t  }\n\t}\n\t\n\tfunction destroy$1 (vnode) {\n\t  if (!vnode.child._isDestroyed) {\n\t    if (!vnode.data.keepAlive) {\n\t      vnode.child.$destroy();\n\t    } else {\n\t      vnode.child._inactive = true;\n\t      callHook(vnode.child, 'deactivated');\n\t    }\n\t  }\n\t}\n\t\n\tfunction resolveAsyncComponent (\n\t  factory,\n\t  baseCtor,\n\t  cb\n\t) {\n\t  if (factory.requested) {\n\t    // pool callbacks\n\t    factory.pendingCallbacks.push(cb);\n\t  } else {\n\t    factory.requested = true;\n\t    var cbs = factory.pendingCallbacks = [cb];\n\t    var sync = true;\n\t\n\t    var resolve = function (res) {\n\t      if (isObject(res)) {\n\t        res = baseCtor.extend(res);\n\t      }\n\t      // cache resolved\n\t      factory.resolved = res;\n\t      // invoke callbacks only if this is not a synchronous resolve\n\t      // (async resolves are shimmed as synchronous during SSR)\n\t      if (!sync) {\n\t        for (var i = 0, l = cbs.length; i < l; i++) {\n\t          cbs[i](res);\n\t        }\n\t      }\n\t    };\n\t\n\t    var reject = function (reason) {\n\t      (\"production\") !== 'production' && warn(\n\t        \"Failed to resolve async component: \" + (String(factory)) +\n\t        (reason ? (\"\\nReason: \" + reason) : '')\n\t      );\n\t    };\n\t\n\t    var res = factory(resolve, reject);\n\t\n\t    // handle promise\n\t    if (res && typeof res.then === 'function' && !factory.resolved) {\n\t      res.then(resolve, reject);\n\t    }\n\t\n\t    sync = false;\n\t    // return in case resolved synchronously\n\t    return factory.resolved\n\t  }\n\t}\n\t\n\tfunction extractProps (data, Ctor) {\n\t  // we are only extracting raw values here.\n\t  // validation and default values are handled in the child\n\t  // component itself.\n\t  var propOptions = Ctor.options.props;\n\t  if (!propOptions) {\n\t    return\n\t  }\n\t  var res = {};\n\t  var attrs = data.attrs;\n\t  var props = data.props;\n\t  var domProps = data.domProps;\n\t  if (attrs || props || domProps) {\n\t    for (var key in propOptions) {\n\t      var altKey = hyphenate(key);\n\t      checkProp(res, props, key, altKey, true) ||\n\t      checkProp(res, attrs, key, altKey) ||\n\t      checkProp(res, domProps, key, altKey);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\tfunction checkProp (\n\t  res,\n\t  hash,\n\t  key,\n\t  altKey,\n\t  preserve\n\t) {\n\t  if (hash) {\n\t    if (hasOwn(hash, key)) {\n\t      res[key] = hash[key];\n\t      if (!preserve) {\n\t        delete hash[key];\n\t      }\n\t      return true\n\t    } else if (hasOwn(hash, altKey)) {\n\t      res[key] = hash[altKey];\n\t      if (!preserve) {\n\t        delete hash[altKey];\n\t      }\n\t      return true\n\t    }\n\t  }\n\t  return false\n\t}\n\t\n\tfunction mergeHooks (data) {\n\t  if (!data.hook) {\n\t    data.hook = {};\n\t  }\n\t  for (var i = 0; i < hooksToMerge.length; i++) {\n\t    var key = hooksToMerge[i];\n\t    var fromParent = data.hook[key];\n\t    var ours = hooks[key];\n\t    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n\t  }\n\t}\n\t\n\tfunction mergeHook$1 (one, two) {\n\t  return function (a, b, c, d) {\n\t    one(a, b, c, d);\n\t    two(a, b, c, d);\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\t// wrapper function for providing a more flexible interface\n\t// without getting yelled at by flow\n\tfunction createElement (\n\t  tag,\n\t  data,\n\t  children\n\t) {\n\t  if (data && (Array.isArray(data) || typeof data !== 'object')) {\n\t    children = data;\n\t    data = undefined;\n\t  }\n\t  // make sure to use real instance instead of proxy as context\n\t  return _createElement(this._self, tag, data, children)\n\t}\n\t\n\tfunction _createElement (\n\t  context,\n\t  tag,\n\t  data,\n\t  children\n\t) {\n\t  if (data && data.__ob__) {\n\t    (\"production\") !== 'production' && warn(\n\t      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n\t      'Always create fresh vnode data objects in each render!',\n\t      context\n\t    );\n\t    return\n\t  }\n\t  if (!tag) {\n\t    // in case of component :is set to falsy value\n\t    return emptyVNode()\n\t  }\n\t  // support single function children as default scoped slot\n\t  if (Array.isArray(children) &&\n\t      typeof children[0] === 'function') {\n\t    data = data || {};\n\t    data.scopedSlots = { default: children[0] };\n\t    children.length = 0;\n\t  }\n\t  if (typeof tag === 'string') {\n\t    var Ctor;\n\t    var ns = config.getTagNamespace(tag);\n\t    if (config.isReservedTag(tag)) {\n\t      // platform built-in elements\n\t      return new VNode(\n\t        tag, data, normalizeChildren(children, ns),\n\t        undefined, undefined, ns, context\n\t      )\n\t    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n\t      // component\n\t      return createComponent(Ctor, data, context, children, tag)\n\t    } else {\n\t      // unknown or unlisted namespaced elements\n\t      // check at runtime because it may get assigned a namespace when its\n\t      // parent normalizes children\n\t      var childNs = tag === 'foreignObject' ? 'xhtml' : ns;\n\t      return new VNode(\n\t        tag, data, normalizeChildren(children, childNs),\n\t        undefined, undefined, ns, context\n\t      )\n\t    }\n\t  } else {\n\t    // direct component options / constructor\n\t    return createComponent(tag, data, context, children)\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction initRender (vm) {\n\t  vm.$vnode = null; // the placeholder node in parent tree\n\t  vm._vnode = null; // the root of the child tree\n\t  vm._staticTrees = null;\n\t  var parentVnode = vm.$options._parentVnode;\n\t  var renderContext = parentVnode && parentVnode.context;\n\t  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n\t  vm.$scopedSlots = {};\n\t  // bind the public createElement fn to this instance\n\t  // so that we get proper render context inside it.\n\t  vm.$createElement = bind$1(createElement, vm);\n\t  if (vm.$options.el) {\n\t    vm.$mount(vm.$options.el);\n\t  }\n\t}\n\t\n\tfunction renderMixin (Vue) {\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    return nextTick(fn, this)\n\t  };\n\t\n\t  Vue.prototype._render = function () {\n\t    var vm = this;\n\t    var ref = vm.$options;\n\t    var render = ref.render;\n\t    var staticRenderFns = ref.staticRenderFns;\n\t    var _parentVnode = ref._parentVnode;\n\t\n\t    if (vm._isMounted) {\n\t      // clone slot nodes on re-renders\n\t      for (var key in vm.$slots) {\n\t        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n\t      }\n\t    }\n\t\n\t    if (_parentVnode && _parentVnode.data.scopedSlots) {\n\t      vm.$scopedSlots = _parentVnode.data.scopedSlots;\n\t    }\n\t\n\t    if (staticRenderFns && !vm._staticTrees) {\n\t      vm._staticTrees = [];\n\t    }\n\t    // set parent vnode. this allows render functions to have access\n\t    // to the data on the placeholder node.\n\t    vm.$vnode = _parentVnode;\n\t    // render self\n\t    var vnode;\n\t    try {\n\t      vnode = render.call(vm._renderProxy, vm.$createElement);\n\t    } catch (e) {\n\t      /* istanbul ignore else */\n\t      if (config.errorHandler) {\n\t        config.errorHandler.call(null, e, vm);\n\t      } else {\n\t        if (false) {\n\t          warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n\t        }\n\t        throw e\n\t      }\n\t      // return previous vnode to prevent render error causing blank component\n\t      vnode = vm._vnode;\n\t    }\n\t    // return empty vnode in case the render function errored out\n\t    if (!(vnode instanceof VNode)) {\n\t      if (false) {\n\t        warn(\n\t          'Multiple root nodes returned from render function. Render function ' +\n\t          'should return a single root node.',\n\t          vm\n\t        );\n\t      }\n\t      vnode = emptyVNode();\n\t    }\n\t    // set parent\n\t    vnode.parent = _parentVnode;\n\t    return vnode\n\t  };\n\t\n\t  // shorthands used in render functions\n\t  Vue.prototype._h = createElement;\n\t  // toString for mustaches\n\t  Vue.prototype._s = _toString;\n\t  // number conversion\n\t  Vue.prototype._n = toNumber;\n\t  // empty vnode\n\t  Vue.prototype._e = emptyVNode;\n\t  // loose equal\n\t  Vue.prototype._q = looseEqual;\n\t  // loose indexOf\n\t  Vue.prototype._i = looseIndexOf;\n\t\n\t  // render static tree by index\n\t  Vue.prototype._m = function renderStatic (\n\t    index,\n\t    isInFor\n\t  ) {\n\t    var tree = this._staticTrees[index];\n\t    // if has already-rendered static tree and not inside v-for,\n\t    // we can reuse the same tree by doing a shallow clone.\n\t    if (tree && !isInFor) {\n\t      return Array.isArray(tree)\n\t        ? cloneVNodes(tree)\n\t        : cloneVNode(tree)\n\t    }\n\t    // otherwise, render a fresh tree.\n\t    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n\t    markStatic(tree, (\"__static__\" + index), false);\n\t    return tree\n\t  };\n\t\n\t  // mark node as static (v-once)\n\t  Vue.prototype._o = function markOnce (\n\t    tree,\n\t    index,\n\t    key\n\t  ) {\n\t    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n\t    return tree\n\t  };\n\t\n\t  function markStatic (tree, key, isOnce) {\n\t    if (Array.isArray(tree)) {\n\t      for (var i = 0; i < tree.length; i++) {\n\t        if (tree[i] && typeof tree[i] !== 'string') {\n\t          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n\t        }\n\t      }\n\t    } else {\n\t      markStaticNode(tree, key, isOnce);\n\t    }\n\t  }\n\t\n\t  function markStaticNode (node, key, isOnce) {\n\t    node.isStatic = true;\n\t    node.key = key;\n\t    node.isOnce = isOnce;\n\t  }\n\t\n\t  // filter resolution helper\n\t  var identity = function (_) { return _; };\n\t  Vue.prototype._f = function resolveFilter (id) {\n\t    return resolveAsset(this.$options, 'filters', id, true) || identity\n\t  };\n\t\n\t  // render v-for\n\t  Vue.prototype._l = function renderList (\n\t    val,\n\t    render\n\t  ) {\n\t    var ret, i, l, keys, key;\n\t    if (Array.isArray(val)) {\n\t      ret = new Array(val.length);\n\t      for (i = 0, l = val.length; i < l; i++) {\n\t        ret[i] = render(val[i], i);\n\t      }\n\t    } else if (typeof val === 'number') {\n\t      ret = new Array(val);\n\t      for (i = 0; i < val; i++) {\n\t        ret[i] = render(i + 1, i);\n\t      }\n\t    } else if (isObject(val)) {\n\t      keys = Object.keys(val);\n\t      ret = new Array(keys.length);\n\t      for (i = 0, l = keys.length; i < l; i++) {\n\t        key = keys[i];\n\t        ret[i] = render(val[key], key, i);\n\t      }\n\t    }\n\t    return ret\n\t  };\n\t\n\t  // renderSlot\n\t  Vue.prototype._t = function (\n\t    name,\n\t    fallback,\n\t    props\n\t  ) {\n\t    var scopedSlotFn = this.$scopedSlots[name];\n\t    if (scopedSlotFn) { // scoped slot\n\t      return scopedSlotFn(props || {}) || fallback\n\t    } else {\n\t      var slotNodes = this.$slots[name];\n\t      // warn duplicate slot usage\n\t      if (slotNodes && (\"production\") !== 'production') {\n\t        slotNodes._rendered && warn(\n\t          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n\t          \"- this will likely cause render errors.\",\n\t          this\n\t        );\n\t        slotNodes._rendered = true;\n\t      }\n\t      return slotNodes || fallback\n\t    }\n\t  };\n\t\n\t  // apply v-bind object\n\t  Vue.prototype._b = function bindProps (\n\t    data,\n\t    tag,\n\t    value,\n\t    asProp\n\t  ) {\n\t    if (value) {\n\t      if (!isObject(value)) {\n\t        (\"production\") !== 'production' && warn(\n\t          'v-bind without argument expects an Object or Array value',\n\t          this\n\t        );\n\t      } else {\n\t        if (Array.isArray(value)) {\n\t          value = toObject(value);\n\t        }\n\t        for (var key in value) {\n\t          if (key === 'class' || key === 'style') {\n\t            data[key] = value[key];\n\t          } else {\n\t            var hash = asProp || config.mustUseProp(tag, key)\n\t              ? data.domProps || (data.domProps = {})\n\t              : data.attrs || (data.attrs = {});\n\t            hash[key] = value[key];\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return data\n\t  };\n\t\n\t  // check v-on keyCodes\n\t  Vue.prototype._k = function checkKeyCodes (\n\t    eventKeyCode,\n\t    key,\n\t    builtInAlias\n\t  ) {\n\t    var keyCodes = config.keyCodes[key] || builtInAlias;\n\t    if (Array.isArray(keyCodes)) {\n\t      return keyCodes.indexOf(eventKeyCode) === -1\n\t    } else {\n\t      return keyCodes !== eventKeyCode\n\t    }\n\t  };\n\t}\n\t\n\tfunction resolveSlots (\n\t  renderChildren,\n\t  context\n\t) {\n\t  var slots = {};\n\t  if (!renderChildren) {\n\t    return slots\n\t  }\n\t  var children = normalizeChildren(renderChildren) || [];\n\t  var defaultSlot = [];\n\t  var name, child;\n\t  for (var i = 0, l = children.length; i < l; i++) {\n\t    child = children[i];\n\t    // named slots should only be respected if the vnode was rendered in the\n\t    // same context.\n\t    if ((child.context === context || child.functionalContext === context) &&\n\t        child.data && (name = child.data.slot)) {\n\t      var slot = (slots[name] || (slots[name] = []));\n\t      if (child.tag === 'template') {\n\t        slot.push.apply(slot, child.children);\n\t      } else {\n\t        slot.push(child);\n\t      }\n\t    } else {\n\t      defaultSlot.push(child);\n\t    }\n\t  }\n\t  // ignore single whitespace\n\t  if (defaultSlot.length && !(\n\t    defaultSlot.length === 1 &&\n\t    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n\t  )) {\n\t    slots.default = defaultSlot;\n\t  }\n\t  return slots\n\t}\n\t\n\t/*  */\n\t\n\tfunction initEvents (vm) {\n\t  vm._events = Object.create(null);\n\t  // init parent attached events\n\t  var listeners = vm.$options._parentListeners;\n\t  var add = function (event, fn, once) {\n\t    once ? vm.$once(event, fn) : vm.$on(event, fn);\n\t  };\n\t  var remove$$1 = bind$1(vm.$off, vm);\n\t  vm._updateListeners = function (listeners, oldListeners) {\n\t    updateListeners(listeners, oldListeners || {}, add, remove$$1, vm);\n\t  };\n\t  if (listeners) {\n\t    vm._updateListeners(listeners);\n\t  }\n\t}\n\t\n\tfunction eventsMixin (Vue) {\n\t  Vue.prototype.$on = function (event, fn) {\n\t    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var vm = this;\n\t    function on () {\n\t      vm.$off(event, on);\n\t      fn.apply(vm, arguments);\n\t    }\n\t    on.fn = fn;\n\t    vm.$on(event, on);\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var vm = this;\n\t    // all\n\t    if (!arguments.length) {\n\t      vm._events = Object.create(null);\n\t      return vm\n\t    }\n\t    // specific event\n\t    var cbs = vm._events[event];\n\t    if (!cbs) {\n\t      return vm\n\t    }\n\t    if (arguments.length === 1) {\n\t      vm._events[event] = null;\n\t      return vm\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        cbs.splice(i, 1);\n\t        break\n\t      }\n\t    }\n\t    return vm\n\t  };\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var vm = this;\n\t    var cbs = vm._events[event];\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        cbs[i].apply(vm, args);\n\t      }\n\t    }\n\t    return vm\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  Vue.prototype._init = function (options) {\n\t    var vm = this;\n\t    // a uid\n\t    vm._uid = uid++;\n\t    // a flag to avoid this being observed\n\t    vm._isVue = true;\n\t    // merge options\n\t    if (options && options._isComponent) {\n\t      // optimize internal component instantiation\n\t      // since dynamic options merging is pretty slow, and none of the\n\t      // internal component options needs special treatment.\n\t      initInternalComponent(vm, options);\n\t    } else {\n\t      vm.$options = mergeOptions(\n\t        resolveConstructorOptions(vm.constructor),\n\t        options || {},\n\t        vm\n\t      );\n\t    }\n\t    /* istanbul ignore else */\n\t    if (false) {\n\t      initProxy(vm);\n\t    } else {\n\t      vm._renderProxy = vm;\n\t    }\n\t    // expose real self\n\t    vm._self = vm;\n\t    initLifecycle(vm);\n\t    initEvents(vm);\n\t    callHook(vm, 'beforeCreate');\n\t    initState(vm);\n\t    callHook(vm, 'created');\n\t    initRender(vm);\n\t  };\n\t}\n\t\n\tfunction initInternalComponent (vm, options) {\n\t  var opts = vm.$options = Object.create(vm.constructor.options);\n\t  // doing this because it's faster than dynamic enumeration.\n\t  opts.parent = options.parent;\n\t  opts.propsData = options.propsData;\n\t  opts._parentVnode = options._parentVnode;\n\t  opts._parentListeners = options._parentListeners;\n\t  opts._renderChildren = options._renderChildren;\n\t  opts._componentTag = options._componentTag;\n\t  opts._parentElm = options._parentElm;\n\t  opts._refElm = options._refElm;\n\t  if (options.render) {\n\t    opts.render = options.render;\n\t    opts.staticRenderFns = options.staticRenderFns;\n\t  }\n\t}\n\t\n\tfunction resolveConstructorOptions (Ctor) {\n\t  var options = Ctor.options;\n\t  if (Ctor.super) {\n\t    var superOptions = Ctor.super.options;\n\t    var cachedSuperOptions = Ctor.superOptions;\n\t    var extendOptions = Ctor.extendOptions;\n\t    if (superOptions !== cachedSuperOptions) {\n\t      // super option changed\n\t      Ctor.superOptions = superOptions;\n\t      extendOptions.render = options.render;\n\t      extendOptions.staticRenderFns = options.staticRenderFns;\n\t      extendOptions._scopeId = options._scopeId;\n\t      options = Ctor.options = mergeOptions(superOptions, extendOptions);\n\t      if (options.name) {\n\t        options.components[options.name] = Ctor;\n\t      }\n\t    }\n\t  }\n\t  return options\n\t}\n\t\n\tfunction Vue$3 (options) {\n\t  if (false) {\n\t    warn('Vue is a constructor and should be called with the `new` keyword');\n\t  }\n\t  this._init(options);\n\t}\n\t\n\tinitMixin(Vue$3);\n\tstateMixin(Vue$3);\n\teventsMixin(Vue$3);\n\tlifecycleMixin(Vue$3);\n\trenderMixin(Vue$3);\n\t\n\t/*  */\n\t\n\tfunction initUse (Vue) {\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tfunction initMixin$1 (Vue) {\n\t  Vue.mixin = function (mixin) {\n\t    this.options = mergeOptions(this.options, mixin);\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tfunction initExtend (Vue) {\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   */\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var SuperId = Super.cid;\n\t    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n\t    if (cachedCtors[SuperId]) {\n\t      return cachedCtors[SuperId]\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn(\n\t          'Invalid component name: \"' + name + '\". Component names ' +\n\t          'can only contain alphanumeric characaters and the hyphen.'\n\t        );\n\t      }\n\t    }\n\t    var Sub = function VueComponent (options) {\n\t      this._init(options);\n\t    };\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(\n\t      Super.options,\n\t      extendOptions\n\t    );\n\t    Sub['super'] = Super;\n\t    // allow further extension/mixin/plugin usage\n\t    Sub.extend = Super.extend;\n\t    Sub.mixin = Super.mixin;\n\t    Sub.use = Super.use;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // keep a reference to the super options at extension time.\n\t    // later at instantiation we can check if Super's options have\n\t    // been updated.\n\t    Sub.superOptions = Super.options;\n\t    Sub.extendOptions = extendOptions;\n\t    // cache constructor\n\t    cachedCtors[SuperId] = Sub;\n\t    return Sub\n\t  };\n\t}\n\t\n\t/*  */\n\t\n\tfunction initAssetRegisters (Vue) {\n\t  /**\n\t   * Create asset registration methods.\n\t   */\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (\n\t      id,\n\t      definition\n\t    ) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id]\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && config.isReservedTag(id)) {\n\t            warn(\n\t              'Do not use built-in or reserved HTML elements as component ' +\n\t              'id: ' + id\n\t            );\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = definition.name || id;\n\t          definition = this.options._base.extend(definition);\n\t        }\n\t        if (type === 'directive' && typeof definition === 'function') {\n\t          definition = { bind: definition, update: definition };\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\t/*  */\n\t\n\tvar patternTypes = [String, RegExp];\n\t\n\tfunction matches (pattern, name) {\n\t  if (typeof pattern === 'string') {\n\t    return pattern.split(',').indexOf(name) > -1\n\t  } else {\n\t    return pattern.test(name)\n\t  }\n\t}\n\t\n\tvar KeepAlive = {\n\t  name: 'keep-alive',\n\t  abstract: true,\n\t  props: {\n\t    include: patternTypes,\n\t    exclude: patternTypes\n\t  },\n\t  created: function created () {\n\t    this.cache = Object.create(null);\n\t  },\n\t  render: function render () {\n\t    var vnode = getFirstComponentChild(this.$slots.default);\n\t    if (vnode && vnode.componentOptions) {\n\t      var opts = vnode.componentOptions;\n\t      // check pattern\n\t      var name = opts.Ctor.options.name || opts.tag;\n\t      if (name && (\n\t        (this.include && !matches(this.include, name)) ||\n\t        (this.exclude && matches(this.exclude, name))\n\t      )) {\n\t        return vnode\n\t      }\n\t      var key = vnode.key == null\n\t        // same constructor may get registered as different local components\n\t        // so cid alone is not enough (#3269)\n\t        ? opts.Ctor.cid + (opts.tag ? (\"::\" + (opts.tag)) : '')\n\t        : vnode.key;\n\t      if (this.cache[key]) {\n\t        vnode.child = this.cache[key].child;\n\t      } else {\n\t        this.cache[key] = vnode;\n\t      }\n\t      vnode.data.keepAlive = true;\n\t    }\n\t    return vnode\n\t  },\n\t  destroyed: function destroyed () {\n\t    var this$1 = this;\n\t\n\t    for (var key in this.cache) {\n\t      var vnode = this$1.cache[key];\n\t      callHook(vnode.child, 'deactivated');\n\t      vnode.child.$destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar builtInComponents = {\n\t  KeepAlive: KeepAlive\n\t};\n\t\n\t/*  */\n\t\n\tfunction initGlobalAPI (Vue) {\n\t  // config\n\t  var configDef = {};\n\t  configDef.get = function () { return config; };\n\t  if (false) {\n\t    configDef.set = function () {\n\t      warn(\n\t        'Do not replace the Vue.config object, set individual fields instead.'\n\t      );\n\t    };\n\t  }\n\t  Object.defineProperty(Vue, 'config', configDef);\n\t  Vue.util = util;\n\t  Vue.set = set$1;\n\t  Vue.delete = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  Vue.options = Object.create(null);\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue.options[type + 's'] = Object.create(null);\n\t  });\n\t\n\t  // this is used to identify the \"base\" constructor to extend all plain-object\n\t  // components with in Weex's multi-instance scenarios.\n\t  Vue.options._base = Vue;\n\t\n\t  extend(Vue.options.components, builtInComponents);\n\t\n\t  initUse(Vue);\n\t  initMixin$1(Vue);\n\t  initExtend(Vue);\n\t  initAssetRegisters(Vue);\n\t}\n\t\n\tinitGlobalAPI(Vue$3);\n\t\n\tObject.defineProperty(Vue$3.prototype, '$isServer', {\n\t  get: isServerRendering\n\t});\n\t\n\tVue$3.version = '2.1.4';\n\t\n\t/*  */\n\t\n\t// attributes that should be using props for binding\n\tvar mustUseProp = function (tag, attr) {\n\t  return (\n\t    (attr === 'value' && (tag === 'input' || tag === 'textarea' || tag === 'option')) ||\n\t    (attr === 'selected' && tag === 'option') ||\n\t    (attr === 'checked' && tag === 'input') ||\n\t    (attr === 'muted' && tag === 'video')\n\t  )\n\t};\n\t\n\tvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\t\n\tvar isBooleanAttr = makeMap(\n\t  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n\t  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n\t  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n\t  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n\t  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n\t  'truespeed,typemustmatch,visible'\n\t);\n\t\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\t\n\tvar isXlink = function (name) {\n\t  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n\t};\n\t\n\tvar getXlinkProp = function (name) {\n\t  return isXlink(name) ? name.slice(6, name.length) : ''\n\t};\n\t\n\tvar isFalsyAttrValue = function (val) {\n\t  return val == null || val === false\n\t};\n\t\n\t/*  */\n\t\n\tfunction genClassForVnode (vnode) {\n\t  var data = vnode.data;\n\t  var parentNode = vnode;\n\t  var childNode = vnode;\n\t  while (childNode.child) {\n\t    childNode = childNode.child._vnode;\n\t    if (childNode.data) {\n\t      data = mergeClassData(childNode.data, data);\n\t    }\n\t  }\n\t  while ((parentNode = parentNode.parent)) {\n\t    if (parentNode.data) {\n\t      data = mergeClassData(data, parentNode.data);\n\t    }\n\t  }\n\t  return genClassFromData(data)\n\t}\n\t\n\tfunction mergeClassData (child, parent) {\n\t  return {\n\t    staticClass: concat(child.staticClass, parent.staticClass),\n\t    class: child.class\n\t      ? [child.class, parent.class]\n\t      : parent.class\n\t  }\n\t}\n\t\n\tfunction genClassFromData (data) {\n\t  var dynamicClass = data.class;\n\t  var staticClass = data.staticClass;\n\t  if (staticClass || dynamicClass) {\n\t    return concat(staticClass, stringifyClass(dynamicClass))\n\t  }\n\t  /* istanbul ignore next */\n\t  return ''\n\t}\n\t\n\tfunction concat (a, b) {\n\t  return a ? b ? (a + ' ' + b) : a : (b || '')\n\t}\n\t\n\tfunction stringifyClass (value) {\n\t  var res = '';\n\t  if (!value) {\n\t    return res\n\t  }\n\t  if (typeof value === 'string') {\n\t    return value\n\t  }\n\t  if (Array.isArray(value)) {\n\t    var stringified;\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        if ((stringified = stringifyClass(value[i]))) {\n\t          res += stringified + ' ';\n\t        }\n\t      }\n\t    }\n\t    return res.slice(0, -1)\n\t  }\n\t  if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) { res += key + ' '; }\n\t    }\n\t    return res.slice(0, -1)\n\t  }\n\t  /* istanbul ignore next */\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tvar namespaceMap = {\n\t  svg: 'http://www.w3.org/2000/svg',\n\t  math: 'http://www.w3.org/1998/Math/MathML',\n\t  xhtml: 'http://www.w3.org/1999/xhtml'\n\t};\n\t\n\tvar isHTMLTag = makeMap(\n\t  'html,body,base,head,link,meta,style,title,' +\n\t  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n\t  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n\t  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n\t  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n\t  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n\t  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n\t  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n\t  'output,progress,select,textarea,' +\n\t  'details,dialog,menu,menuitem,summary,' +\n\t  'content,element,shadow,template'\n\t);\n\t\n\t// this map is intentionally selective, only covering SVG elements that may\n\t// contain child elements.\n\tvar isSVG = makeMap(\n\t  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font,' +\n\t  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n\t  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n\t  true\n\t);\n\t\n\tvar isPreTag = function (tag) { return tag === 'pre'; };\n\t\n\tvar isReservedTag = function (tag) {\n\t  return isHTMLTag(tag) || isSVG(tag)\n\t};\n\t\n\tfunction getTagNamespace (tag) {\n\t  if (isSVG(tag)) {\n\t    return 'svg'\n\t  }\n\t  // basic support for MathML\n\t  // note it doesn't support other MathML elements being component roots\n\t  if (tag === 'math') {\n\t    return 'math'\n\t  }\n\t}\n\t\n\tvar unknownElementCache = Object.create(null);\n\tfunction isUnknownElement (tag) {\n\t  /* istanbul ignore if */\n\t  if (!inBrowser) {\n\t    return true\n\t  }\n\t  if (isReservedTag(tag)) {\n\t    return false\n\t  }\n\t  tag = tag.toLowerCase();\n\t  /* istanbul ignore if */\n\t  if (unknownElementCache[tag] != null) {\n\t    return unknownElementCache[tag]\n\t  }\n\t  var el = document.createElement(tag);\n\t  if (tag.indexOf('-') > -1) {\n\t    // http://stackoverflow.com/a/28210364/1070244\n\t    return (unknownElementCache[tag] = (\n\t      el.constructor === window.HTMLUnknownElement ||\n\t      el.constructor === window.HTMLElement\n\t    ))\n\t  } else {\n\t    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t */\n\tfunction query (el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn(\n\t        'Cannot find element: ' + selector\n\t      );\n\t      return document.createElement('div')\n\t    }\n\t  }\n\t  return el\n\t}\n\t\n\t/*  */\n\t\n\tfunction createElement$1 (tagName, vnode) {\n\t  var elm = document.createElement(tagName);\n\t  if (tagName !== 'select') {\n\t    return elm\n\t  }\n\t  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n\t    elm.setAttribute('multiple', 'multiple');\n\t  }\n\t  return elm\n\t}\n\t\n\tfunction createElementNS (namespace, tagName) {\n\t  return document.createElementNS(namespaceMap[namespace], tagName)\n\t}\n\t\n\tfunction createTextNode (text) {\n\t  return document.createTextNode(text)\n\t}\n\t\n\tfunction createComment (text) {\n\t  return document.createComment(text)\n\t}\n\t\n\tfunction insertBefore (parentNode, newNode, referenceNode) {\n\t  parentNode.insertBefore(newNode, referenceNode);\n\t}\n\t\n\tfunction removeChild (node, child) {\n\t  node.removeChild(child);\n\t}\n\t\n\tfunction appendChild (node, child) {\n\t  node.appendChild(child);\n\t}\n\t\n\tfunction parentNode (node) {\n\t  return node.parentNode\n\t}\n\t\n\tfunction nextSibling (node) {\n\t  return node.nextSibling\n\t}\n\t\n\tfunction tagName (node) {\n\t  return node.tagName\n\t}\n\t\n\tfunction setTextContent (node, text) {\n\t  node.textContent = text;\n\t}\n\t\n\tfunction childNodes (node) {\n\t  return node.childNodes\n\t}\n\t\n\tfunction setAttribute (node, key, val) {\n\t  node.setAttribute(key, val);\n\t}\n\t\n\t\n\tvar nodeOps = Object.freeze({\n\t\tcreateElement: createElement$1,\n\t\tcreateElementNS: createElementNS,\n\t\tcreateTextNode: createTextNode,\n\t\tcreateComment: createComment,\n\t\tinsertBefore: insertBefore,\n\t\tremoveChild: removeChild,\n\t\tappendChild: appendChild,\n\t\tparentNode: parentNode,\n\t\tnextSibling: nextSibling,\n\t\ttagName: tagName,\n\t\tsetTextContent: setTextContent,\n\t\tchildNodes: childNodes,\n\t\tsetAttribute: setAttribute\n\t});\n\t\n\t/*  */\n\t\n\tvar ref = {\n\t  create: function create (_, vnode) {\n\t    registerRef(vnode);\n\t  },\n\t  update: function update (oldVnode, vnode) {\n\t    if (oldVnode.data.ref !== vnode.data.ref) {\n\t      registerRef(oldVnode, true);\n\t      registerRef(vnode);\n\t    }\n\t  },\n\t  destroy: function destroy (vnode) {\n\t    registerRef(vnode, true);\n\t  }\n\t};\n\t\n\tfunction registerRef (vnode, isRemoval) {\n\t  var key = vnode.data.ref;\n\t  if (!key) { return }\n\t\n\t  var vm = vnode.context;\n\t  var ref = vnode.child || vnode.elm;\n\t  var refs = vm.$refs;\n\t  if (isRemoval) {\n\t    if (Array.isArray(refs[key])) {\n\t      remove$1(refs[key], ref);\n\t    } else if (refs[key] === ref) {\n\t      refs[key] = undefined;\n\t    }\n\t  } else {\n\t    if (vnode.data.refInFor) {\n\t      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n\t        refs[key].push(ref);\n\t      } else {\n\t        refs[key] = [ref];\n\t      }\n\t    } else {\n\t      refs[key] = ref;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Virtual DOM patching algorithm based on Snabbdom by\n\t * Simon Friis Vindum (@paldepind)\n\t * Licensed under the MIT License\n\t * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n\t *\n\t * modified by Evan You (@yyx990803)\n\t *\n\t\n\t/*\n\t * Not type-checking this because this file is perf-critical and the cost\n\t * of making flow understand it is not worth it.\n\t */\n\t\n\tvar emptyNode = new VNode('', {}, []);\n\t\n\tvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\t\n\tfunction isUndef (s) {\n\t  return s == null\n\t}\n\t\n\tfunction isDef (s) {\n\t  return s != null\n\t}\n\t\n\tfunction sameVnode (vnode1, vnode2) {\n\t  return (\n\t    vnode1.key === vnode2.key &&\n\t    vnode1.tag === vnode2.tag &&\n\t    vnode1.isComment === vnode2.isComment &&\n\t    !vnode1.data === !vnode2.data\n\t  )\n\t}\n\t\n\tfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n\t  var i, key;\n\t  var map = {};\n\t  for (i = beginIdx; i <= endIdx; ++i) {\n\t    key = children[i].key;\n\t    if (isDef(key)) { map[key] = i; }\n\t  }\n\t  return map\n\t}\n\t\n\tfunction createPatchFunction (backend) {\n\t  var i, j;\n\t  var cbs = {};\n\t\n\t  var modules = backend.modules;\n\t  var nodeOps = backend.nodeOps;\n\t\n\t  for (i = 0; i < hooks$1.length; ++i) {\n\t    cbs[hooks$1[i]] = [];\n\t    for (j = 0; j < modules.length; ++j) {\n\t      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n\t    }\n\t  }\n\t\n\t  function emptyNodeAt (elm) {\n\t    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n\t  }\n\t\n\t  function createRmCb (childElm, listeners) {\n\t    function remove$$1 () {\n\t      if (--remove$$1.listeners === 0) {\n\t        removeElement(childElm);\n\t      }\n\t    }\n\t    remove$$1.listeners = listeners;\n\t    return remove$$1\n\t  }\n\t\n\t  function removeElement (el) {\n\t    var parent = nodeOps.parentNode(el);\n\t    // element may have already been removed due to v-html\n\t    if (parent) {\n\t      nodeOps.removeChild(parent, el);\n\t    }\n\t  }\n\t\n\t  var inPre = 0;\n\t  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n\t    vnode.isRootInsert = !nested; // for transition enter check\n\t    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n\t      return\n\t    }\n\t\n\t    var data = vnode.data;\n\t    var children = vnode.children;\n\t    var tag = vnode.tag;\n\t    if (isDef(tag)) {\n\t      if (false) {\n\t        if (data && data.pre) {\n\t          inPre++;\n\t        }\n\t        if (\n\t          !inPre &&\n\t          !vnode.ns &&\n\t          !(config.ignoredElements && config.ignoredElements.indexOf(tag) > -1) &&\n\t          config.isUnknownElement(tag)\n\t        ) {\n\t          warn(\n\t            'Unknown custom element: <' + tag + '> - did you ' +\n\t            'register the component correctly? For recursive components, ' +\n\t            'make sure to provide the \"name\" option.',\n\t            vnode.context\n\t          );\n\t        }\n\t      }\n\t      vnode.elm = vnode.ns\n\t        ? nodeOps.createElementNS(vnode.ns, tag)\n\t        : nodeOps.createElement(tag, vnode);\n\t      setScope(vnode);\n\t\n\t      /* istanbul ignore if */\n\t      {\n\t        createChildren(vnode, children, insertedVnodeQueue);\n\t        if (isDef(data)) {\n\t          invokeCreateHooks(vnode, insertedVnodeQueue);\n\t        }\n\t        insert(parentElm, vnode.elm, refElm);\n\t      }\n\t\n\t      if (false) {\n\t        inPre--;\n\t      }\n\t    } else if (vnode.isComment) {\n\t      vnode.elm = nodeOps.createComment(vnode.text);\n\t      insert(parentElm, vnode.elm, refElm);\n\t    } else {\n\t      vnode.elm = nodeOps.createTextNode(vnode.text);\n\t      insert(parentElm, vnode.elm, refElm);\n\t    }\n\t  }\n\t\n\t  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n\t    var i = vnode.data;\n\t    if (isDef(i)) {\n\t      var isReactivated = isDef(vnode.child) && i.keepAlive;\n\t      if (isDef(i = i.hook) && isDef(i = i.init)) {\n\t        i(vnode, false /* hydrating */, parentElm, refElm);\n\t      }\n\t      // after calling the init hook, if the vnode is a child component\n\t      // it should've created a child instance and mounted it. the child\n\t      // component also has set the placeholder vnode's elm.\n\t      // in that case we can just return the element and be done.\n\t      if (isDef(vnode.child)) {\n\t        initComponent(vnode, insertedVnodeQueue);\n\t        if (isReactivated) {\n\t          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n\t        }\n\t        return true\n\t      }\n\t    }\n\t  }\n\t\n\t  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n\t    var i;\n\t    // hack for #4339: a reactivated component with inner transition\n\t    // does not trigger because the inner node's created hooks are not called\n\t    // again. It's not ideal to involve module-specific logic in here but\n\t    // there doesn't seem to be a better way to do it.\n\t    var innerNode = vnode;\n\t    while (innerNode.child) {\n\t      innerNode = innerNode.child._vnode;\n\t      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n\t        for (i = 0; i < cbs.activate.length; ++i) {\n\t          cbs.activate[i](emptyNode, innerNode);\n\t        }\n\t        insertedVnodeQueue.push(innerNode);\n\t        break\n\t      }\n\t    }\n\t    // unlike a newly created component,\n\t    // a reactivated keep-alive component doesn't insert itself\n\t    insert(parentElm, vnode.elm, refElm);\n\t  }\n\t\n\t  function insert (parent, elm, ref) {\n\t    if (parent) {\n\t      nodeOps.insertBefore(parent, elm, ref);\n\t    }\n\t  }\n\t\n\t  function createChildren (vnode, children, insertedVnodeQueue) {\n\t    if (Array.isArray(children)) {\n\t      for (var i = 0; i < children.length; ++i) {\n\t        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n\t      }\n\t    } else if (isPrimitive(vnode.text)) {\n\t      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n\t    }\n\t  }\n\t\n\t  function isPatchable (vnode) {\n\t    while (vnode.child) {\n\t      vnode = vnode.child._vnode;\n\t    }\n\t    return isDef(vnode.tag)\n\t  }\n\t\n\t  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n\t    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n\t      cbs.create[i$1](emptyNode, vnode);\n\t    }\n\t    i = vnode.data.hook; // Reuse variable\n\t    if (isDef(i)) {\n\t      if (i.create) { i.create(emptyNode, vnode); }\n\t      if (i.insert) { insertedVnodeQueue.push(vnode); }\n\t    }\n\t  }\n\t\n\t  function initComponent (vnode, insertedVnodeQueue) {\n\t    if (vnode.data.pendingInsert) {\n\t      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n\t    }\n\t    vnode.elm = vnode.child.$el;\n\t    if (isPatchable(vnode)) {\n\t      invokeCreateHooks(vnode, insertedVnodeQueue);\n\t      setScope(vnode);\n\t    } else {\n\t      // empty component root.\n\t      // skip all element-related modules except for ref (#3455)\n\t      registerRef(vnode);\n\t      // make sure to invoke the insert hook\n\t      insertedVnodeQueue.push(vnode);\n\t    }\n\t  }\n\t\n\t  // set scope id attribute for scoped CSS.\n\t  // this is implemented as a special case to avoid the overhead\n\t  // of going through the normal attribute patching process.\n\t  function setScope (vnode) {\n\t    var i;\n\t    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n\t      nodeOps.setAttribute(vnode.elm, i, '');\n\t    }\n\t    if (isDef(i = activeInstance) &&\n\t        i !== vnode.context &&\n\t        isDef(i = i.$options._scopeId)) {\n\t      nodeOps.setAttribute(vnode.elm, i, '');\n\t    }\n\t  }\n\t\n\t  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n\t    for (; startIdx <= endIdx; ++startIdx) {\n\t      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n\t    }\n\t  }\n\t\n\t  function invokeDestroyHook (vnode) {\n\t    var i, j;\n\t    var data = vnode.data;\n\t    if (isDef(data)) {\n\t      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n\t      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n\t    }\n\t    if (isDef(i = vnode.children)) {\n\t      for (j = 0; j < vnode.children.length; ++j) {\n\t        invokeDestroyHook(vnode.children[j]);\n\t      }\n\t    }\n\t  }\n\t\n\t  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n\t    for (; startIdx <= endIdx; ++startIdx) {\n\t      var ch = vnodes[startIdx];\n\t      if (isDef(ch)) {\n\t        if (isDef(ch.tag)) {\n\t          removeAndInvokeRemoveHook(ch);\n\t          invokeDestroyHook(ch);\n\t        } else { // Text node\n\t          nodeOps.removeChild(parentElm, ch.elm);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function removeAndInvokeRemoveHook (vnode, rm) {\n\t    if (rm || isDef(vnode.data)) {\n\t      var listeners = cbs.remove.length + 1;\n\t      if (!rm) {\n\t        // directly removing\n\t        rm = createRmCb(vnode.elm, listeners);\n\t      } else {\n\t        // we have a recursively passed down rm callback\n\t        // increase the listeners count\n\t        rm.listeners += listeners;\n\t      }\n\t      // recursively invoke hooks on child component root node\n\t      if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\n\t        removeAndInvokeRemoveHook(i, rm);\n\t      }\n\t      for (i = 0; i < cbs.remove.length; ++i) {\n\t        cbs.remove[i](vnode, rm);\n\t      }\n\t      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n\t        i(vnode, rm);\n\t      } else {\n\t        rm();\n\t      }\n\t    } else {\n\t      removeElement(vnode.elm);\n\t    }\n\t  }\n\t\n\t  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n\t    var oldStartIdx = 0;\n\t    var newStartIdx = 0;\n\t    var oldEndIdx = oldCh.length - 1;\n\t    var oldStartVnode = oldCh[0];\n\t    var oldEndVnode = oldCh[oldEndIdx];\n\t    var newEndIdx = newCh.length - 1;\n\t    var newStartVnode = newCh[0];\n\t    var newEndVnode = newCh[newEndIdx];\n\t    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\t\n\t    // removeOnly is a special flag used only by <transition-group>\n\t    // to ensure removed elements stay in correct relative positions\n\t    // during leaving transitions\n\t    var canMove = !removeOnly;\n\t\n\t    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n\t      if (isUndef(oldStartVnode)) {\n\t        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n\t      } else if (isUndef(oldEndVnode)) {\n\t        oldEndVnode = oldCh[--oldEndIdx];\n\t      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n\t        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n\t        oldStartVnode = oldCh[++oldStartIdx];\n\t        newStartVnode = newCh[++newStartIdx];\n\t      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n\t        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n\t        oldEndVnode = oldCh[--oldEndIdx];\n\t        newEndVnode = newCh[--newEndIdx];\n\t      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n\t        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n\t        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n\t        oldStartVnode = oldCh[++oldStartIdx];\n\t        newEndVnode = newCh[--newEndIdx];\n\t      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n\t        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n\t        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n\t        oldEndVnode = oldCh[--oldEndIdx];\n\t        newStartVnode = newCh[++newStartIdx];\n\t      } else {\n\t        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n\t        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n\t        if (isUndef(idxInOld)) { // New element\n\t          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n\t          newStartVnode = newCh[++newStartIdx];\n\t        } else {\n\t          elmToMove = oldCh[idxInOld];\n\t          /* istanbul ignore if */\n\t          if (false) {\n\t            warn(\n\t              'It seems there are duplicate keys that is causing an update error. ' +\n\t              'Make sure each v-for item has a unique key.'\n\t            );\n\t          }\n\t          if (elmToMove.tag !== newStartVnode.tag) {\n\t            // same key but different element. treat as new element\n\t            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n\t            newStartVnode = newCh[++newStartIdx];\n\t          } else {\n\t            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n\t            oldCh[idxInOld] = undefined;\n\t            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n\t            newStartVnode = newCh[++newStartIdx];\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (oldStartIdx > oldEndIdx) {\n\t      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n\t      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n\t    } else if (newStartIdx > newEndIdx) {\n\t      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n\t    }\n\t  }\n\t\n\t  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n\t    if (oldVnode === vnode) {\n\t      return\n\t    }\n\t    // reuse element for static trees.\n\t    // note we only do this if the vnode is cloned -\n\t    // if the new node is not cloned it means the render functions have been\n\t    // reset by the hot-reload-api and we need to do a proper re-render.\n\t    if (vnode.isStatic &&\n\t        oldVnode.isStatic &&\n\t        vnode.key === oldVnode.key &&\n\t        (vnode.isCloned || vnode.isOnce)) {\n\t      vnode.elm = oldVnode.elm;\n\t      vnode.child = oldVnode.child;\n\t      return\n\t    }\n\t    var i;\n\t    var data = vnode.data;\n\t    var hasData = isDef(data);\n\t    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n\t      i(oldVnode, vnode);\n\t    }\n\t    var elm = vnode.elm = oldVnode.elm;\n\t    var oldCh = oldVnode.children;\n\t    var ch = vnode.children;\n\t    if (hasData && isPatchable(vnode)) {\n\t      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n\t      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n\t    }\n\t    if (isUndef(vnode.text)) {\n\t      if (isDef(oldCh) && isDef(ch)) {\n\t        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n\t      } else if (isDef(ch)) {\n\t        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n\t        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n\t      } else if (isDef(oldCh)) {\n\t        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n\t      } else if (isDef(oldVnode.text)) {\n\t        nodeOps.setTextContent(elm, '');\n\t      }\n\t    } else if (oldVnode.text !== vnode.text) {\n\t      nodeOps.setTextContent(elm, vnode.text);\n\t    }\n\t    if (hasData) {\n\t      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n\t    }\n\t  }\n\t\n\t  function invokeInsertHook (vnode, queue, initial) {\n\t    // delay insert hooks for component root nodes, invoke them after the\n\t    // element is really inserted\n\t    if (initial && vnode.parent) {\n\t      vnode.parent.data.pendingInsert = queue;\n\t    } else {\n\t      for (var i = 0; i < queue.length; ++i) {\n\t        queue[i].data.hook.insert(queue[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var bailed = false;\n\t  function hydrate (elm, vnode, insertedVnodeQueue) {\n\t    if (false) {\n\t      if (!assertNodeMatch(elm, vnode)) {\n\t        return false\n\t      }\n\t    }\n\t    vnode.elm = elm;\n\t    var tag = vnode.tag;\n\t    var data = vnode.data;\n\t    var children = vnode.children;\n\t    if (isDef(data)) {\n\t      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n\t      if (isDef(i = vnode.child)) {\n\t        // child component. it should have hydrated its own tree.\n\t        initComponent(vnode, insertedVnodeQueue);\n\t        return true\n\t      }\n\t    }\n\t    if (isDef(tag)) {\n\t      if (isDef(children)) {\n\t        var childNodes = nodeOps.childNodes(elm);\n\t        // empty element, allow client to pick up and populate children\n\t        if (!childNodes.length) {\n\t          createChildren(vnode, children, insertedVnodeQueue);\n\t        } else {\n\t          var childrenMatch = true;\n\t          if (childNodes.length !== children.length) {\n\t            childrenMatch = false;\n\t          } else {\n\t            for (var i$1 = 0; i$1 < children.length; i$1++) {\n\t              if (!hydrate(childNodes[i$1], children[i$1], insertedVnodeQueue)) {\n\t                childrenMatch = false;\n\t                break\n\t              }\n\t            }\n\t          }\n\t          if (!childrenMatch) {\n\t            if (false) {\n\t              bailed = true;\n\t              console.warn('Parent: ', elm);\n\t              console.warn('Mismatching childNodes vs. VNodes: ', childNodes, children);\n\t            }\n\t            return false\n\t          }\n\t        }\n\t      }\n\t      if (isDef(data)) {\n\t        invokeCreateHooks(vnode, insertedVnodeQueue);\n\t      }\n\t    }\n\t    return true\n\t  }\n\t\n\t  function assertNodeMatch (node, vnode) {\n\t    if (vnode.tag) {\n\t      return (\n\t        vnode.tag.indexOf('vue-component') === 0 ||\n\t        vnode.tag.toLowerCase() === nodeOps.tagName(node).toLowerCase()\n\t      )\n\t    } else {\n\t      return _toString(vnode.text) === node.data\n\t    }\n\t  }\n\t\n\t  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n\t    if (!vnode) {\n\t      if (oldVnode) { invokeDestroyHook(oldVnode); }\n\t      return\n\t    }\n\t\n\t    var elm, parent;\n\t    var isInitialPatch = false;\n\t    var insertedVnodeQueue = [];\n\t\n\t    if (!oldVnode) {\n\t      // empty mount (likely as component), create new root element\n\t      isInitialPatch = true;\n\t      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n\t    } else {\n\t      var isRealElement = isDef(oldVnode.nodeType);\n\t      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n\t        // patch existing root node\n\t        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n\t      } else {\n\t        if (isRealElement) {\n\t          // mounting to a real element\n\t          // check if this is server-rendered content and if we can perform\n\t          // a successful hydration.\n\t          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n\t            oldVnode.removeAttribute('server-rendered');\n\t            hydrating = true;\n\t          }\n\t          if (hydrating) {\n\t            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n\t              invokeInsertHook(vnode, insertedVnodeQueue, true);\n\t              return oldVnode\n\t            } else if (false) {\n\t              warn(\n\t                'The client-side rendered virtual DOM tree is not matching ' +\n\t                'server-rendered content. This is likely caused by incorrect ' +\n\t                'HTML markup, for example nesting block-level elements inside ' +\n\t                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n\t                'full client-side render.'\n\t              );\n\t            }\n\t          }\n\t          // either not server-rendered, or hydration failed.\n\t          // create an empty node and replace it\n\t          oldVnode = emptyNodeAt(oldVnode);\n\t        }\n\t\n\t        // replacing existing element\n\t        elm = oldVnode.elm;\n\t        parent = nodeOps.parentNode(elm);\n\t        createElm(vnode, insertedVnodeQueue, parent, nodeOps.nextSibling(elm));\n\t\n\t        if (vnode.parent) {\n\t          // component root element replaced.\n\t          // update parent placeholder node element, recursively\n\t          var ancestor = vnode.parent;\n\t          while (ancestor) {\n\t            ancestor.elm = vnode.elm;\n\t            ancestor = ancestor.parent;\n\t          }\n\t          if (isPatchable(vnode)) {\n\t            for (var i = 0; i < cbs.create.length; ++i) {\n\t              cbs.create[i](emptyNode, vnode.parent);\n\t            }\n\t          }\n\t        }\n\t\n\t        if (parent !== null) {\n\t          removeVnodes(parent, [oldVnode], 0, 0);\n\t        } else if (isDef(oldVnode.tag)) {\n\t          invokeDestroyHook(oldVnode);\n\t        }\n\t      }\n\t    }\n\t\n\t    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n\t    return vnode.elm\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar directives = {\n\t  create: updateDirectives,\n\t  update: updateDirectives,\n\t  destroy: function unbindDirectives (vnode) {\n\t    updateDirectives(vnode, emptyNode);\n\t  }\n\t};\n\t\n\tfunction updateDirectives (\n\t  oldVnode,\n\t  vnode\n\t) {\n\t  if (!oldVnode.data.directives && !vnode.data.directives) {\n\t    return\n\t  }\n\t  var isCreate = oldVnode === emptyNode;\n\t  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n\t  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\t\n\t  var dirsWithInsert = [];\n\t  var dirsWithPostpatch = [];\n\t\n\t  var key, oldDir, dir;\n\t  for (key in newDirs) {\n\t    oldDir = oldDirs[key];\n\t    dir = newDirs[key];\n\t    if (!oldDir) {\n\t      // new directive, bind\n\t      callHook$1(dir, 'bind', vnode, oldVnode);\n\t      if (dir.def && dir.def.inserted) {\n\t        dirsWithInsert.push(dir);\n\t      }\n\t    } else {\n\t      // existing directive, update\n\t      dir.oldValue = oldDir.value;\n\t      callHook$1(dir, 'update', vnode, oldVnode);\n\t      if (dir.def && dir.def.componentUpdated) {\n\t        dirsWithPostpatch.push(dir);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dirsWithInsert.length) {\n\t    var callInsert = function () {\n\t      dirsWithInsert.forEach(function (dir) {\n\t        callHook$1(dir, 'inserted', vnode, oldVnode);\n\t      });\n\t    };\n\t    if (isCreate) {\n\t      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n\t    } else {\n\t      callInsert();\n\t    }\n\t  }\n\t\n\t  if (dirsWithPostpatch.length) {\n\t    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n\t      dirsWithPostpatch.forEach(function (dir) {\n\t        callHook$1(dir, 'componentUpdated', vnode, oldVnode);\n\t      });\n\t    }, 'dir-postpatch');\n\t  }\n\t\n\t  if (!isCreate) {\n\t    for (key in oldDirs) {\n\t      if (!newDirs[key]) {\n\t        // no longer present, unbind\n\t        callHook$1(oldDirs[key], 'unbind', oldVnode);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar emptyModifiers = Object.create(null);\n\t\n\tfunction normalizeDirectives$1 (\n\t  dirs,\n\t  vm\n\t) {\n\t  var res = Object.create(null);\n\t  if (!dirs) {\n\t    return res\n\t  }\n\t  var i, dir;\n\t  for (i = 0; i < dirs.length; i++) {\n\t    dir = dirs[i];\n\t    if (!dir.modifiers) {\n\t      dir.modifiers = emptyModifiers;\n\t    }\n\t    res[getRawDirName(dir)] = dir;\n\t    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n\t  }\n\t  return res\n\t}\n\t\n\tfunction getRawDirName (dir) {\n\t  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n\t}\n\t\n\tfunction callHook$1 (dir, hook, vnode, oldVnode) {\n\t  var fn = dir.def && dir.def[hook];\n\t  if (fn) {\n\t    fn(vnode.elm, dir, vnode, oldVnode);\n\t  }\n\t}\n\t\n\tvar baseModules = [\n\t  ref,\n\t  directives\n\t];\n\t\n\t/*  */\n\t\n\tfunction updateAttrs (oldVnode, vnode) {\n\t  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n\t    return\n\t  }\n\t  var key, cur, old;\n\t  var elm = vnode.elm;\n\t  var oldAttrs = oldVnode.data.attrs || {};\n\t  var attrs = vnode.data.attrs || {};\n\t  // clone observed objects, as the user probably wants to mutate it\n\t  if (attrs.__ob__) {\n\t    attrs = vnode.data.attrs = extend({}, attrs);\n\t  }\n\t\n\t  for (key in attrs) {\n\t    cur = attrs[key];\n\t    old = oldAttrs[key];\n\t    if (old !== cur) {\n\t      setAttr(elm, key, cur);\n\t    }\n\t  }\n\t  for (key in oldAttrs) {\n\t    if (attrs[key] == null) {\n\t      if (isXlink(key)) {\n\t        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n\t      } else if (!isEnumeratedAttr(key)) {\n\t        elm.removeAttribute(key);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction setAttr (el, key, value) {\n\t  if (isBooleanAttr(key)) {\n\t    // set attribute for blank value\n\t    // e.g. <option disabled>Select one</option>\n\t    if (isFalsyAttrValue(value)) {\n\t      el.removeAttribute(key);\n\t    } else {\n\t      el.setAttribute(key, key);\n\t    }\n\t  } else if (isEnumeratedAttr(key)) {\n\t    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n\t  } else if (isXlink(key)) {\n\t    if (isFalsyAttrValue(value)) {\n\t      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n\t    } else {\n\t      el.setAttributeNS(xlinkNS, key, value);\n\t    }\n\t  } else {\n\t    if (isFalsyAttrValue(value)) {\n\t      el.removeAttribute(key);\n\t    } else {\n\t      el.setAttribute(key, value);\n\t    }\n\t  }\n\t}\n\t\n\tvar attrs = {\n\t  create: updateAttrs,\n\t  update: updateAttrs\n\t};\n\t\n\t/*  */\n\t\n\tfunction updateClass (oldVnode, vnode) {\n\t  var el = vnode.elm;\n\t  var data = vnode.data;\n\t  var oldData = oldVnode.data;\n\t  if (!data.staticClass && !data.class &&\n\t      (!oldData || (!oldData.staticClass && !oldData.class))) {\n\t    return\n\t  }\n\t\n\t  var cls = genClassForVnode(vnode);\n\t\n\t  // handle transition classes\n\t  var transitionClass = el._transitionClasses;\n\t  if (transitionClass) {\n\t    cls = concat(cls, stringifyClass(transitionClass));\n\t  }\n\t\n\t  // set the class\n\t  if (cls !== el._prevClass) {\n\t    el.setAttribute('class', cls);\n\t    el._prevClass = cls;\n\t  }\n\t}\n\t\n\tvar klass = {\n\t  create: updateClass,\n\t  update: updateClass\n\t};\n\t\n\t// skip type checking this file because we need to attach private properties\n\t// to elements\n\t\n\tfunction updateDOMListeners (oldVnode, vnode) {\n\t  if (!oldVnode.data.on && !vnode.data.on) {\n\t    return\n\t  }\n\t  var on = vnode.data.on || {};\n\t  var oldOn = oldVnode.data.on || {};\n\t  var add = vnode.elm._v_add || (\n\t    vnode.elm._v_add = function (event, handler, once, capture) {\n\t      if (once) {\n\t        var oldHandler = handler;\n\t        handler = function (ev) {\n\t          remove(event, handler, capture);\n\t          arguments.length === 1\n\t            ? oldHandler(ev)\n\t            : oldHandler.apply(null, arguments);\n\t        };\n\t      }\n\t      vnode.elm.addEventListener(event, handler, capture);\n\t    }\n\t  );\n\t  var remove = vnode.elm._v_remove || (\n\t    vnode.elm._v_remove = function (event, handler, capture) {\n\t      vnode.elm.removeEventListener(event, handler, capture);\n\t    }\n\t  );\n\t  updateListeners(on, oldOn, add, remove, vnode.context);\n\t}\n\t\n\tvar events = {\n\t  create: updateDOMListeners,\n\t  update: updateDOMListeners\n\t};\n\t\n\t/*  */\n\t\n\tfunction updateDOMProps (oldVnode, vnode) {\n\t  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n\t    return\n\t  }\n\t  var key, cur;\n\t  var elm = vnode.elm;\n\t  var oldProps = oldVnode.data.domProps || {};\n\t  var props = vnode.data.domProps || {};\n\t  // clone observed objects, as the user probably wants to mutate it\n\t  if (props.__ob__) {\n\t    props = vnode.data.domProps = extend({}, props);\n\t  }\n\t\n\t  for (key in oldProps) {\n\t    if (props[key] == null) {\n\t      elm[key] = '';\n\t    }\n\t  }\n\t  for (key in props) {\n\t    cur = props[key];\n\t    // ignore children if the node has textContent or innerHTML,\n\t    // as these will throw away existing DOM nodes and cause removal errors\n\t    // on subsequent patches (#3360)\n\t    if (key === 'textContent' || key === 'innerHTML') {\n\t      if (vnode.children) { vnode.children.length = 0; }\n\t      if (cur === oldProps[key]) { continue }\n\t    }\n\t    if (key === 'value') {\n\t      // store value as _value as well since\n\t      // non-string values will be stringified\n\t      elm._value = cur;\n\t      // avoid resetting cursor position when value is the same\n\t      var strCur = cur == null ? '' : String(cur);\n\t      if (elm.value !== strCur && !elm.composing) {\n\t        elm.value = strCur;\n\t      }\n\t    } else {\n\t      elm[key] = cur;\n\t    }\n\t  }\n\t}\n\t\n\tvar domProps = {\n\t  create: updateDOMProps,\n\t  update: updateDOMProps\n\t};\n\t\n\t/*  */\n\t\n\tvar parseStyleText = cached(function (cssText) {\n\t  var res = {};\n\t  var listDelimiter = /;(?![^(]*\\))/g;\n\t  var propertyDelimiter = /:(.+)/;\n\t  cssText.split(listDelimiter).forEach(function (item) {\n\t    if (item) {\n\t      var tmp = item.split(propertyDelimiter);\n\t      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n\t    }\n\t  });\n\t  return res\n\t});\n\t\n\t// merge static and dynamic style data on the same vnode\n\tfunction normalizeStyleData (data) {\n\t  var style = normalizeStyleBinding(data.style);\n\t  // static style is pre-processed into an object during compilation\n\t  // and is always a fresh object, so it's safe to merge into it\n\t  return data.staticStyle\n\t    ? extend(data.staticStyle, style)\n\t    : style\n\t}\n\t\n\t// normalize possible array / string values into Object\n\tfunction normalizeStyleBinding (bindingStyle) {\n\t  if (Array.isArray(bindingStyle)) {\n\t    return toObject(bindingStyle)\n\t  }\n\t  if (typeof bindingStyle === 'string') {\n\t    return parseStyleText(bindingStyle)\n\t  }\n\t  return bindingStyle\n\t}\n\t\n\t/**\n\t * parent component style should be after child's\n\t * so that parent component's style could override it\n\t */\n\tfunction getStyle (vnode, checkChild) {\n\t  var res = {};\n\t  var styleData;\n\t\n\t  if (checkChild) {\n\t    var childNode = vnode;\n\t    while (childNode.child) {\n\t      childNode = childNode.child._vnode;\n\t      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n\t        extend(res, styleData);\n\t      }\n\t    }\n\t  }\n\t\n\t  if ((styleData = normalizeStyleData(vnode.data))) {\n\t    extend(res, styleData);\n\t  }\n\t\n\t  var parentNode = vnode;\n\t  while ((parentNode = parentNode.parent)) {\n\t    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n\t      extend(res, styleData);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\t/*  */\n\t\n\tvar cssVarRE = /^--/;\n\tvar importantRE = /\\s*!important$/;\n\tvar setProp = function (el, name, val) {\n\t  /* istanbul ignore if */\n\t  if (cssVarRE.test(name)) {\n\t    el.style.setProperty(name, val);\n\t  } else if (importantRE.test(val)) {\n\t    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n\t  } else {\n\t    el.style[normalize(name)] = val;\n\t  }\n\t};\n\t\n\tvar prefixes = ['Webkit', 'Moz', 'ms'];\n\t\n\tvar testEl;\n\tvar normalize = cached(function (prop) {\n\t  testEl = testEl || document.createElement('div');\n\t  prop = camelize(prop);\n\t  if (prop !== 'filter' && (prop in testEl.style)) {\n\t    return prop\n\t  }\n\t  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n\t  for (var i = 0; i < prefixes.length; i++) {\n\t    var prefixed = prefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixed\n\t    }\n\t  }\n\t});\n\t\n\tfunction updateStyle (oldVnode, vnode) {\n\t  var data = vnode.data;\n\t  var oldData = oldVnode.data;\n\t\n\t  if (!data.staticStyle && !data.style &&\n\t      !oldData.staticStyle && !oldData.style) {\n\t    return\n\t  }\n\t\n\t  var cur, name;\n\t  var el = vnode.elm;\n\t  var oldStaticStyle = oldVnode.data.staticStyle;\n\t  var oldStyleBinding = oldVnode.data.style || {};\n\t\n\t  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n\t  var oldStyle = oldStaticStyle || oldStyleBinding;\n\t\n\t  var style = normalizeStyleBinding(vnode.data.style) || {};\n\t\n\t  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\t\n\t  var newStyle = getStyle(vnode, true);\n\t\n\t  for (name in oldStyle) {\n\t    if (newStyle[name] == null) {\n\t      setProp(el, name, '');\n\t    }\n\t  }\n\t  for (name in newStyle) {\n\t    cur = newStyle[name];\n\t    if (cur !== oldStyle[name]) {\n\t      // ie9 setting to null has no effect, must use empty string\n\t      setProp(el, name, cur == null ? '' : cur);\n\t    }\n\t  }\n\t}\n\t\n\tvar style = {\n\t  create: updateStyle,\n\t  update: updateStyle\n\t};\n\t\n\t/*  */\n\t\n\t/**\n\t * Add class with compatibility for SVG since classList is not supported on\n\t * SVG elements in IE\n\t */\n\tfunction addClass (el, cls) {\n\t  /* istanbul ignore if */\n\t  if (!cls || !cls.trim()) {\n\t    return\n\t  }\n\t\n\t  /* istanbul ignore else */\n\t  if (el.classList) {\n\t    if (cls.indexOf(' ') > -1) {\n\t      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n\t    } else {\n\t      el.classList.add(cls);\n\t    }\n\t  } else {\n\t    var cur = ' ' + el.getAttribute('class') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      el.setAttribute('class', (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for SVG since classList is not supported on\n\t * SVG elements in IE\n\t */\n\tfunction removeClass (el, cls) {\n\t  /* istanbul ignore if */\n\t  if (!cls || !cls.trim()) {\n\t    return\n\t  }\n\t\n\t  /* istanbul ignore else */\n\t  if (el.classList) {\n\t    if (cls.indexOf(' ') > -1) {\n\t      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n\t    } else {\n\t      el.classList.remove(cls);\n\t    }\n\t  } else {\n\t    var cur = ' ' + el.getAttribute('class') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    el.setAttribute('class', cur.trim());\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar hasTransition = inBrowser && !isIE9;\n\tvar TRANSITION = 'transition';\n\tvar ANIMATION = 'animation';\n\t\n\t// Transition property/event sniffing\n\tvar transitionProp = 'transition';\n\tvar transitionEndEvent = 'transitionend';\n\tvar animationProp = 'animation';\n\tvar animationEndEvent = 'animationend';\n\tif (hasTransition) {\n\t  /* istanbul ignore if */\n\t  if (window.ontransitionend === undefined &&\n\t    window.onwebkittransitionend !== undefined) {\n\t    transitionProp = 'WebkitTransition';\n\t    transitionEndEvent = 'webkitTransitionEnd';\n\t  }\n\t  if (window.onanimationend === undefined &&\n\t    window.onwebkitanimationend !== undefined) {\n\t    animationProp = 'WebkitAnimation';\n\t    animationEndEvent = 'webkitAnimationEnd';\n\t  }\n\t}\n\t\n\tvar raf = (inBrowser && window.requestAnimationFrame) || setTimeout;\n\tfunction nextFrame (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t}\n\t\n\tfunction addTransitionClass (el, cls) {\n\t  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n\t  addClass(el, cls);\n\t}\n\t\n\tfunction removeTransitionClass (el, cls) {\n\t  if (el._transitionClasses) {\n\t    remove$1(el._transitionClasses, cls);\n\t  }\n\t  removeClass(el, cls);\n\t}\n\t\n\tfunction whenTransitionEnds (\n\t  el,\n\t  expectedType,\n\t  cb\n\t) {\n\t  var ref = getTransitionInfo(el, expectedType);\n\t  var type = ref.type;\n\t  var timeout = ref.timeout;\n\t  var propCount = ref.propCount;\n\t  if (!type) { return cb() }\n\t  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n\t  var ended = 0;\n\t  var end = function () {\n\t    el.removeEventListener(event, onEnd);\n\t    cb();\n\t  };\n\t  var onEnd = function (e) {\n\t    if (e.target === el) {\n\t      if (++ended >= propCount) {\n\t        end();\n\t      }\n\t    }\n\t  };\n\t  setTimeout(function () {\n\t    if (ended < propCount) {\n\t      end();\n\t    }\n\t  }, timeout + 1);\n\t  el.addEventListener(event, onEnd);\n\t}\n\t\n\tvar transformRE = /\\b(transform|all)(,|$)/;\n\t\n\tfunction getTransitionInfo (el, expectedType) {\n\t  var styles = window.getComputedStyle(el);\n\t  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n\t  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n\t  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n\t  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n\t  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n\t  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\t\n\t  var type;\n\t  var timeout = 0;\n\t  var propCount = 0;\n\t  /* istanbul ignore if */\n\t  if (expectedType === TRANSITION) {\n\t    if (transitionTimeout > 0) {\n\t      type = TRANSITION;\n\t      timeout = transitionTimeout;\n\t      propCount = transitionDurations.length;\n\t    }\n\t  } else if (expectedType === ANIMATION) {\n\t    if (animationTimeout > 0) {\n\t      type = ANIMATION;\n\t      timeout = animationTimeout;\n\t      propCount = animationDurations.length;\n\t    }\n\t  } else {\n\t    timeout = Math.max(transitionTimeout, animationTimeout);\n\t    type = timeout > 0\n\t      ? transitionTimeout > animationTimeout\n\t        ? TRANSITION\n\t        : ANIMATION\n\t      : null;\n\t    propCount = type\n\t      ? type === TRANSITION\n\t        ? transitionDurations.length\n\t        : animationDurations.length\n\t      : 0;\n\t  }\n\t  var hasTransform =\n\t    type === TRANSITION &&\n\t    transformRE.test(styles[transitionProp + 'Property']);\n\t  return {\n\t    type: type,\n\t    timeout: timeout,\n\t    propCount: propCount,\n\t    hasTransform: hasTransform\n\t  }\n\t}\n\t\n\tfunction getTimeout (delays, durations) {\n\t  /* istanbul ignore next */\n\t  while (delays.length < durations.length) {\n\t    delays = delays.concat(delays);\n\t  }\n\t\n\t  return Math.max.apply(null, durations.map(function (d, i) {\n\t    return toMs(d) + toMs(delays[i])\n\t  }))\n\t}\n\t\n\tfunction toMs (s) {\n\t  return Number(s.slice(0, -1)) * 1000\n\t}\n\t\n\t/*  */\n\t\n\tfunction enter (vnode) {\n\t  var el = vnode.elm;\n\t\n\t  // call leave callback now\n\t  if (el._leaveCb) {\n\t    el._leaveCb.cancelled = true;\n\t    el._leaveCb();\n\t  }\n\t\n\t  var data = resolveTransition(vnode.data.transition);\n\t  if (!data) {\n\t    return\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (el._enterCb || el.nodeType !== 1) {\n\t    return\n\t  }\n\t\n\t  var css = data.css;\n\t  var type = data.type;\n\t  var enterClass = data.enterClass;\n\t  var enterActiveClass = data.enterActiveClass;\n\t  var appearClass = data.appearClass;\n\t  var appearActiveClass = data.appearActiveClass;\n\t  var beforeEnter = data.beforeEnter;\n\t  var enter = data.enter;\n\t  var afterEnter = data.afterEnter;\n\t  var enterCancelled = data.enterCancelled;\n\t  var beforeAppear = data.beforeAppear;\n\t  var appear = data.appear;\n\t  var afterAppear = data.afterAppear;\n\t  var appearCancelled = data.appearCancelled;\n\t\n\t  // activeInstance will always be the <transition> component managing this\n\t  // transition. One edge case to check is when the <transition> is placed\n\t  // as the root node of a child component. In that case we need to check\n\t  // <transition>'s parent for appear check.\n\t  var context = activeInstance;\n\t  var transitionNode = activeInstance.$vnode;\n\t  while (transitionNode && transitionNode.parent) {\n\t    transitionNode = transitionNode.parent;\n\t    context = transitionNode.context;\n\t  }\n\t\n\t  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\t\n\t  if (isAppear && !appear && appear !== '') {\n\t    return\n\t  }\n\t\n\t  var startClass = isAppear ? appearClass : enterClass;\n\t  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n\t  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n\t  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n\t  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n\t  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\t\n\t  var expectsCSS = css !== false && !isIE9;\n\t  var userWantsControl =\n\t    enterHook &&\n\t    // enterHook may be a bound method which exposes\n\t    // the length of original fn as _length\n\t    (enterHook._length || enterHook.length) > 1;\n\t\n\t  var cb = el._enterCb = once(function () {\n\t    if (expectsCSS) {\n\t      removeTransitionClass(el, activeClass);\n\t    }\n\t    if (cb.cancelled) {\n\t      if (expectsCSS) {\n\t        removeTransitionClass(el, startClass);\n\t      }\n\t      enterCancelledHook && enterCancelledHook(el);\n\t    } else {\n\t      afterEnterHook && afterEnterHook(el);\n\t    }\n\t    el._enterCb = null;\n\t  });\n\t\n\t  if (!vnode.data.show) {\n\t    // remove pending leave element on enter by injecting an insert hook\n\t    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n\t      var parent = el.parentNode;\n\t      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n\t      if (pendingNode &&\n\t          pendingNode.context === vnode.context &&\n\t          pendingNode.tag === vnode.tag &&\n\t          pendingNode.elm._leaveCb) {\n\t        pendingNode.elm._leaveCb();\n\t      }\n\t      enterHook && enterHook(el, cb);\n\t    }, 'transition-insert');\n\t  }\n\t\n\t  // start enter transition\n\t  beforeEnterHook && beforeEnterHook(el);\n\t  if (expectsCSS) {\n\t    addTransitionClass(el, startClass);\n\t    addTransitionClass(el, activeClass);\n\t    nextFrame(function () {\n\t      removeTransitionClass(el, startClass);\n\t      if (!cb.cancelled && !userWantsControl) {\n\t        whenTransitionEnds(el, type, cb);\n\t      }\n\t    });\n\t  }\n\t\n\t  if (vnode.data.show) {\n\t    enterHook && enterHook(el, cb);\n\t  }\n\t\n\t  if (!expectsCSS && !userWantsControl) {\n\t    cb();\n\t  }\n\t}\n\t\n\tfunction leave (vnode, rm) {\n\t  var el = vnode.elm;\n\t\n\t  // call enter callback now\n\t  if (el._enterCb) {\n\t    el._enterCb.cancelled = true;\n\t    el._enterCb();\n\t  }\n\t\n\t  var data = resolveTransition(vnode.data.transition);\n\t  if (!data) {\n\t    return rm()\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (el._leaveCb || el.nodeType !== 1) {\n\t    return\n\t  }\n\t\n\t  var css = data.css;\n\t  var type = data.type;\n\t  var leaveClass = data.leaveClass;\n\t  var leaveActiveClass = data.leaveActiveClass;\n\t  var beforeLeave = data.beforeLeave;\n\t  var leave = data.leave;\n\t  var afterLeave = data.afterLeave;\n\t  var leaveCancelled = data.leaveCancelled;\n\t  var delayLeave = data.delayLeave;\n\t\n\t  var expectsCSS = css !== false && !isIE9;\n\t  var userWantsControl =\n\t    leave &&\n\t    // leave hook may be a bound method which exposes\n\t    // the length of original fn as _length\n\t    (leave._length || leave.length) > 1;\n\t\n\t  var cb = el._leaveCb = once(function () {\n\t    if (el.parentNode && el.parentNode._pending) {\n\t      el.parentNode._pending[vnode.key] = null;\n\t    }\n\t    if (expectsCSS) {\n\t      removeTransitionClass(el, leaveActiveClass);\n\t    }\n\t    if (cb.cancelled) {\n\t      if (expectsCSS) {\n\t        removeTransitionClass(el, leaveClass);\n\t      }\n\t      leaveCancelled && leaveCancelled(el);\n\t    } else {\n\t      rm();\n\t      afterLeave && afterLeave(el);\n\t    }\n\t    el._leaveCb = null;\n\t  });\n\t\n\t  if (delayLeave) {\n\t    delayLeave(performLeave);\n\t  } else {\n\t    performLeave();\n\t  }\n\t\n\t  function performLeave () {\n\t    // the delayed leave may have already been cancelled\n\t    if (cb.cancelled) {\n\t      return\n\t    }\n\t    // record leaving element\n\t    if (!vnode.data.show) {\n\t      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n\t    }\n\t    beforeLeave && beforeLeave(el);\n\t    if (expectsCSS) {\n\t      addTransitionClass(el, leaveClass);\n\t      addTransitionClass(el, leaveActiveClass);\n\t      nextFrame(function () {\n\t        removeTransitionClass(el, leaveClass);\n\t        if (!cb.cancelled && !userWantsControl) {\n\t          whenTransitionEnds(el, type, cb);\n\t        }\n\t      });\n\t    }\n\t    leave && leave(el, cb);\n\t    if (!expectsCSS && !userWantsControl) {\n\t      cb();\n\t    }\n\t  }\n\t}\n\t\n\tfunction resolveTransition (def$$1) {\n\t  if (!def$$1) {\n\t    return\n\t  }\n\t  /* istanbul ignore else */\n\t  if (typeof def$$1 === 'object') {\n\t    var res = {};\n\t    if (def$$1.css !== false) {\n\t      extend(res, autoCssTransition(def$$1.name || 'v'));\n\t    }\n\t    extend(res, def$$1);\n\t    return res\n\t  } else if (typeof def$$1 === 'string') {\n\t    return autoCssTransition(def$$1)\n\t  }\n\t}\n\t\n\tvar autoCssTransition = cached(function (name) {\n\t  return {\n\t    enterClass: (name + \"-enter\"),\n\t    leaveClass: (name + \"-leave\"),\n\t    appearClass: (name + \"-enter\"),\n\t    enterActiveClass: (name + \"-enter-active\"),\n\t    leaveActiveClass: (name + \"-leave-active\"),\n\t    appearActiveClass: (name + \"-enter-active\")\n\t  }\n\t});\n\t\n\tfunction once (fn) {\n\t  var called = false;\n\t  return function () {\n\t    if (!called) {\n\t      called = true;\n\t      fn();\n\t    }\n\t  }\n\t}\n\t\n\tfunction _enter (_, vnode) {\n\t  if (!vnode.data.show) {\n\t    enter(vnode);\n\t  }\n\t}\n\t\n\tvar transition = inBrowser ? {\n\t  create: _enter,\n\t  activate: _enter,\n\t  remove: function remove (vnode, rm) {\n\t    /* istanbul ignore else */\n\t    if (!vnode.data.show) {\n\t      leave(vnode, rm);\n\t    } else {\n\t      rm();\n\t    }\n\t  }\n\t} : {};\n\t\n\tvar platformModules = [\n\t  attrs,\n\t  klass,\n\t  events,\n\t  domProps,\n\t  style,\n\t  transition\n\t];\n\t\n\t/*  */\n\t\n\t// the directive module should be applied last, after all\n\t// built-in modules have been applied.\n\tvar modules = platformModules.concat(baseModules);\n\t\n\tvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\t\n\t/**\n\t * Not type checking this file because flow doesn't like attaching\n\t * properties to Elements.\n\t */\n\t\n\tvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_-]*)?$/;\n\t\n\t/* istanbul ignore if */\n\tif (isIE9) {\n\t  // http://www.matts411.com/post/internet-explorer-9-oninput/\n\t  document.addEventListener('selectionchange', function () {\n\t    var el = document.activeElement;\n\t    if (el && el.vmodel) {\n\t      trigger(el, 'input');\n\t    }\n\t  });\n\t}\n\t\n\tvar model = {\n\t  inserted: function inserted (el, binding, vnode) {\n\t    if (false) {\n\t      if (!modelableTagRE.test(vnode.tag)) {\n\t        warn(\n\t          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n\t          'If you are working with contenteditable, it\\'s recommended to ' +\n\t          'wrap a library dedicated for that purpose inside a custom component.',\n\t          vnode.context\n\t        );\n\t      }\n\t    }\n\t    if (vnode.tag === 'select') {\n\t      var cb = function () {\n\t        setSelected(el, binding, vnode.context);\n\t      };\n\t      cb();\n\t      /* istanbul ignore if */\n\t      if (isIE || isEdge) {\n\t        setTimeout(cb, 0);\n\t      }\n\t    } else if (\n\t      (vnode.tag === 'textarea' || el.type === 'text') &&\n\t      !binding.modifiers.lazy\n\t    ) {\n\t      if (!isAndroid) {\n\t        el.addEventListener('compositionstart', onCompositionStart);\n\t        el.addEventListener('compositionend', onCompositionEnd);\n\t      }\n\t      /* istanbul ignore if */\n\t      if (isIE9) {\n\t        el.vmodel = true;\n\t      }\n\t    }\n\t  },\n\t  componentUpdated: function componentUpdated (el, binding, vnode) {\n\t    if (vnode.tag === 'select') {\n\t      setSelected(el, binding, vnode.context);\n\t      // in case the options rendered by v-for have changed,\n\t      // it's possible that the value is out-of-sync with the rendered options.\n\t      // detect such cases and filter out values that no longer has a matching\n\t      // option in the DOM.\n\t      var needReset = el.multiple\n\t        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n\t        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n\t      if (needReset) {\n\t        trigger(el, 'change');\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setSelected (el, binding, vm) {\n\t  var value = binding.value;\n\t  var isMultiple = el.multiple;\n\t  if (isMultiple && !Array.isArray(value)) {\n\t    (\"production\") !== 'production' && warn(\n\t      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n\t      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n\t      vm\n\t    );\n\t    return\n\t  }\n\t  var selected, option;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    option = el.options[i];\n\t    if (isMultiple) {\n\t      selected = looseIndexOf(value, getValue(option)) > -1;\n\t      if (option.selected !== selected) {\n\t        option.selected = selected;\n\t      }\n\t    } else {\n\t      if (looseEqual(getValue(option), value)) {\n\t        if (el.selectedIndex !== i) {\n\t          el.selectedIndex = i;\n\t        }\n\t        return\n\t      }\n\t    }\n\t  }\n\t  if (!isMultiple) {\n\t    el.selectedIndex = -1;\n\t  }\n\t}\n\t\n\tfunction hasNoMatchingOption (value, options) {\n\t  for (var i = 0, l = options.length; i < l; i++) {\n\t    if (looseEqual(getValue(options[i]), value)) {\n\t      return false\n\t    }\n\t  }\n\t  return true\n\t}\n\t\n\tfunction getValue (option) {\n\t  return '_value' in option\n\t    ? option._value\n\t    : option.value\n\t}\n\t\n\tfunction onCompositionStart (e) {\n\t  e.target.composing = true;\n\t}\n\t\n\tfunction onCompositionEnd (e) {\n\t  e.target.composing = false;\n\t  trigger(e.target, 'input');\n\t}\n\t\n\tfunction trigger (el, type) {\n\t  var e = document.createEvent('HTMLEvents');\n\t  e.initEvent(type, true, true);\n\t  el.dispatchEvent(e);\n\t}\n\t\n\t/*  */\n\t\n\t// recursively search for possible transition defined inside the component root\n\tfunction locateNode (vnode) {\n\t  return vnode.child && (!vnode.data || !vnode.data.transition)\n\t    ? locateNode(vnode.child._vnode)\n\t    : vnode\n\t}\n\t\n\tvar show = {\n\t  bind: function bind (el, ref, vnode) {\n\t    var value = ref.value;\n\t\n\t    vnode = locateNode(vnode);\n\t    var transition = vnode.data && vnode.data.transition;\n\t    if (value && transition && !isIE9) {\n\t      enter(vnode);\n\t    }\n\t    var originalDisplay = el.style.display === 'none' ? '' : el.style.display;\n\t    el.style.display = value ? originalDisplay : 'none';\n\t    el.__vOriginalDisplay = originalDisplay;\n\t  },\n\t  update: function update (el, ref, vnode) {\n\t    var value = ref.value;\n\t    var oldValue = ref.oldValue;\n\t\n\t    /* istanbul ignore if */\n\t    if (value === oldValue) { return }\n\t    vnode = locateNode(vnode);\n\t    var transition = vnode.data && vnode.data.transition;\n\t    if (transition && !isIE9) {\n\t      if (value) {\n\t        enter(vnode);\n\t        el.style.display = el.__vOriginalDisplay;\n\t      } else {\n\t        leave(vnode, function () {\n\t          el.style.display = 'none';\n\t        });\n\t      }\n\t    } else {\n\t      el.style.display = value ? el.__vOriginalDisplay : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar platformDirectives = {\n\t  model: model,\n\t  show: show\n\t};\n\t\n\t/*  */\n\t\n\t// Provides transition support for a single element/component.\n\t// supports transition mode (out-in / in-out)\n\t\n\tvar transitionProps = {\n\t  name: String,\n\t  appear: Boolean,\n\t  css: Boolean,\n\t  mode: String,\n\t  type: String,\n\t  enterClass: String,\n\t  leaveClass: String,\n\t  enterActiveClass: String,\n\t  leaveActiveClass: String,\n\t  appearClass: String,\n\t  appearActiveClass: String\n\t};\n\t\n\t// in case the child is also an abstract component, e.g. <keep-alive>\n\t// we want to recursively retrieve the real component to be rendered\n\tfunction getRealChild (vnode) {\n\t  var compOptions = vnode && vnode.componentOptions;\n\t  if (compOptions && compOptions.Ctor.options.abstract) {\n\t    return getRealChild(getFirstComponentChild(compOptions.children))\n\t  } else {\n\t    return vnode\n\t  }\n\t}\n\t\n\tfunction extractTransitionData (comp) {\n\t  var data = {};\n\t  var options = comp.$options;\n\t  // props\n\t  for (var key in options.propsData) {\n\t    data[key] = comp[key];\n\t  }\n\t  // events.\n\t  // extract listeners and pass them directly to the transition methods\n\t  var listeners = options._parentListeners;\n\t  for (var key$1 in listeners) {\n\t    data[camelize(key$1)] = listeners[key$1].fn;\n\t  }\n\t  return data\n\t}\n\t\n\tfunction placeholder (h, rawChild) {\n\t  return /\\d-keep-alive$/.test(rawChild.tag)\n\t    ? h('keep-alive')\n\t    : null\n\t}\n\t\n\tfunction hasParentTransition (vnode) {\n\t  while ((vnode = vnode.parent)) {\n\t    if (vnode.data.transition) {\n\t      return true\n\t    }\n\t  }\n\t}\n\t\n\tvar Transition = {\n\t  name: 'transition',\n\t  props: transitionProps,\n\t  abstract: true,\n\t  render: function render (h) {\n\t    var this$1 = this;\n\t\n\t    var children = this.$slots.default;\n\t    if (!children) {\n\t      return\n\t    }\n\t\n\t    // filter out text nodes (possible whitespaces)\n\t    children = children.filter(function (c) { return c.tag; });\n\t    /* istanbul ignore if */\n\t    if (!children.length) {\n\t      return\n\t    }\n\t\n\t    // warn multiple elements\n\t    if (false) {\n\t      warn(\n\t        '<transition> can only be used on a single element. Use ' +\n\t        '<transition-group> for lists.',\n\t        this.$parent\n\t      );\n\t    }\n\t\n\t    var mode = this.mode;\n\t\n\t    // warn invalid mode\n\t    if (false) {\n\t      warn(\n\t        'invalid <transition> mode: ' + mode,\n\t        this.$parent\n\t      );\n\t    }\n\t\n\t    var rawChild = children[0];\n\t\n\t    // if this is a component root node and the component's\n\t    // parent container node also has transition, skip.\n\t    if (hasParentTransition(this.$vnode)) {\n\t      return rawChild\n\t    }\n\t\n\t    // apply transition data to child\n\t    // use getRealChild() to ignore abstract components e.g. keep-alive\n\t    var child = getRealChild(rawChild);\n\t    /* istanbul ignore if */\n\t    if (!child) {\n\t      return rawChild\n\t    }\n\t\n\t    if (this._leaving) {\n\t      return placeholder(h, rawChild)\n\t    }\n\t\n\t    var key = child.key = child.key == null || child.isStatic\n\t      ? (\"__v\" + (child.tag + this._uid) + \"__\")\n\t      : child.key;\n\t    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n\t    var oldRawChild = this._vnode;\n\t    var oldChild = getRealChild(oldRawChild);\n\t\n\t    // mark v-show\n\t    // so that the transition module can hand over the control to the directive\n\t    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n\t      child.data.show = true;\n\t    }\n\t\n\t    if (oldChild && oldChild.data && oldChild.key !== key) {\n\t      // replace old child transition data with fresh one\n\t      // important for dynamic transitions!\n\t      var oldData = oldChild.data.transition = extend({}, data);\n\t\n\t      // handle transition mode\n\t      if (mode === 'out-in') {\n\t        // return placeholder node and queue update when leave finishes\n\t        this._leaving = true;\n\t        mergeVNodeHook(oldData, 'afterLeave', function () {\n\t          this$1._leaving = false;\n\t          this$1.$forceUpdate();\n\t        }, key);\n\t        return placeholder(h, rawChild)\n\t      } else if (mode === 'in-out') {\n\t        var delayedLeave;\n\t        var performLeave = function () { delayedLeave(); };\n\t        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n\t        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n\t        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n\t          delayedLeave = leave;\n\t        }, key);\n\t      }\n\t    }\n\t\n\t    return rawChild\n\t  }\n\t};\n\t\n\t/*  */\n\t\n\t// Provides transition support for list items.\n\t// supports move transitions using the FLIP technique.\n\t\n\t// Because the vdom's children update algorithm is \"unstable\" - i.e.\n\t// it doesn't guarantee the relative positioning of removed elements,\n\t// we force transition-group to update its children into two passes:\n\t// in the first pass, we remove all nodes that need to be removed,\n\t// triggering their leaving transition; in the second pass, we insert/move\n\t// into the final disired state. This way in the second pass removed\n\t// nodes will remain where they should be.\n\t\n\tvar props = extend({\n\t  tag: String,\n\t  moveClass: String\n\t}, transitionProps);\n\t\n\tdelete props.mode;\n\t\n\tvar TransitionGroup = {\n\t  props: props,\n\t\n\t  render: function render (h) {\n\t    var tag = this.tag || this.$vnode.data.tag || 'span';\n\t    var map = Object.create(null);\n\t    var prevChildren = this.prevChildren = this.children;\n\t    var rawChildren = this.$slots.default || [];\n\t    var children = this.children = [];\n\t    var transitionData = extractTransitionData(this);\n\t\n\t    for (var i = 0; i < rawChildren.length; i++) {\n\t      var c = rawChildren[i];\n\t      if (c.tag) {\n\t        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n\t          children.push(c);\n\t          map[c.key] = c\n\t          ;(c.data || (c.data = {})).transition = transitionData;\n\t        } else if (false) {\n\t          var opts = c.componentOptions;\n\t          var name = opts\n\t            ? (opts.Ctor.options.name || opts.tag)\n\t            : c.tag;\n\t          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n\t        }\n\t      }\n\t    }\n\t\n\t    if (prevChildren) {\n\t      var kept = [];\n\t      var removed = [];\n\t      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n\t        var c$1 = prevChildren[i$1];\n\t        c$1.data.transition = transitionData;\n\t        c$1.data.pos = c$1.elm.getBoundingClientRect();\n\t        if (map[c$1.key]) {\n\t          kept.push(c$1);\n\t        } else {\n\t          removed.push(c$1);\n\t        }\n\t      }\n\t      this.kept = h(tag, null, kept);\n\t      this.removed = removed;\n\t    }\n\t\n\t    return h(tag, null, children)\n\t  },\n\t\n\t  beforeUpdate: function beforeUpdate () {\n\t    // force removing pass\n\t    this.__patch__(\n\t      this._vnode,\n\t      this.kept,\n\t      false, // hydrating\n\t      true // removeOnly (!important, avoids unnecessary moves)\n\t    );\n\t    this._vnode = this.kept;\n\t  },\n\t\n\t  updated: function updated () {\n\t    var children = this.prevChildren;\n\t    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n\t    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n\t      return\n\t    }\n\t\n\t    // we divide the work into three loops to avoid mixing DOM reads and writes\n\t    // in each iteration - which helps prevent layout thrashing.\n\t    children.forEach(callPendingCbs);\n\t    children.forEach(recordPosition);\n\t    children.forEach(applyTranslation);\n\t\n\t    // force reflow to put everything in position\n\t    var f = document.body.offsetHeight; // eslint-disable-line\n\t\n\t    children.forEach(function (c) {\n\t      if (c.data.moved) {\n\t        var el = c.elm;\n\t        var s = el.style;\n\t        addTransitionClass(el, moveClass);\n\t        s.transform = s.WebkitTransform = s.transitionDuration = '';\n\t        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n\t          if (!e || /transform$/.test(e.propertyName)) {\n\t            el.removeEventListener(transitionEndEvent, cb);\n\t            el._moveCb = null;\n\t            removeTransitionClass(el, moveClass);\n\t          }\n\t        });\n\t      }\n\t    });\n\t  },\n\t\n\t  methods: {\n\t    hasMove: function hasMove (el, moveClass) {\n\t      /* istanbul ignore if */\n\t      if (!hasTransition) {\n\t        return false\n\t      }\n\t      if (this._hasMove != null) {\n\t        return this._hasMove\n\t      }\n\t      addTransitionClass(el, moveClass);\n\t      var info = getTransitionInfo(el);\n\t      removeTransitionClass(el, moveClass);\n\t      return (this._hasMove = info.hasTransform)\n\t    }\n\t  }\n\t};\n\t\n\tfunction callPendingCbs (c) {\n\t  /* istanbul ignore if */\n\t  if (c.elm._moveCb) {\n\t    c.elm._moveCb();\n\t  }\n\t  /* istanbul ignore if */\n\t  if (c.elm._enterCb) {\n\t    c.elm._enterCb();\n\t  }\n\t}\n\t\n\tfunction recordPosition (c) {\n\t  c.data.newPos = c.elm.getBoundingClientRect();\n\t}\n\t\n\tfunction applyTranslation (c) {\n\t  var oldPos = c.data.pos;\n\t  var newPos = c.data.newPos;\n\t  var dx = oldPos.left - newPos.left;\n\t  var dy = oldPos.top - newPos.top;\n\t  if (dx || dy) {\n\t    c.data.moved = true;\n\t    var s = c.elm.style;\n\t    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n\t    s.transitionDuration = '0s';\n\t  }\n\t}\n\t\n\tvar platformComponents = {\n\t  Transition: Transition,\n\t  TransitionGroup: TransitionGroup\n\t};\n\t\n\t/*  */\n\t\n\t// install platform specific utils\n\tVue$3.config.isUnknownElement = isUnknownElement;\n\tVue$3.config.isReservedTag = isReservedTag;\n\tVue$3.config.getTagNamespace = getTagNamespace;\n\tVue$3.config.mustUseProp = mustUseProp;\n\t\n\t// install platform runtime directives & components\n\textend(Vue$3.options.directives, platformDirectives);\n\textend(Vue$3.options.components, platformComponents);\n\t\n\t// install platform patch function\n\tVue$3.prototype.__patch__ = inBrowser ? patch$1 : noop;\n\t\n\t// wrap mount\n\tVue$3.prototype.$mount = function (\n\t  el,\n\t  hydrating\n\t) {\n\t  el = el && inBrowser ? query(el) : undefined;\n\t  return this._mount(el, hydrating)\n\t};\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue$3);\n\t    } else if (\n\t      false\n\t    ) {\n\t      console.log(\n\t        'Download the Vue Devtools for a better development experience:\\n' +\n\t        'https://github.com/vuejs/vue-devtools'\n\t      );\n\t    }\n\t  }\n\t}, 0);\n\t\n\t/*  */\n\t\n\t// check whether current browser encodes a char inside attribute values\n\tfunction shouldDecode (content, encoded) {\n\t  var div = document.createElement('div');\n\t  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n\t  return div.innerHTML.indexOf(encoded) > 0\n\t}\n\t\n\t// #3663\n\t// IE encodes newlines inside attribute values while other browsers don't\n\tvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\t\n\t/*  */\n\t\n\tvar decoder;\n\t\n\tfunction decode (html) {\n\t  decoder = decoder || document.createElement('div');\n\t  decoder.innerHTML = html;\n\t  return decoder.textContent\n\t}\n\t\n\t/*  */\n\t\n\tvar isUnaryTag = makeMap(\n\t  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n\t  'link,meta,param,source,track,wbr',\n\t  true\n\t);\n\t\n\t// Elements that you can, intentionally, leave open\n\t// (and which close themselves)\n\tvar canBeLeftOpenTag = makeMap(\n\t  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source',\n\t  true\n\t);\n\t\n\t// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n\t// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\n\tvar isNonPhrasingTag = makeMap(\n\t  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n\t  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n\t  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n\t  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n\t  'title,tr,track',\n\t  true\n\t);\n\t\n\t/**\n\t * Not type-checking this file because it's mostly vendor code.\n\t */\n\t\n\t/*!\n\t * HTML Parser By John Resig (ejohn.org)\n\t * Modified by Juriy \"kangax\" Zaytsev\n\t * Original code by Erik Arvidsson, Mozilla Public License\n\t * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n\t */\n\t\n\t// Regular Expressions for parsing tags and attributes\n\tvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\n\tvar singleAttrAssign = /(?:=)/;\n\tvar singleAttrValues = [\n\t  // attr value double quotes\n\t  /\"([^\"]*)\"+/.source,\n\t  // attr value, single quotes\n\t  /'([^']*)'+/.source,\n\t  // attr value, no quotes\n\t  /([^\\s\"'=<>`]+)/.source\n\t];\n\tvar attribute = new RegExp(\n\t  '^\\\\s*' + singleAttrIdentifier.source +\n\t  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n\t  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n\t);\n\t\n\t// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n\t// but for Vue templates we can enforce a simple charset\n\tvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\n\tvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\n\tvar startTagOpen = new RegExp('^<' + qnameCapture);\n\tvar startTagClose = /^\\s*(\\/?)>/;\n\tvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\n\tvar doctype = /^<!DOCTYPE [^>]+>/i;\n\tvar comment = /^<!--/;\n\tvar conditionalComment = /^<!\\[/;\n\t\n\tvar IS_REGEX_CAPTURING_BROKEN = false;\n\t'x'.replace(/x(.)?/g, function (m, g) {\n\t  IS_REGEX_CAPTURING_BROKEN = g === '';\n\t});\n\t\n\t// Special Elements (can contain anything)\n\tvar isScriptOrStyle = makeMap('script,style', true);\n\tvar hasLang = function (attr) { return attr.name === 'lang' && attr.value !== 'html'; };\n\tvar isSpecialTag = function (tag, isSFC, stack) {\n\t  if (isScriptOrStyle(tag)) {\n\t    return true\n\t  }\n\t  if (isSFC && stack.length === 1) {\n\t    // top-level template that has no pre-processor\n\t    if (tag === 'template' && !stack[0].attrs.some(hasLang)) {\n\t      return false\n\t    } else {\n\t      return true\n\t    }\n\t  }\n\t  return false\n\t};\n\t\n\tvar reCache = {};\n\t\n\tvar ltRE = /&lt;/g;\n\tvar gtRE = /&gt;/g;\n\tvar nlRE = /&#10;/g;\n\tvar ampRE = /&amp;/g;\n\tvar quoteRE = /&quot;/g;\n\t\n\tfunction decodeAttr (value, shouldDecodeNewlines) {\n\t  if (shouldDecodeNewlines) {\n\t    value = value.replace(nlRE, '\\n');\n\t  }\n\t  return value\n\t    .replace(ltRE, '<')\n\t    .replace(gtRE, '>')\n\t    .replace(ampRE, '&')\n\t    .replace(quoteRE, '\"')\n\t}\n\t\n\tfunction parseHTML (html, options) {\n\t  var stack = [];\n\t  var expectHTML = options.expectHTML;\n\t  var isUnaryTag$$1 = options.isUnaryTag || no;\n\t  var index = 0;\n\t  var last, lastTag;\n\t  while (html) {\n\t    last = html;\n\t    // Make sure we're not in a script or style element\n\t    if (!lastTag || !isSpecialTag(lastTag, options.sfc, stack)) {\n\t      var textEnd = html.indexOf('<');\n\t      if (textEnd === 0) {\n\t        // Comment:\n\t        if (comment.test(html)) {\n\t          var commentEnd = html.indexOf('-->');\n\t\n\t          if (commentEnd >= 0) {\n\t            advance(commentEnd + 3);\n\t            continue\n\t          }\n\t        }\n\t\n\t        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n\t        if (conditionalComment.test(html)) {\n\t          var conditionalEnd = html.indexOf(']>');\n\t\n\t          if (conditionalEnd >= 0) {\n\t            advance(conditionalEnd + 2);\n\t            continue\n\t          }\n\t        }\n\t\n\t        // Doctype:\n\t        var doctypeMatch = html.match(doctype);\n\t        if (doctypeMatch) {\n\t          advance(doctypeMatch[0].length);\n\t          continue\n\t        }\n\t\n\t        // End tag:\n\t        var endTagMatch = html.match(endTag);\n\t        if (endTagMatch) {\n\t          var curIndex = index;\n\t          advance(endTagMatch[0].length);\n\t          parseEndTag(endTagMatch[0], endTagMatch[1], curIndex, index);\n\t          continue\n\t        }\n\t\n\t        // Start tag:\n\t        var startTagMatch = parseStartTag();\n\t        if (startTagMatch) {\n\t          handleStartTag(startTagMatch);\n\t          continue\n\t        }\n\t      }\n\t\n\t      var text = (void 0), rest$1 = (void 0), next = (void 0);\n\t      if (textEnd > 0) {\n\t        rest$1 = html.slice(textEnd);\n\t        while (\n\t          !endTag.test(rest$1) &&\n\t          !startTagOpen.test(rest$1) &&\n\t          !comment.test(rest$1) &&\n\t          !conditionalComment.test(rest$1)\n\t        ) {\n\t          // < in plain text, be forgiving and treat it as text\n\t          next = rest$1.indexOf('<', 1);\n\t          if (next < 0) { break }\n\t          textEnd += next;\n\t          rest$1 = html.slice(textEnd);\n\t        }\n\t        text = html.substring(0, textEnd);\n\t        advance(textEnd);\n\t      }\n\t\n\t      if (textEnd < 0) {\n\t        text = html;\n\t        html = '';\n\t      }\n\t\n\t      if (options.chars && text) {\n\t        options.chars(text);\n\t      }\n\t    } else {\n\t      var stackedTag = lastTag.toLowerCase();\n\t      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n\t      var endTagLength = 0;\n\t      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n\t        endTagLength = endTag.length;\n\t        if (stackedTag !== 'script' && stackedTag !== 'style' && stackedTag !== 'noscript') {\n\t          text = text\n\t            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n\t            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n\t        }\n\t        if (options.chars) {\n\t          options.chars(text);\n\t        }\n\t        return ''\n\t      });\n\t      index += html.length - rest.length;\n\t      html = rest;\n\t      parseEndTag('</' + stackedTag + '>', stackedTag, index - endTagLength, index);\n\t    }\n\t\n\t    if (html === last && options.chars) {\n\t      options.chars(html);\n\t      break\n\t    }\n\t  }\n\t\n\t  // Clean up any remaining tags\n\t  parseEndTag();\n\t\n\t  function advance (n) {\n\t    index += n;\n\t    html = html.substring(n);\n\t  }\n\t\n\t  function parseStartTag () {\n\t    var start = html.match(startTagOpen);\n\t    if (start) {\n\t      var match = {\n\t        tagName: start[1],\n\t        attrs: [],\n\t        start: index\n\t      };\n\t      advance(start[0].length);\n\t      var end, attr;\n\t      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n\t        advance(attr[0].length);\n\t        match.attrs.push(attr);\n\t      }\n\t      if (end) {\n\t        match.unarySlash = end[1];\n\t        advance(end[0].length);\n\t        match.end = index;\n\t        return match\n\t      }\n\t    }\n\t  }\n\t\n\t  function handleStartTag (match) {\n\t    var tagName = match.tagName;\n\t    var unarySlash = match.unarySlash;\n\t\n\t    if (expectHTML) {\n\t      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n\t        parseEndTag('', lastTag);\n\t      }\n\t      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n\t        parseEndTag('', tagName);\n\t      }\n\t    }\n\t\n\t    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\t\n\t    var l = match.attrs.length;\n\t    var attrs = new Array(l);\n\t    for (var i = 0; i < l; i++) {\n\t      var args = match.attrs[i];\n\t      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n\t      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n\t        if (args[3] === '') { delete args[3]; }\n\t        if (args[4] === '') { delete args[4]; }\n\t        if (args[5] === '') { delete args[5]; }\n\t      }\n\t      var value = args[3] || args[4] || args[5] || '';\n\t      attrs[i] = {\n\t        name: args[1],\n\t        value: decodeAttr(\n\t          value,\n\t          options.shouldDecodeNewlines\n\t        )\n\t      };\n\t    }\n\t\n\t    if (!unary) {\n\t      stack.push({ tag: tagName, attrs: attrs });\n\t      lastTag = tagName;\n\t      unarySlash = '';\n\t    }\n\t\n\t    if (options.start) {\n\t      options.start(tagName, attrs, unary, match.start, match.end);\n\t    }\n\t  }\n\t\n\t  function parseEndTag (tag, tagName, start, end) {\n\t    var pos;\n\t    if (start == null) { start = index; }\n\t    if (end == null) { end = index; }\n\t\n\t    // Find the closest opened tag of the same type\n\t    if (tagName) {\n\t      var needle = tagName.toLowerCase();\n\t      for (pos = stack.length - 1; pos >= 0; pos--) {\n\t        if (stack[pos].tag.toLowerCase() === needle) {\n\t          break\n\t        }\n\t      }\n\t    } else {\n\t      // If no tag name is provided, clean shop\n\t      pos = 0;\n\t    }\n\t\n\t    if (pos >= 0) {\n\t      // Close all the open elements, up the stack\n\t      for (var i = stack.length - 1; i >= pos; i--) {\n\t        if (options.end) {\n\t          options.end(stack[i].tag, start, end);\n\t        }\n\t      }\n\t\n\t      // Remove the open elements from the stack\n\t      stack.length = pos;\n\t      lastTag = pos && stack[pos - 1].tag;\n\t    } else if (tagName.toLowerCase() === 'br') {\n\t      if (options.start) {\n\t        options.start(tagName, [], true, start, end);\n\t      }\n\t    } else if (tagName.toLowerCase() === 'p') {\n\t      if (options.start) {\n\t        options.start(tagName, [], false, start, end);\n\t      }\n\t      if (options.end) {\n\t        options.end(tagName, start, end);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction parseFilters (exp) {\n\t  var inSingle = false;\n\t  var inDouble = false;\n\t  var inTemplateString = false;\n\t  var inRegex = false;\n\t  var curly = 0;\n\t  var square = 0;\n\t  var paren = 0;\n\t  var lastFilterIndex = 0;\n\t  var c, prev, i, expression, filters;\n\t\n\t  for (i = 0; i < exp.length; i++) {\n\t    prev = c;\n\t    c = exp.charCodeAt(i);\n\t    if (inSingle) {\n\t      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n\t    } else if (inDouble) {\n\t      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n\t    } else if (inTemplateString) {\n\t      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n\t    } else if (inRegex) {\n\t      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n\t    } else if (\n\t      c === 0x7C && // pipe\n\t      exp.charCodeAt(i + 1) !== 0x7C &&\n\t      exp.charCodeAt(i - 1) !== 0x7C &&\n\t      !curly && !square && !paren\n\t    ) {\n\t      if (expression === undefined) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        expression = exp.slice(0, i).trim();\n\t      } else {\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22: inDouble = true; break         // \"\n\t        case 0x27: inSingle = true; break         // '\n\t        case 0x60: inTemplateString = true; break // `\n\t        case 0x2f: inRegex = true; break          // /\n\t        case 0x28: paren++; break                 // (\n\t        case 0x29: paren--; break                 // )\n\t        case 0x5B: square++; break                // [\n\t        case 0x5D: square--; break                // ]\n\t        case 0x7B: curly++; break                 // {\n\t        case 0x7D: curly--; break                 // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (expression === undefined) {\n\t    expression = exp.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  function pushFilter () {\n\t    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n\t    lastFilterIndex = i + 1;\n\t  }\n\t\n\t  if (filters) {\n\t    for (i = 0; i < filters.length; i++) {\n\t      expression = wrapFilter(expression, filters[i]);\n\t    }\n\t  }\n\t\n\t  return expression\n\t}\n\t\n\tfunction wrapFilter (exp, filter) {\n\t  var i = filter.indexOf('(');\n\t  if (i < 0) {\n\t    // _f: resolveFilter\n\t    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n\t  } else {\n\t    var name = filter.slice(0, i);\n\t    var args = filter.slice(i + 1);\n\t    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]/\\\\]/g;\n\t\n\tvar buildRegex = cached(function (delimiters) {\n\t  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n\t  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n\t  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n\t});\n\t\n\tfunction parseText (\n\t  text,\n\t  delimiters\n\t) {\n\t  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n\t  if (!tagRE.test(text)) {\n\t    return\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index;\n\t  while ((match = tagRE.exec(text))) {\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n\t    }\n\t    // tag token\n\t    var exp = parseFilters(match[1].trim());\n\t    tokens.push((\"_s(\" + exp + \")\"));\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push(JSON.stringify(text.slice(lastIndex)));\n\t  }\n\t  return tokens.join('+')\n\t}\n\t\n\t/*  */\n\t\n\tfunction baseWarn (msg) {\n\t  console.error((\"[Vue parser]: \" + msg));\n\t}\n\t\n\tfunction pluckModuleFunction (\n\t  modules,\n\t  key\n\t) {\n\t  return modules\n\t    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n\t    : []\n\t}\n\t\n\tfunction addProp (el, name, value) {\n\t  (el.props || (el.props = [])).push({ name: name, value: value });\n\t}\n\t\n\tfunction addAttr (el, name, value) {\n\t  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n\t}\n\t\n\tfunction addDirective (\n\t  el,\n\t  name,\n\t  rawName,\n\t  value,\n\t  arg,\n\t  modifiers\n\t) {\n\t  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n\t}\n\t\n\tfunction addHandler (\n\t  el,\n\t  name,\n\t  value,\n\t  modifiers,\n\t  important\n\t) {\n\t  // check capture modifier\n\t  if (modifiers && modifiers.capture) {\n\t    delete modifiers.capture;\n\t    name = '!' + name; // mark the event as captured\n\t  }\n\t  if (modifiers && modifiers.once) {\n\t    delete modifiers.once;\n\t    name = '~' + name; // mark the event as once\n\t  }\n\t  var events;\n\t  if (modifiers && modifiers.native) {\n\t    delete modifiers.native;\n\t    events = el.nativeEvents || (el.nativeEvents = {});\n\t  } else {\n\t    events = el.events || (el.events = {});\n\t  }\n\t  var newHandler = { value: value, modifiers: modifiers };\n\t  var handlers = events[name];\n\t  /* istanbul ignore if */\n\t  if (Array.isArray(handlers)) {\n\t    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n\t  } else if (handlers) {\n\t    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n\t  } else {\n\t    events[name] = newHandler;\n\t  }\n\t}\n\t\n\tfunction getBindingAttr (\n\t  el,\n\t  name,\n\t  getStatic\n\t) {\n\t  var dynamicValue =\n\t    getAndRemoveAttr(el, ':' + name) ||\n\t    getAndRemoveAttr(el, 'v-bind:' + name);\n\t  if (dynamicValue != null) {\n\t    return parseFilters(dynamicValue)\n\t  } else if (getStatic !== false) {\n\t    var staticValue = getAndRemoveAttr(el, name);\n\t    if (staticValue != null) {\n\t      return JSON.stringify(staticValue)\n\t    }\n\t  }\n\t}\n\t\n\tfunction getAndRemoveAttr (el, name) {\n\t  var val;\n\t  if ((val = el.attrsMap[name]) != null) {\n\t    var list = el.attrsList;\n\t    for (var i = 0, l = list.length; i < l; i++) {\n\t      if (list[i].name === name) {\n\t        list.splice(i, 1);\n\t        break\n\t      }\n\t    }\n\t  }\n\t  return val\n\t}\n\t\n\tvar len;\n\tvar str;\n\tvar chr;\n\tvar index$1;\n\tvar expressionPos;\n\tvar expressionEndPos;\n\t\n\t/**\n\t * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n\t *\n\t * for loop possible cases:\n\t *\n\t * - test\n\t * - test[idx]\n\t * - test[test1[idx]]\n\t * - test[\"a\"][idx]\n\t * - xxx.test[a[a].test1[idx]]\n\t * - test.xxx.a[\"asa\"][test1[idx]]\n\t *\n\t */\n\t\n\tfunction parseModel (val) {\n\t  str = val;\n\t  len = str.length;\n\t  index$1 = expressionPos = expressionEndPos = 0;\n\t\n\t  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n\t    return {\n\t      exp: val,\n\t      idx: null\n\t    }\n\t  }\n\t\n\t  while (!eof()) {\n\t    chr = next();\n\t    /* istanbul ignore if */\n\t    if (isStringStart(chr)) {\n\t      parseString(chr);\n\t    } else if (chr === 0x5B) {\n\t      parseBracket(chr);\n\t    }\n\t  }\n\t\n\t  return {\n\t    exp: val.substring(0, expressionPos),\n\t    idx: val.substring(expressionPos + 1, expressionEndPos)\n\t  }\n\t}\n\t\n\tfunction next () {\n\t  return str.charCodeAt(++index$1)\n\t}\n\t\n\tfunction eof () {\n\t  return index$1 >= len\n\t}\n\t\n\tfunction isStringStart (chr) {\n\t  return chr === 0x22 || chr === 0x27\n\t}\n\t\n\tfunction parseBracket (chr) {\n\t  var inBracket = 1;\n\t  expressionPos = index$1;\n\t  while (!eof()) {\n\t    chr = next();\n\t    if (isStringStart(chr)) {\n\t      parseString(chr);\n\t      continue\n\t    }\n\t    if (chr === 0x5B) { inBracket++; }\n\t    if (chr === 0x5D) { inBracket--; }\n\t    if (inBracket === 0) {\n\t      expressionEndPos = index$1;\n\t      break\n\t    }\n\t  }\n\t}\n\t\n\tfunction parseString (chr) {\n\t  var stringQuote = chr;\n\t  while (!eof()) {\n\t    chr = next();\n\t    if (chr === stringQuote) {\n\t      break\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar dirRE = /^v-|^@|^:/;\n\tvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\n\tvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\tvar bindRE = /^:|^v-bind:/;\n\tvar onRE = /^@|^v-on:/;\n\tvar argRE = /:(.*)$/;\n\tvar modifierRE = /\\.[^.]+/g;\n\t\n\tvar decodeHTMLCached = cached(decode);\n\t\n\t// configurable state\n\tvar warn$1;\n\tvar platformGetTagNamespace;\n\tvar platformMustUseProp;\n\tvar platformIsPreTag;\n\tvar preTransforms;\n\tvar transforms;\n\tvar postTransforms;\n\tvar delimiters;\n\t\n\t/**\n\t * Convert HTML string to AST.\n\t */\n\tfunction parse (\n\t  template,\n\t  options\n\t) {\n\t  warn$1 = options.warn || baseWarn;\n\t  platformGetTagNamespace = options.getTagNamespace || no;\n\t  platformMustUseProp = options.mustUseProp || no;\n\t  platformIsPreTag = options.isPreTag || no;\n\t  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n\t  transforms = pluckModuleFunction(options.modules, 'transformNode');\n\t  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\t  delimiters = options.delimiters;\n\t  var stack = [];\n\t  var preserveWhitespace = options.preserveWhitespace !== false;\n\t  var root;\n\t  var currentParent;\n\t  var inVPre = false;\n\t  var inPre = false;\n\t  var warned = false;\n\t  parseHTML(template, {\n\t    expectHTML: options.expectHTML,\n\t    isUnaryTag: options.isUnaryTag,\n\t    shouldDecodeNewlines: options.shouldDecodeNewlines,\n\t    start: function start (tag, attrs, unary) {\n\t      // check namespace.\n\t      // inherit parent ns if there is one\n\t      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\t\n\t      // handle IE svg bug\n\t      /* istanbul ignore if */\n\t      if (isIE && ns === 'svg') {\n\t        attrs = guardIESVGBug(attrs);\n\t      }\n\t\n\t      var element = {\n\t        type: 1,\n\t        tag: tag,\n\t        attrsList: attrs,\n\t        attrsMap: makeAttrsMap(attrs),\n\t        parent: currentParent,\n\t        children: []\n\t      };\n\t      if (ns) {\n\t        element.ns = ns;\n\t      }\n\t\n\t      if (isForbiddenTag(element) && !isServerRendering()) {\n\t        element.forbidden = true;\n\t        (\"production\") !== 'production' && warn$1(\n\t          'Templates should only be responsible for mapping the state to the ' +\n\t          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n\t          \"<\" + tag + \">.\"\n\t        );\n\t      }\n\t\n\t      // apply pre-transforms\n\t      for (var i = 0; i < preTransforms.length; i++) {\n\t        preTransforms[i](element, options);\n\t      }\n\t\n\t      if (!inVPre) {\n\t        processPre(element);\n\t        if (element.pre) {\n\t          inVPre = true;\n\t        }\n\t      }\n\t      if (platformIsPreTag(element.tag)) {\n\t        inPre = true;\n\t      }\n\t      if (inVPre) {\n\t        processRawAttrs(element);\n\t      } else {\n\t        processFor(element);\n\t        processIf(element);\n\t        processOnce(element);\n\t        processKey(element);\n\t\n\t        // determine whether this is a plain element after\n\t        // removing structural attributes\n\t        element.plain = !element.key && !attrs.length;\n\t\n\t        processRef(element);\n\t        processSlot(element);\n\t        processComponent(element);\n\t        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n\t          transforms[i$1](element, options);\n\t        }\n\t        processAttrs(element);\n\t      }\n\t\n\t      function checkRootConstraints (el) {\n\t        if (false) {\n\t          if (el.tag === 'slot' || el.tag === 'template') {\n\t            warned = true;\n\t            warn$1(\n\t              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n\t              'contain multiple nodes:\\n' + template\n\t            );\n\t          }\n\t          if (el.attrsMap.hasOwnProperty('v-for')) {\n\t            warned = true;\n\t            warn$1(\n\t              'Cannot use v-for on stateful component root element because ' +\n\t              'it renders multiple elements:\\n' + template\n\t            );\n\t          }\n\t        }\n\t      }\n\t\n\t      // tree management\n\t      if (!root) {\n\t        root = element;\n\t        checkRootConstraints(root);\n\t      } else if (!stack.length) {\n\t        // allow root elements with v-if, v-else-if and v-else\n\t        if (root.if && (element.elseif || element.else)) {\n\t          checkRootConstraints(element);\n\t          addIfCondition(root, {\n\t            exp: element.elseif,\n\t            block: element\n\t          });\n\t        } else if (false) {\n\t          warned = true;\n\t          warn$1(\n\t            \"Component template should contain exactly one root element:\" +\n\t            \"\\n\\n\" + template + \"\\n\\n\" +\n\t            \"If you are using v-if on multiple elements, \" +\n\t            \"use v-else-if to chain them instead.\"\n\t          );\n\t        }\n\t      }\n\t      if (currentParent && !element.forbidden) {\n\t        if (element.elseif || element.else) {\n\t          processIfConditions(element, currentParent);\n\t        } else if (element.slotScope) { // scoped slot\n\t          currentParent.plain = false;\n\t          var name = element.slotTarget || 'default';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n\t        } else {\n\t          currentParent.children.push(element);\n\t          element.parent = currentParent;\n\t        }\n\t      }\n\t      if (!unary) {\n\t        currentParent = element;\n\t        stack.push(element);\n\t      }\n\t      // apply post-transforms\n\t      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n\t        postTransforms[i$2](element, options);\n\t      }\n\t    },\n\t\n\t    end: function end () {\n\t      // remove trailing whitespace\n\t      var element = stack[stack.length - 1];\n\t      var lastNode = element.children[element.children.length - 1];\n\t      if (lastNode && lastNode.type === 3 && lastNode.text === ' ') {\n\t        element.children.pop();\n\t      }\n\t      // pop stack\n\t      stack.length -= 1;\n\t      currentParent = stack[stack.length - 1];\n\t      // check pre state\n\t      if (element.pre) {\n\t        inVPre = false;\n\t      }\n\t      if (platformIsPreTag(element.tag)) {\n\t        inPre = false;\n\t      }\n\t    },\n\t\n\t    chars: function chars (text) {\n\t      if (!currentParent) {\n\t        if (false) {\n\t          warned = true;\n\t          warn$1(\n\t            'Component template requires a root element, rather than just text:\\n\\n' + template\n\t          );\n\t        }\n\t        return\n\t      }\n\t      // IE textarea placeholder bug\n\t      /* istanbul ignore if */\n\t      if (isIE &&\n\t          currentParent.tag === 'textarea' &&\n\t          currentParent.attrsMap.placeholder === text) {\n\t        return\n\t      }\n\t      text = inPre || text.trim()\n\t        ? decodeHTMLCached(text)\n\t        // only preserve whitespace if its not right after a starting tag\n\t        : preserveWhitespace && currentParent.children.length ? ' ' : '';\n\t      if (text) {\n\t        var expression;\n\t        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n\t          currentParent.children.push({\n\t            type: 2,\n\t            expression: expression,\n\t            text: text\n\t          });\n\t        } else {\n\t          currentParent.children.push({\n\t            type: 3,\n\t            text: text\n\t          });\n\t        }\n\t      }\n\t    }\n\t  });\n\t  return root\n\t}\n\t\n\tfunction processPre (el) {\n\t  if (getAndRemoveAttr(el, 'v-pre') != null) {\n\t    el.pre = true;\n\t  }\n\t}\n\t\n\tfunction processRawAttrs (el) {\n\t  var l = el.attrsList.length;\n\t  if (l) {\n\t    var attrs = el.attrs = new Array(l);\n\t    for (var i = 0; i < l; i++) {\n\t      attrs[i] = {\n\t        name: el.attrsList[i].name,\n\t        value: JSON.stringify(el.attrsList[i].value)\n\t      };\n\t    }\n\t  } else if (!el.pre) {\n\t    // non root node in pre blocks with no attributes\n\t    el.plain = true;\n\t  }\n\t}\n\t\n\tfunction processKey (el) {\n\t  var exp = getBindingAttr(el, 'key');\n\t  if (exp) {\n\t    if (false) {\n\t      warn$1(\"<template> cannot be keyed. Place the key on real elements instead.\");\n\t    }\n\t    el.key = exp;\n\t  }\n\t}\n\t\n\tfunction processRef (el) {\n\t  var ref = getBindingAttr(el, 'ref');\n\t  if (ref) {\n\t    el.ref = ref;\n\t    el.refInFor = checkInFor(el);\n\t  }\n\t}\n\t\n\tfunction processFor (el) {\n\t  var exp;\n\t  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n\t    var inMatch = exp.match(forAliasRE);\n\t    if (!inMatch) {\n\t      (\"production\") !== 'production' && warn$1(\n\t        (\"Invalid v-for expression: \" + exp)\n\t      );\n\t      return\n\t    }\n\t    el.for = inMatch[2].trim();\n\t    var alias = inMatch[1].trim();\n\t    var iteratorMatch = alias.match(forIteratorRE);\n\t    if (iteratorMatch) {\n\t      el.alias = iteratorMatch[1].trim();\n\t      el.iterator1 = iteratorMatch[2].trim();\n\t      if (iteratorMatch[3]) {\n\t        el.iterator2 = iteratorMatch[3].trim();\n\t      }\n\t    } else {\n\t      el.alias = alias;\n\t    }\n\t  }\n\t}\n\t\n\tfunction processIf (el) {\n\t  var exp = getAndRemoveAttr(el, 'v-if');\n\t  if (exp) {\n\t    el.if = exp;\n\t    addIfCondition(el, {\n\t      exp: exp,\n\t      block: el\n\t    });\n\t  } else {\n\t    if (getAndRemoveAttr(el, 'v-else') != null) {\n\t      el.else = true;\n\t    }\n\t    var elseif = getAndRemoveAttr(el, 'v-else-if');\n\t    if (elseif) {\n\t      el.elseif = elseif;\n\t    }\n\t  }\n\t}\n\t\n\tfunction processIfConditions (el, parent) {\n\t  var prev = findPrevElement(parent.children);\n\t  if (prev && prev.if) {\n\t    addIfCondition(prev, {\n\t      exp: el.elseif,\n\t      block: el\n\t    });\n\t  } else if (false) {\n\t    warn$1(\n\t      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n\t      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n\t    );\n\t  }\n\t}\n\t\n\tfunction addIfCondition (el, condition) {\n\t  if (!el.ifConditions) {\n\t    el.ifConditions = [];\n\t  }\n\t  el.ifConditions.push(condition);\n\t}\n\t\n\tfunction processOnce (el) {\n\t  var once = getAndRemoveAttr(el, 'v-once');\n\t  if (once != null) {\n\t    el.once = true;\n\t  }\n\t}\n\t\n\tfunction processSlot (el) {\n\t  if (el.tag === 'slot') {\n\t    el.slotName = getBindingAttr(el, 'name');\n\t    if (false) {\n\t      warn$1(\n\t        \"`key` does not work on <slot> because slots are abstract outlets \" +\n\t        \"and can possibly expand into multiple elements. \" +\n\t        \"Use the key on a wrapping element instead.\"\n\t      );\n\t    }\n\t  } else {\n\t    var slotTarget = getBindingAttr(el, 'slot');\n\t    if (slotTarget) {\n\t      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n\t    }\n\t    if (el.tag === 'template') {\n\t      el.slotScope = getAndRemoveAttr(el, 'scope');\n\t    }\n\t  }\n\t}\n\t\n\tfunction processComponent (el) {\n\t  var binding;\n\t  if ((binding = getBindingAttr(el, 'is'))) {\n\t    el.component = binding;\n\t  }\n\t  if (getAndRemoveAttr(el, 'inline-template') != null) {\n\t    el.inlineTemplate = true;\n\t  }\n\t}\n\t\n\tfunction processAttrs (el) {\n\t  var list = el.attrsList;\n\t  var i, l, name, rawName, value, arg, modifiers, isProp;\n\t  for (i = 0, l = list.length; i < l; i++) {\n\t    name = rawName = list[i].name;\n\t    value = list[i].value;\n\t    if (dirRE.test(name)) {\n\t      // mark element as dynamic\n\t      el.hasBindings = true;\n\t      // modifiers\n\t      modifiers = parseModifiers(name);\n\t      if (modifiers) {\n\t        name = name.replace(modifierRE, '');\n\t      }\n\t      if (bindRE.test(name)) { // v-bind\n\t        name = name.replace(bindRE, '');\n\t        value = parseFilters(value);\n\t        if (modifiers) {\n\t          if (modifiers.prop) {\n\t            isProp = true;\n\t            name = camelize(name);\n\t            if (name === 'innerHtml') { name = 'innerHTML'; }\n\t          }\n\t          if (modifiers.camel) {\n\t            name = camelize(name);\n\t          }\n\t        }\n\t        if (isProp || platformMustUseProp(el.tag, name)) {\n\t          addProp(el, name, value);\n\t        } else {\n\t          addAttr(el, name, value);\n\t        }\n\t      } else if (onRE.test(name)) { // v-on\n\t        name = name.replace(onRE, '');\n\t        addHandler(el, name, value, modifiers);\n\t      } else { // normal directives\n\t        name = name.replace(dirRE, '');\n\t        // parse arg\n\t        var argMatch = name.match(argRE);\n\t        if (argMatch && (arg = argMatch[1])) {\n\t          name = name.slice(0, -(arg.length + 1));\n\t        }\n\t        addDirective(el, name, rawName, value, arg, modifiers);\n\t        if (false) {\n\t          checkForAliasModel(el, value);\n\t        }\n\t      }\n\t    } else {\n\t      // literal attribute\n\t      if (false) {\n\t        var expression = parseText(value, delimiters);\n\t        if (expression) {\n\t          warn$1(\n\t            name + \"=\\\"\" + value + \"\\\": \" +\n\t            'Interpolation inside attributes has been removed. ' +\n\t            'Use v-bind or the colon shorthand instead. For example, ' +\n\t            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n\t          );\n\t        }\n\t      }\n\t      addAttr(el, name, JSON.stringify(value));\n\t    }\n\t  }\n\t}\n\t\n\tfunction checkInFor (el) {\n\t  var parent = el;\n\t  while (parent) {\n\t    if (parent.for !== undefined) {\n\t      return true\n\t    }\n\t    parent = parent.parent;\n\t  }\n\t  return false\n\t}\n\t\n\tfunction parseModifiers (name) {\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var ret = {};\n\t    match.forEach(function (m) { ret[m.slice(1)] = true; });\n\t    return ret\n\t  }\n\t}\n\t\n\tfunction makeAttrsMap (attrs) {\n\t  var map = {};\n\t  for (var i = 0, l = attrs.length; i < l; i++) {\n\t    if (false) {\n\t      warn$1('duplicate attribute: ' + attrs[i].name);\n\t    }\n\t    map[attrs[i].name] = attrs[i].value;\n\t  }\n\t  return map\n\t}\n\t\n\tfunction findPrevElement (children) {\n\t  var i = children.length;\n\t  while (i--) {\n\t    if (children[i].tag) { return children[i] }\n\t  }\n\t}\n\t\n\tfunction isForbiddenTag (el) {\n\t  return (\n\t    el.tag === 'style' ||\n\t    (el.tag === 'script' && (\n\t      !el.attrsMap.type ||\n\t      el.attrsMap.type === 'text/javascript'\n\t    ))\n\t  )\n\t}\n\t\n\tvar ieNSBug = /^xmlns:NS\\d+/;\n\tvar ieNSPrefix = /^NS\\d+:/;\n\t\n\t/* istanbul ignore next */\n\tfunction guardIESVGBug (attrs) {\n\t  var res = [];\n\t  for (var i = 0; i < attrs.length; i++) {\n\t    var attr = attrs[i];\n\t    if (!ieNSBug.test(attr.name)) {\n\t      attr.name = attr.name.replace(ieNSPrefix, '');\n\t      res.push(attr);\n\t    }\n\t  }\n\t  return res\n\t}\n\t\n\tfunction checkForAliasModel (el, value) {\n\t  var _el = el;\n\t  while (_el) {\n\t    if (_el.for && _el.alias === value) {\n\t      warn$1(\n\t        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n\t        \"You are binding v-model directly to a v-for iteration alias. \" +\n\t        \"This will not be able to modify the v-for source array because \" +\n\t        \"writing to the alias is like modifying a function local variable. \" +\n\t        \"Consider using an array of objects and use v-model on an object property instead.\"\n\t      );\n\t    }\n\t    _el = _el.parent;\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar isStaticKey;\n\tvar isPlatformReservedTag;\n\t\n\tvar genStaticKeysCached = cached(genStaticKeys$1);\n\t\n\t/**\n\t * Goal of the optimizer: walk the generated template AST tree\n\t * and detect sub-trees that are purely static, i.e. parts of\n\t * the DOM that never needs to change.\n\t *\n\t * Once we detect these sub-trees, we can:\n\t *\n\t * 1. Hoist them into constants, so that we no longer need to\n\t *    create fresh nodes for them on each re-render;\n\t * 2. Completely skip them in the patching process.\n\t */\n\tfunction optimize (root, options) {\n\t  if (!root) { return }\n\t  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n\t  isPlatformReservedTag = options.isReservedTag || no;\n\t  // first pass: mark all non-static nodes.\n\t  markStatic(root);\n\t  // second pass: mark static roots.\n\t  markStaticRoots(root, false);\n\t}\n\t\n\tfunction genStaticKeys$1 (keys) {\n\t  return makeMap(\n\t    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n\t    (keys ? ',' + keys : '')\n\t  )\n\t}\n\t\n\tfunction markStatic (node) {\n\t  node.static = isStatic(node);\n\t  if (node.type === 1) {\n\t    // do not make component slot content static. this avoids\n\t    // 1. components not able to mutate slot nodes\n\t    // 2. static slot content fails for hot-reloading\n\t    if (\n\t      !isPlatformReservedTag(node.tag) &&\n\t      node.tag !== 'slot' &&\n\t      node.attrsMap['inline-template'] == null\n\t    ) {\n\t      return\n\t    }\n\t    for (var i = 0, l = node.children.length; i < l; i++) {\n\t      var child = node.children[i];\n\t      markStatic(child);\n\t      if (!child.static) {\n\t        node.static = false;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction markStaticRoots (node, isInFor) {\n\t  if (node.type === 1) {\n\t    if (node.static || node.once) {\n\t      node.staticInFor = isInFor;\n\t    }\n\t    // For a node to qualify as a static root, it should have children that\n\t    // are not just static text. Otherwise the cost of hoisting out will\n\t    // outweigh the benefits and it's better off to just always render it fresh.\n\t    if (node.static && node.children.length && !(\n\t      node.children.length === 1 &&\n\t      node.children[0].type === 3\n\t    )) {\n\t      node.staticRoot = true;\n\t      return\n\t    } else {\n\t      node.staticRoot = false;\n\t    }\n\t    if (node.children) {\n\t      for (var i = 0, l = node.children.length; i < l; i++) {\n\t        markStaticRoots(node.children[i], isInFor || !!node.for);\n\t      }\n\t    }\n\t    if (node.ifConditions) {\n\t      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n\t    }\n\t  }\n\t}\n\t\n\tfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n\t  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n\t    markStaticRoots(conditionBlocks[i].block, isInFor);\n\t  }\n\t}\n\t\n\tfunction isStatic (node) {\n\t  if (node.type === 2) { // expression\n\t    return false\n\t  }\n\t  if (node.type === 3) { // text\n\t    return true\n\t  }\n\t  return !!(node.pre || (\n\t    !node.hasBindings && // no dynamic bindings\n\t    !node.if && !node.for && // not v-if or v-for or v-else\n\t    !isBuiltInTag(node.tag) && // not a built-in\n\t    isPlatformReservedTag(node.tag) && // not a component\n\t    !isDirectChildOfTemplateFor(node) &&\n\t    Object.keys(node).every(isStaticKey)\n\t  ))\n\t}\n\t\n\tfunction isDirectChildOfTemplateFor (node) {\n\t  while (node.parent) {\n\t    node = node.parent;\n\t    if (node.tag !== 'template') {\n\t      return false\n\t    }\n\t    if (node.for) {\n\t      return true\n\t    }\n\t  }\n\t  return false\n\t}\n\t\n\t/*  */\n\t\n\tvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\n\tvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40,\n\t  'delete': [8, 46]\n\t};\n\t\n\tvar modifierCode = {\n\t  stop: '$event.stopPropagation();',\n\t  prevent: '$event.preventDefault();',\n\t  self: 'if($event.target !== $event.currentTarget)return;',\n\t  ctrl: 'if(!$event.ctrlKey)return;',\n\t  shift: 'if(!$event.shiftKey)return;',\n\t  alt: 'if(!$event.altKey)return;',\n\t  meta: 'if(!$event.metaKey)return;'\n\t};\n\t\n\tfunction genHandlers (events, native) {\n\t  var res = native ? 'nativeOn:{' : 'on:{';\n\t  for (var name in events) {\n\t    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n\t  }\n\t  return res.slice(0, -1) + '}'\n\t}\n\t\n\tfunction genHandler (\n\t  name,\n\t  handler\n\t) {\n\t  if (!handler) {\n\t    return 'function(){}'\n\t  } else if (Array.isArray(handler)) {\n\t    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n\t  } else if (!handler.modifiers) {\n\t    return fnExpRE.test(handler.value) || simplePathRE.test(handler.value)\n\t      ? handler.value\n\t      : (\"function($event){\" + (handler.value) + \"}\")\n\t  } else {\n\t    var code = '';\n\t    var keys = [];\n\t    for (var key in handler.modifiers) {\n\t      if (modifierCode[key]) {\n\t        code += modifierCode[key];\n\t      } else {\n\t        keys.push(key);\n\t      }\n\t    }\n\t    if (keys.length) {\n\t      code = genKeyFilter(keys) + code;\n\t    }\n\t    var handlerCode = simplePathRE.test(handler.value)\n\t      ? handler.value + '($event)'\n\t      : handler.value;\n\t    return 'function($event){' + code + handlerCode + '}'\n\t  }\n\t}\n\t\n\tfunction genKeyFilter (keys) {\n\t  return (\"if(\" + (keys.map(genFilterCode).join('&&')) + \")return;\")\n\t}\n\t\n\tfunction genFilterCode (key) {\n\t  var keyVal = parseInt(key, 10);\n\t  if (keyVal) {\n\t    return (\"$event.keyCode!==\" + keyVal)\n\t  }\n\t  var alias = keyCodes[key];\n\t  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n\t}\n\t\n\t/*  */\n\t\n\tfunction bind$2 (el, dir) {\n\t  el.wrapData = function (code) {\n\t    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n\t  };\n\t}\n\t\n\tvar baseDirectives = {\n\t  bind: bind$2,\n\t  cloak: noop\n\t};\n\t\n\t/*  */\n\t\n\t// configurable state\n\tvar warn$2;\n\tvar transforms$1;\n\tvar dataGenFns;\n\tvar platformDirectives$1;\n\tvar staticRenderFns;\n\tvar onceCount;\n\tvar currentOptions;\n\t\n\tfunction generate (\n\t  ast,\n\t  options\n\t) {\n\t  // save previous staticRenderFns so generate calls can be nested\n\t  var prevStaticRenderFns = staticRenderFns;\n\t  var currentStaticRenderFns = staticRenderFns = [];\n\t  var prevOnceCount = onceCount;\n\t  onceCount = 0;\n\t  currentOptions = options;\n\t  warn$2 = options.warn || baseWarn;\n\t  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n\t  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n\t  platformDirectives$1 = options.directives || {};\n\t  var code = ast ? genElement(ast) : '_h(\"div\")';\n\t  staticRenderFns = prevStaticRenderFns;\n\t  onceCount = prevOnceCount;\n\t  return {\n\t    render: (\"with(this){return \" + code + \"}\"),\n\t    staticRenderFns: currentStaticRenderFns\n\t  }\n\t}\n\t\n\tfunction genElement (el) {\n\t  if (el.staticRoot && !el.staticProcessed) {\n\t    return genStatic(el)\n\t  } else if (el.once && !el.onceProcessed) {\n\t    return genOnce(el)\n\t  } else if (el.for && !el.forProcessed) {\n\t    return genFor(el)\n\t  } else if (el.if && !el.ifProcessed) {\n\t    return genIf(el)\n\t  } else if (el.tag === 'template' && !el.slotTarget) {\n\t    return genChildren(el) || 'void 0'\n\t  } else if (el.tag === 'slot') {\n\t    return genSlot(el)\n\t  } else {\n\t    // component or element\n\t    var code;\n\t    if (el.component) {\n\t      code = genComponent(el.component, el);\n\t    } else {\n\t      var data = el.plain ? undefined : genData(el);\n\t\n\t      var children = el.inlineTemplate ? null : genChildren(el);\n\t      code = \"_h('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n\t    }\n\t    // module transforms\n\t    for (var i = 0; i < transforms$1.length; i++) {\n\t      code = transforms$1[i](el, code);\n\t    }\n\t    return code\n\t  }\n\t}\n\t\n\t// hoist static sub-trees out\n\tfunction genStatic (el) {\n\t  el.staticProcessed = true;\n\t  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n\t  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n\t}\n\t\n\t// v-once\n\tfunction genOnce (el) {\n\t  el.onceProcessed = true;\n\t  if (el.if && !el.ifProcessed) {\n\t    return genIf(el)\n\t  } else if (el.staticInFor) {\n\t    var key = '';\n\t    var parent = el.parent;\n\t    while (parent) {\n\t      if (parent.for) {\n\t        key = parent.key;\n\t        break\n\t      }\n\t      parent = parent.parent;\n\t    }\n\t    if (!key) {\n\t      (\"production\") !== 'production' && warn$2(\n\t        \"v-once can only be used inside v-for that is keyed. \"\n\t      );\n\t      return genElement(el)\n\t    }\n\t    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n\t  } else {\n\t    return genStatic(el)\n\t  }\n\t}\n\t\n\tfunction genIf (el) {\n\t  el.ifProcessed = true; // avoid recursion\n\t  return genIfConditions(el.ifConditions.slice())\n\t}\n\t\n\tfunction genIfConditions (conditions) {\n\t  if (!conditions.length) {\n\t    return '_e()'\n\t  }\n\t\n\t  var condition = conditions.shift();\n\t  if (condition.exp) {\n\t    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n\t  } else {\n\t    return (\"\" + (genTernaryExp(condition.block)))\n\t  }\n\t\n\t  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n\t  function genTernaryExp (el) {\n\t    return el.once ? genOnce(el) : genElement(el)\n\t  }\n\t}\n\t\n\tfunction genFor (el) {\n\t  var exp = el.for;\n\t  var alias = el.alias;\n\t  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n\t  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\t  el.forProcessed = true; // avoid recursion\n\t  return \"_l((\" + exp + \"),\" +\n\t    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n\t      \"return \" + (genElement(el)) +\n\t    '})'\n\t}\n\t\n\tfunction genData (el) {\n\t  var data = '{';\n\t\n\t  // directives first.\n\t  // directives may mutate the el's other properties before they are generated.\n\t  var dirs = genDirectives(el);\n\t  if (dirs) { data += dirs + ','; }\n\t\n\t  // key\n\t  if (el.key) {\n\t    data += \"key:\" + (el.key) + \",\";\n\t  }\n\t  // ref\n\t  if (el.ref) {\n\t    data += \"ref:\" + (el.ref) + \",\";\n\t  }\n\t  if (el.refInFor) {\n\t    data += \"refInFor:true,\";\n\t  }\n\t  // pre\n\t  if (el.pre) {\n\t    data += \"pre:true,\";\n\t  }\n\t  // record original tag name for components using \"is\" attribute\n\t  if (el.component) {\n\t    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n\t  }\n\t  // module data generation functions\n\t  for (var i = 0; i < dataGenFns.length; i++) {\n\t    data += dataGenFns[i](el);\n\t  }\n\t  // attributes\n\t  if (el.attrs) {\n\t    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n\t  }\n\t  // DOM props\n\t  if (el.props) {\n\t    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n\t  }\n\t  // event handlers\n\t  if (el.events) {\n\t    data += (genHandlers(el.events)) + \",\";\n\t  }\n\t  if (el.nativeEvents) {\n\t    data += (genHandlers(el.nativeEvents, true)) + \",\";\n\t  }\n\t  // slot target\n\t  if (el.slotTarget) {\n\t    data += \"slot:\" + (el.slotTarget) + \",\";\n\t  }\n\t  // scoped slots\n\t  if (el.scopedSlots) {\n\t    data += (genScopedSlots(el.scopedSlots)) + \",\";\n\t  }\n\t  // inline-template\n\t  if (el.inlineTemplate) {\n\t    var inlineTemplate = genInlineTemplate(el);\n\t    if (inlineTemplate) {\n\t      data += inlineTemplate + \",\";\n\t    }\n\t  }\n\t  data = data.replace(/,$/, '') + '}';\n\t  // v-bind data wrap\n\t  if (el.wrapData) {\n\t    data = el.wrapData(data);\n\t  }\n\t  return data\n\t}\n\t\n\tfunction genDirectives (el) {\n\t  var dirs = el.directives;\n\t  if (!dirs) { return }\n\t  var res = 'directives:[';\n\t  var hasRuntime = false;\n\t  var i, l, dir, needRuntime;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    dir = dirs[i];\n\t    needRuntime = true;\n\t    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n\t    if (gen) {\n\t      // compile-time directive that manipulates AST.\n\t      // returns true if it also needs a runtime counterpart.\n\t      needRuntime = !!gen(el, dir, warn$2);\n\t    }\n\t    if (needRuntime) {\n\t      hasRuntime = true;\n\t      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n\t    }\n\t  }\n\t  if (hasRuntime) {\n\t    return res.slice(0, -1) + ']'\n\t  }\n\t}\n\t\n\tfunction genInlineTemplate (el) {\n\t  var ast = el.children[0];\n\t  if (false) {\n\t    warn$2('Inline-template components must have exactly one child element.');\n\t  }\n\t  if (ast.type === 1) {\n\t    var inlineRenderFns = generate(ast, currentOptions);\n\t    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n\t  }\n\t}\n\t\n\tfunction genScopedSlots (slots) {\n\t  return (\"scopedSlots:{\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"}\")\n\t}\n\t\n\tfunction genScopedSlot (key, el) {\n\t  return key + \":function(\" + (String(el.attrsMap.scope)) + \"){\" +\n\t    \"return \" + (el.tag === 'template'\n\t      ? genChildren(el) || 'void 0'\n\t      : genElement(el)) + \"}\"\n\t}\n\t\n\tfunction genChildren (el) {\n\t  if (el.children.length) {\n\t    return '[' + el.children.map(genNode).join(',') + ']'\n\t  }\n\t}\n\t\n\tfunction genNode (node) {\n\t  if (node.type === 1) {\n\t    return genElement(node)\n\t  } else {\n\t    return genText(node)\n\t  }\n\t}\n\t\n\tfunction genText (text) {\n\t  return text.type === 2\n\t    ? text.expression // no need for () because already wrapped in _s()\n\t    : transformSpecialNewlines(JSON.stringify(text.text))\n\t}\n\t\n\tfunction genSlot (el) {\n\t  var slotName = el.slotName || '\"default\"';\n\t  var children = genChildren(el);\n\t  return (\"_t(\" + slotName + (children ? (\",\" + children) : '') + (el.attrs ? ((children ? '' : ',null') + \",{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\") : '') + \")\")\n\t}\n\t\n\t// componentName is el.component, take it as argument to shun flow's pessimistic refinement\n\tfunction genComponent (componentName, el) {\n\t  var children = el.inlineTemplate ? null : genChildren(el);\n\t  return (\"_h(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n\t}\n\t\n\tfunction genProps (props) {\n\t  var res = '';\n\t  for (var i = 0; i < props.length; i++) {\n\t    var prop = props[i];\n\t    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n\t  }\n\t  return res.slice(0, -1)\n\t}\n\t\n\t// #3895, #4268\n\tfunction transformSpecialNewlines (text) {\n\t  return text\n\t    .replace(/\\u2028/g, '\\\\u2028')\n\t    .replace(/\\u2029/g, '\\\\u2029')\n\t}\n\t\n\t/*  */\n\t\n\t/**\n\t * Compile a template.\n\t */\n\tfunction compile$1 (\n\t  template,\n\t  options\n\t) {\n\t  var ast = parse(template.trim(), options);\n\t  optimize(ast, options);\n\t  var code = generate(ast, options);\n\t  return {\n\t    ast: ast,\n\t    render: code.render,\n\t    staticRenderFns: code.staticRenderFns\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\t// operators like typeof, instanceof and in are allowed\n\tvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n\t  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n\t  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n\t  'extends,finally,continue,debugger,function,arguments'\n\t).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\t// check valid identifier for v-for\n\tvar identRE = /[A-Za-z_$][\\w$]*/;\n\t// strip strings in expressions\n\tvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\t\n\t// detect problematic expressions in a template\n\tfunction detectErrors (ast) {\n\t  var errors = [];\n\t  if (ast) {\n\t    checkNode(ast, errors);\n\t  }\n\t  return errors\n\t}\n\t\n\tfunction checkNode (node, errors) {\n\t  if (node.type === 1) {\n\t    for (var name in node.attrsMap) {\n\t      if (dirRE.test(name)) {\n\t        var value = node.attrsMap[name];\n\t        if (value) {\n\t          if (name === 'v-for') {\n\t            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n\t          } else {\n\t            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (node.children) {\n\t      for (var i = 0; i < node.children.length; i++) {\n\t        checkNode(node.children[i], errors);\n\t      }\n\t    }\n\t  } else if (node.type === 2) {\n\t    checkExpression(node.expression, node.text, errors);\n\t  }\n\t}\n\t\n\tfunction checkFor (node, text, errors) {\n\t  checkExpression(node.for || '', text, errors);\n\t  checkIdentifier(node.alias, 'v-for alias', text, errors);\n\t  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n\t  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n\t}\n\t\n\tfunction checkIdentifier (ident, type, text, errors) {\n\t  if (typeof ident === 'string' && !identRE.test(ident)) {\n\t    errors.push((\"- invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + text));\n\t  }\n\t}\n\t\n\tfunction checkExpression (exp, text, errors) {\n\t  try {\n\t    new Function((\"return \" + exp));\n\t  } catch (e) {\n\t    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n\t    if (keywordMatch) {\n\t      errors.push(\n\t        \"- avoid using JavaScript keyword as property name: \" +\n\t        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + text\n\t      );\n\t    } else {\n\t      errors.push((\"- invalid expression: \" + text));\n\t    }\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction transformNode (el, options) {\n\t  var warn = options.warn || baseWarn;\n\t  var staticClass = getAndRemoveAttr(el, 'class');\n\t  if (false) {\n\t    var expression = parseText(staticClass, options.delimiters);\n\t    if (expression) {\n\t      warn(\n\t        \"class=\\\"\" + staticClass + \"\\\": \" +\n\t        'Interpolation inside attributes has been removed. ' +\n\t        'Use v-bind or the colon shorthand instead. For example, ' +\n\t        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n\t      );\n\t    }\n\t  }\n\t  if (staticClass) {\n\t    el.staticClass = JSON.stringify(staticClass);\n\t  }\n\t  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n\t  if (classBinding) {\n\t    el.classBinding = classBinding;\n\t  }\n\t}\n\t\n\tfunction genData$1 (el) {\n\t  var data = '';\n\t  if (el.staticClass) {\n\t    data += \"staticClass:\" + (el.staticClass) + \",\";\n\t  }\n\t  if (el.classBinding) {\n\t    data += \"class:\" + (el.classBinding) + \",\";\n\t  }\n\t  return data\n\t}\n\t\n\tvar klass$1 = {\n\t  staticKeys: ['staticClass'],\n\t  transformNode: transformNode,\n\t  genData: genData$1\n\t};\n\t\n\t/*  */\n\t\n\tfunction transformNode$1 (el, options) {\n\t  var warn = options.warn || baseWarn;\n\t  var staticStyle = getAndRemoveAttr(el, 'style');\n\t  if (staticStyle) {\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      var expression = parseText(staticStyle, options.delimiters);\n\t      if (expression) {\n\t        warn(\n\t          \"style=\\\"\" + staticStyle + \"\\\": \" +\n\t          'Interpolation inside attributes has been removed. ' +\n\t          'Use v-bind or the colon shorthand instead. For example, ' +\n\t          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n\t        );\n\t      }\n\t    }\n\t    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n\t  }\n\t\n\t  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n\t  if (styleBinding) {\n\t    el.styleBinding = styleBinding;\n\t  }\n\t}\n\t\n\tfunction genData$2 (el) {\n\t  var data = '';\n\t  if (el.staticStyle) {\n\t    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n\t  }\n\t  if (el.styleBinding) {\n\t    data += \"style:(\" + (el.styleBinding) + \"),\";\n\t  }\n\t  return data\n\t}\n\t\n\tvar style$1 = {\n\t  staticKeys: ['staticStyle'],\n\t  transformNode: transformNode$1,\n\t  genData: genData$2\n\t};\n\t\n\tvar modules$1 = [\n\t  klass$1,\n\t  style$1\n\t];\n\t\n\t/*  */\n\t\n\tvar warn$3;\n\t\n\tfunction model$1 (\n\t  el,\n\t  dir,\n\t  _warn\n\t) {\n\t  warn$3 = _warn;\n\t  var value = dir.value;\n\t  var modifiers = dir.modifiers;\n\t  var tag = el.tag;\n\t  var type = el.attrsMap.type;\n\t  if (false) {\n\t    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n\t    if (tag === 'input' && dynamicType) {\n\t      warn$3(\n\t        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n\t        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n\t      );\n\t    }\n\t  }\n\t  if (tag === 'select') {\n\t    genSelect(el, value, modifiers);\n\t  } else if (tag === 'input' && type === 'checkbox') {\n\t    genCheckboxModel(el, value, modifiers);\n\t  } else if (tag === 'input' && type === 'radio') {\n\t    genRadioModel(el, value, modifiers);\n\t  } else {\n\t    genDefaultModel(el, value, modifiers);\n\t  }\n\t  // ensure runtime directive metadata\n\t  return true\n\t}\n\t\n\tfunction genCheckboxModel (\n\t  el,\n\t  value,\n\t  modifiers\n\t) {\n\t  if (false) {\n\t    warn$3(\n\t      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\n\t      \"inline checked attributes will be ignored when using v-model. \" +\n\t      'Declare initial values in the component\\'s data option instead.'\n\t    );\n\t  }\n\t  var number = modifiers && modifiers.number;\n\t  var valueBinding = getBindingAttr(el, 'value') || 'null';\n\t  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n\t  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n\t  addProp(el, 'checked',\n\t    \"Array.isArray(\" + value + \")\" +\n\t      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" +\n\t      \":_q(\" + value + \",\" + trueValueBinding + \")\"\n\t  );\n\t  addHandler(el, 'change',\n\t    \"var $$a=\" + value + \",\" +\n\t        '$$el=$event.target,' +\n\t        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n\t    'if(Array.isArray($$a)){' +\n\t      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n\t          '$$i=_i($$a,$$v);' +\n\t      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n\t      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n\t    \"}else{\" + value + \"=$$c}\",\n\t    null, true\n\t  );\n\t}\n\t\n\tfunction genRadioModel (\n\t    el,\n\t    value,\n\t    modifiers\n\t) {\n\t  if (false) {\n\t    warn$3(\n\t      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\n\t      \"inline checked attributes will be ignored when using v-model. \" +\n\t      'Declare initial values in the component\\'s data option instead.'\n\t    );\n\t  }\n\t  var number = modifiers && modifiers.number;\n\t  var valueBinding = getBindingAttr(el, 'value') || 'null';\n\t  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n\t  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n\t  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n\t}\n\t\n\tfunction genDefaultModel (\n\t  el,\n\t  value,\n\t  modifiers\n\t) {\n\t  if (false) {\n\t    if (el.tag === 'input' && el.attrsMap.value) {\n\t      warn$3(\n\t        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" value=\\\"\" + (el.attrsMap.value) + \"\\\">:\\n\" +\n\t        'inline value attributes will be ignored when using v-model. ' +\n\t        'Declare initial values in the component\\'s data option instead.'\n\t      );\n\t    }\n\t    if (el.tag === 'textarea' && el.children.length) {\n\t      warn$3(\n\t        \"<textarea v-model=\\\"\" + value + \"\\\">:\\n\" +\n\t        'inline content inside <textarea> will be ignored when using v-model. ' +\n\t        'Declare initial values in the component\\'s data option instead.'\n\t      );\n\t    }\n\t  }\n\t\n\t  var type = el.attrsMap.type;\n\t  var ref = modifiers || {};\n\t  var lazy = ref.lazy;\n\t  var number = ref.number;\n\t  var trim = ref.trim;\n\t  var event = lazy || (isIE && type === 'range') ? 'change' : 'input';\n\t  var needCompositionGuard = !lazy && type !== 'range';\n\t  var isNative = el.tag === 'input' || el.tag === 'textarea';\n\t\n\t  var valueExpression = isNative\n\t    ? (\"$event.target.value\" + (trim ? '.trim()' : ''))\n\t    : trim ? \"(typeof $event === 'string' ? $event.trim() : $event)\" : \"$event\";\n\t  valueExpression = number || type === 'number'\n\t    ? (\"_n(\" + valueExpression + \")\")\n\t    : valueExpression;\n\t  var code = genAssignmentCode(value, valueExpression);\n\t  if (isNative && needCompositionGuard) {\n\t    code = \"if($event.target.composing)return;\" + code;\n\t  }\n\t  // inputs with type=\"file\" are read only and setting the input's\n\t  // value will throw an error.\n\t  if (false) {\n\t    warn$3(\n\t      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n\t      \"File inputs are read only. Use a v-on:change listener instead.\"\n\t    );\n\t  }\n\t  addProp(el, 'value', isNative ? (\"_s(\" + value + \")\") : (\"(\" + value + \")\"));\n\t  addHandler(el, event, code, null, true);\n\t}\n\t\n\tfunction genSelect (\n\t    el,\n\t    value,\n\t    modifiers\n\t) {\n\t  if (false) {\n\t    el.children.some(checkOptionWarning);\n\t  }\n\t\n\t  var number = modifiers && modifiers.number;\n\t  var assignment = \"Array.prototype.filter\" +\n\t    \".call($event.target.options,function(o){return o.selected})\" +\n\t    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n\t    \"return \" + (number ? '_n(val)' : 'val') + \"})\" +\n\t    (el.attrsMap.multiple == null ? '[0]' : '');\n\t\n\t  var code = genAssignmentCode(value, assignment);\n\t  addHandler(el, 'change', code, null, true);\n\t}\n\t\n\tfunction checkOptionWarning (option) {\n\t  if (option.type === 1 &&\n\t    option.tag === 'option' &&\n\t    option.attrsMap.selected != null) {\n\t    warn$3(\n\t      \"<select v-model=\\\"\" + (option.parent.attrsMap['v-model']) + \"\\\">:\\n\" +\n\t      'inline selected attributes on <option> will be ignored when using v-model. ' +\n\t      'Declare initial values in the component\\'s data option instead.'\n\t    );\n\t    return true\n\t  }\n\t  return false\n\t}\n\t\n\tfunction genAssignmentCode (value, assignment) {\n\t  var modelRs = parseModel(value);\n\t  if (modelRs.idx === null) {\n\t    return (value + \"=\" + assignment)\n\t  } else {\n\t    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n\t      \"if (!Array.isArray($$exp)){\" +\n\t        value + \"=\" + assignment + \"}\" +\n\t      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction text (el, dir) {\n\t  if (dir.value) {\n\t    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tfunction html (el, dir) {\n\t  if (dir.value) {\n\t    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n\t  }\n\t}\n\t\n\tvar directives$1 = {\n\t  model: model$1,\n\t  text: text,\n\t  html: html\n\t};\n\t\n\t/*  */\n\t\n\tvar cache = Object.create(null);\n\t\n\tvar baseOptions = {\n\t  expectHTML: true,\n\t  modules: modules$1,\n\t  staticKeys: genStaticKeys(modules$1),\n\t  directives: directives$1,\n\t  isReservedTag: isReservedTag,\n\t  isUnaryTag: isUnaryTag,\n\t  mustUseProp: mustUseProp,\n\t  getTagNamespace: getTagNamespace,\n\t  isPreTag: isPreTag\n\t};\n\t\n\tfunction compile$$1 (\n\t  template,\n\t  options\n\t) {\n\t  options = options\n\t    ? extend(extend({}, baseOptions), options)\n\t    : baseOptions;\n\t  return compile$1(template, options)\n\t}\n\t\n\tfunction compileToFunctions (\n\t  template,\n\t  options,\n\t  vm\n\t) {\n\t  var _warn = (options && options.warn) || warn;\n\t  // detect possible CSP restriction\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    try {\n\t      new Function('return 1');\n\t    } catch (e) {\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        _warn(\n\t          'It seems you are using the standalone build of Vue.js in an ' +\n\t          'environment with Content Security Policy that prohibits unsafe-eval. ' +\n\t          'The template compiler cannot work in this environment. Consider ' +\n\t          'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n\t          'templates into render functions.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t  var key = options && options.delimiters\n\t    ? String(options.delimiters) + template\n\t    : template;\n\t  if (cache[key]) {\n\t    return cache[key]\n\t  }\n\t  var res = {};\n\t  var compiled = compile$$1(template, options);\n\t  res.render = makeFunction(compiled.render);\n\t  var l = compiled.staticRenderFns.length;\n\t  res.staticRenderFns = new Array(l);\n\t  for (var i = 0; i < l; i++) {\n\t    res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i]);\n\t  }\n\t  if (false) {\n\t    if (res.render === noop || res.staticRenderFns.some(function (fn) { return fn === noop; })) {\n\t      _warn(\n\t        \"failed to compile template:\\n\\n\" + template + \"\\n\\n\" +\n\t        detectErrors(compiled.ast).join('\\n') +\n\t        '\\n\\n',\n\t        vm\n\t      );\n\t    }\n\t  }\n\t  return (cache[key] = res)\n\t}\n\t\n\tfunction makeFunction (code) {\n\t  try {\n\t    return new Function(code)\n\t  } catch (e) {\n\t    return noop\n\t  }\n\t}\n\t\n\t/*  */\n\t\n\tvar idToTemplate = cached(function (id) {\n\t  var el = query(id);\n\t  return el && el.innerHTML\n\t});\n\t\n\tvar mount = Vue$3.prototype.$mount;\n\tVue$3.prototype.$mount = function (\n\t  el,\n\t  hydrating\n\t) {\n\t  el = el && query(el);\n\t\n\t  /* istanbul ignore if */\n\t  if (el === document.body || el === document.documentElement) {\n\t    (\"production\") !== 'production' && warn(\n\t      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n\t    );\n\t    return this\n\t  }\n\t\n\t  var options = this.$options;\n\t  // resolve template/el and convert to render function\n\t  if (!options.render) {\n\t    var template = options.template;\n\t    if (template) {\n\t      if (typeof template === 'string') {\n\t        if (template.charAt(0) === '#') {\n\t          template = idToTemplate(template);\n\t          /* istanbul ignore if */\n\t          if (false) {\n\t            warn(\n\t              (\"Template element not found or is empty: \" + (options.template)),\n\t              this\n\t            );\n\t          }\n\t        }\n\t      } else if (template.nodeType) {\n\t        template = template.innerHTML;\n\t      } else {\n\t        if (false) {\n\t          warn('invalid template option:' + template, this);\n\t        }\n\t        return this\n\t      }\n\t    } else if (el) {\n\t      template = getOuterHTML(el);\n\t    }\n\t    if (template) {\n\t      var ref = compileToFunctions(template, {\n\t        warn: warn,\n\t        shouldDecodeNewlines: shouldDecodeNewlines,\n\t        delimiters: options.delimiters\n\t      }, this);\n\t      var render = ref.render;\n\t      var staticRenderFns = ref.staticRenderFns;\n\t      options.render = render;\n\t      options.staticRenderFns = staticRenderFns;\n\t    }\n\t  }\n\t  return mount.call(this, el, hydrating)\n\t};\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t */\n\tfunction getOuterHTML (el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML\n\t  }\n\t}\n\t\n\tVue$3.compile = compileToFunctions;\n\t\n\tmodule.exports = Vue$3;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Stringify/parse functions that don't operate\n\t * recursively, so they avoid call stack exceeded\n\t * errors.\n\t */\n\texports.stringify = function stringify(input) {\n\t  var queue = [];\n\t  queue.push({obj: input});\n\t\n\t  var res = '';\n\t  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n\t  while ((next = queue.pop())) {\n\t    obj = next.obj;\n\t    prefix = next.prefix || '';\n\t    val = next.val || '';\n\t    res += prefix;\n\t    if (val) {\n\t      res += val;\n\t    } else if (typeof obj !== 'object') {\n\t      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n\t    } else if (obj === null) {\n\t      res += 'null';\n\t    } else if (Array.isArray(obj)) {\n\t      queue.push({val: ']'});\n\t      for (i = obj.length - 1; i >= 0; i--) {\n\t        arrayPrefix = i === 0 ? '' : ',';\n\t        queue.push({obj: obj[i], prefix: arrayPrefix});\n\t      }\n\t      queue.push({val: '['});\n\t    } else { // object\n\t      keys = [];\n\t      for (k in obj) {\n\t        if (obj.hasOwnProperty(k)) {\n\t          keys.push(k);\n\t        }\n\t      }\n\t      queue.push({val: '}'});\n\t      for (i = keys.length - 1; i >= 0; i--) {\n\t        key = keys[i];\n\t        value = obj[key];\n\t        objPrefix = (i > 0 ? ',' : '');\n\t        objPrefix += JSON.stringify(key) + ':';\n\t        queue.push({obj: value, prefix: objPrefix});\n\t      }\n\t      queue.push({val: '{'});\n\t    }\n\t  }\n\t  return res;\n\t};\n\t\n\t// Convenience function for the parse function.\n\t// This pop function is basically copied from\n\t// pouchCollate.parseIndexableString\n\tfunction pop(obj, stack, metaStack) {\n\t  var lastMetaElement = metaStack[metaStack.length - 1];\n\t  if (obj === lastMetaElement.element) {\n\t    // popping a meta-element, e.g. an object whose value is another object\n\t    metaStack.pop();\n\t    lastMetaElement = metaStack[metaStack.length - 1];\n\t  }\n\t  var element = lastMetaElement.element;\n\t  var lastElementIndex = lastMetaElement.index;\n\t  if (Array.isArray(element)) {\n\t    element.push(obj);\n\t  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n\t    var key = stack.pop();\n\t    element[key] = obj;\n\t  } else {\n\t    stack.push(obj); // obj with key only\n\t  }\n\t}\n\t\n\texports.parse = function (str) {\n\t  var stack = [];\n\t  var metaStack = []; // stack for arrays and objects\n\t  var i = 0;\n\t  var collationIndex,parsedNum,numChar;\n\t  var parsedString,lastCh,numConsecutiveSlashes,ch;\n\t  var arrayElement, objElement;\n\t  while (true) {\n\t    collationIndex = str[i++];\n\t    if (collationIndex === '}' ||\n\t        collationIndex === ']' ||\n\t        typeof collationIndex === 'undefined') {\n\t      if (stack.length === 1) {\n\t        return stack.pop();\n\t      } else {\n\t        pop(stack.pop(), stack, metaStack);\n\t        continue;\n\t      }\n\t    }\n\t    switch (collationIndex) {\n\t      case ' ':\n\t      case '\\t':\n\t      case '\\n':\n\t      case ':':\n\t      case ',':\n\t        break;\n\t      case 'n':\n\t        i += 3; // 'ull'\n\t        pop(null, stack, metaStack);\n\t        break;\n\t      case 't':\n\t        i += 3; // 'rue'\n\t        pop(true, stack, metaStack);\n\t        break;\n\t      case 'f':\n\t        i += 4; // 'alse'\n\t        pop(false, stack, metaStack);\n\t        break;\n\t      case '0':\n\t      case '1':\n\t      case '2':\n\t      case '3':\n\t      case '4':\n\t      case '5':\n\t      case '6':\n\t      case '7':\n\t      case '8':\n\t      case '9':\n\t      case '-':\n\t        parsedNum = '';\n\t        i--;\n\t        while (true) {\n\t          numChar = str[i++];\n\t          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n\t            parsedNum += numChar;\n\t          } else {\n\t            i--;\n\t            break;\n\t          }\n\t        }\n\t        pop(parseFloat(parsedNum), stack, metaStack);\n\t        break;\n\t      case '\"':\n\t        parsedString = '';\n\t        lastCh = void 0;\n\t        numConsecutiveSlashes = 0;\n\t        while (true) {\n\t          ch = str[i++];\n\t          if (ch !== '\"' || (lastCh === '\\\\' &&\n\t              numConsecutiveSlashes % 2 === 1)) {\n\t            parsedString += ch;\n\t            lastCh = ch;\n\t            if (lastCh === '\\\\') {\n\t              numConsecutiveSlashes++;\n\t            } else {\n\t              numConsecutiveSlashes = 0;\n\t            }\n\t          } else {\n\t            break;\n\t          }\n\t        }\n\t        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n\t        break;\n\t      case '[':\n\t        arrayElement = { element: [], index: stack.length };\n\t        stack.push(arrayElement.element);\n\t        metaStack.push(arrayElement);\n\t        break;\n\t      case '{':\n\t        objElement = { element: {}, index: stack.length };\n\t        stack.push(objElement.element);\n\t        metaStack.push(objElement);\n\t        break;\n\t      default:\n\t        throw new Error(\n\t          'unexpectedly reached end of input: ' + collationIndex);\n\t    }\n\t  }\n\t};\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ }\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.998d3c537521938d0f50.js","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/immediate/lib/browser.js\n// module id = 1\n// module chunks = 2","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/argsarray/index.js\n// module id = 4\n// module chunks = 2","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if ('env' in (typeof process === 'undefined' ? {} : process)) {\n    r = process.env.DEBUG;\n  }\n  \n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/browser.js\n// module id = 16\n// module chunks = 2","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug.debug = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting\n    args = exports.formatArgs.apply(self, args);\n\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/debug.js\n// module id = 17\n// module chunks = 2","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/~/ms/index.js\n// module id = 18\n// module chunks = 2","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 19\n// module chunks = 2","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 31\n// module chunks = 2","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lie/lib/browser.js\n// module id = 32\n// module chunks = 2","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar lie = _interopDefault(require('lie'));\nvar getArguments = _interopDefault(require('argsarray'));\nvar debug = _interopDefault(require('debug'));\nvar events = require('events');\nvar inherits = _interopDefault(require('inherits'));\nvar immediate = _interopDefault(require('immediate'));\nvar scopedEval = _interopDefault(require('scope-eval'));\nvar Md5 = _interopDefault(require('spark-md5'));\nvar vuvuzela = _interopDefault(require('vuvuzela'));\n\n/* istanbul ignore next */\nvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new PouchPromise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nvar log = debug('pouchdb:api');\n\nfunction adapterFun(name, callback) {\n  function logApiCall(self, name, args) {\n    /* istanbul ignore if */\n    if (log.enabled) {\n      var logArgs = [self.name, name];\n      for (var i = 0; i < args.length - 1; i++) {\n        logArgs.push(args[i]);\n      }\n      log.apply(null, logArgs);\n\n      // override the callback itself to log the response\n      var origCallback = args[args.length - 1];\n      args[args.length - 1] = function (err, res) {\n        var responseArgs = [self.name, name];\n        responseArgs = responseArgs.concat(\n          err ? ['error', err] : ['success', res]\n        );\n        log.apply(null, responseArgs);\n        origCallback(err, res);\n      };\n    }\n  }\n\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return PouchPromise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return PouchPromise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new PouchPromise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// based on https://github.com/montagejs/collections\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction _Map() {\n  this._store = {};\n}\n_Map.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\n_Map.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\n_Map.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\n_Map.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\n_Map.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(_Map.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction _Set(array) {\n  this._store = new _Map();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\n_Set.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\n_Set.prototype.has = function (key) {\n  return this._store.has(key);\n};\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new _Map();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\ninherits(Changes, events.EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  events.EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  events.EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (console !== 'undefined' && method in console) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if(max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\n// forked from\n// https://github.com/vmattos/js-extend/blob/7023fd69a9e9552688086b8b8006b1fcf916a306/extend.js\n// TODO: I don't know why we have two different extend() functions in PouchDB\n\nvar slice = Array.prototype.slice;\nvar each = Array.prototype.forEach;\n\nfunction extend$1(obj) {\n  if (typeof obj !== 'object') {\n    throw obj + ' is not an object' ;\n  }\n\n  var sources = slice.call(arguments, 1);\n\n  each.call(sources, function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (typeof source[prop] === 'object' && obj[prop]) {\n          extend$1.call(obj, obj[prop], source[prop]);\n        } else {\n          obj[prop] = source[prop];\n        }\n      }\n    }\n  });\n\n  return obj;\n}\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 events.EventEmitter.listenerCount(ee, type);\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* jshint maxlen: false */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new PouchPromise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\n// BEGIN Math.uuid.js\n\n/*!\nMath.uuid.js (v1.4)\nhttp://www.broofa.com\nmailto:robert@broofa.com\n\nCopyright (c) 2010 Robert Kieffer\nDual licensed under the MIT and GPL licenses.\n*/\n\n/*\n * Generate a random uuid.\n *\n * USAGE: Math.uuid(length, radix)\n *   length - the desired number of characters\n *   radix  - the number of allowable values for each character.\n *\n * EXAMPLES:\n *   // No arguments  - returns RFC4122, version 4 ID\n *   >>> Math.uuid()\n *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n *\n *   // One argument - returns ID of the specified length\n *   >>> Math.uuid(15)     // 15 character ID (default base=62)\n *   \"VcydxgltxrVZSTV\"\n *\n *   // Two arguments - returns ID of the specified length, and radix. \n *   // (Radix must be <= 62)\n *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\n *   \"01001010\"\n *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\n *   \"47473046\"\n *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\n *   \"098F4D35\"\n */\nvar chars = (\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n  'abcdefghijklmnopqrstuvwxyz'\n).split('');\nfunction getValue(radix) {\n  return 0 | Math.random() * radix;\n}\nfunction uuid(len, radix) {\n  radix = radix || chars.length;\n  var out = '';\n  var i = -1;\n\n  if (len) {\n    // Compact form\n    while (++i < len) {\n      out += chars[getValue(radix)];\n    }\n    return out;\n  }\n    // rfc4122, version 4 form\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\n    // per rfc4122, sec. 4.1.5\n  while (++i < 36) {\n    switch (i) {\n      case 8:\n      case 13:\n      case 18:\n      case 23:\n        out += '-';\n        break;\n      case 19:\n        out += chars[(getValue(16) & 0x3) | 0x8];\n        break;\n      default:\n        out += chars[getValue(16)];\n    }\n  }\n\n  return out;\n}\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var maybeStem = {};\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var numStemmed = Math.max(0, stemmed.length - depth);\n    var stemmedNode = {\n      pos: path.pos + numStemmed,\n      ids: pathToTree(stemmed, numStemmed)\n    };\n\n    for (var s = 0; s < numStemmed; s++) {\n      var rev = (path.pos + s) + '-' + stemmed[s].id;\n      maybeStem[rev] = true;\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, stemmedNode, true).tree;\n    } else {\n      result = [stemmedNode];\n    }\n  }\n\n  traverseRevTree(result, function (isLeaf, pos, revHash) {\n    // some revisions may have been removed in a branch but not in another\n    delete maybeStem[pos + '-' + revHash];\n  });\n\n  return {\n    tree: result,\n    revs: Object.keys(maybeStem)\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\nfunction evalFilter(input) {\n  return scopedEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopedEval(code, {});\n}\n\ninherits(Changes$1, events.EventEmitter);\n\nfunction tryCatchInChangeListener(self, change) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$1(db, opts, callback) {\n  events.EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change) {\n    /* istanbul ignore if */\n    if (opts.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change);\n  };\n\n  var promise = new PouchPromise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.doChanges(opts);\n      }\n    });\n  } else {\n    self.doChanges(opts);\n  }\n}\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n\n    if (this.db.type() !== 'http' && !opts.doc_ids) {\n      return this.filterChanges(opts);\n    }\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\nChanges$1.prototype.filterChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    this.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      self.doChanges(opts);\n    });\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    if (!filterName) {\n      return self.doChanges(opts);\n    }\n    this.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      self.doChanges(opts);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      callback(err || results[0]);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev});\n    }\n    return rev;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysQuery(api, opts, callback) {\n  var keys =  ('limit' in opts) ?\n      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  if (opts.descending) {\n    keys.reverse();\n  }\n  if (!keys.length) {\n    return api._allDocs({limit: 0}, callback);\n  }\n  var finalResults = {\n    offset: opts.skip\n  };\n  return PouchPromise.all(keys.map(function (key) {\n    var subOpts = extend$1({key: key, deleted: 'ok'}, opts);\n    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n      delete subOpts[optKey];\n    });\n    return new PouchPromise(function (resolve, reject) {\n      api._allDocs(subOpts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        finalResults.total_rows = res.total_rows;\n        resolve(res.rows[0] || {key: key, error: 'not_found'});\n      });\n    });\n  })).then(function (results) {\n    finalResults.rows = results;\n    return finalResults;\n  });\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      immediate(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + 'is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, events.EventEmitter);\n\nfunction AbstractPouchDB() {\n  events.EventEmitter.call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  if (typeof this._put === 'function' && opts.new_edits !== false) {\n    this._put(doc, opts, cb);\n  } else {\n    this.bulkDocs({docs: [doc]}, opts, yankError(cb));\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new _Map();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev) {\n      addToMissing(id, rev);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev) {\n      if (height[rev] > maxHeight) {\n        candidates.push(rev);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n        revs.push(rev);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    PouchPromise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev) {\n            return rev.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev) {\n          pos--;\n          return {\n            rev: pos + '-' + rev.id,\n            status: rev.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (this.type() !== 'http') {\n      return allDocsKeysQuery(this, opts, callback);\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes$1(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && self.type() !== 'http');\n    info.adapter = self.type();\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  if (!opts.new_edits && this.type() !== 'http') {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (self.type() === 'http') {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    PouchPromise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z\\-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  var destructionListeners = self.constructor._destructionListeners;\n\n  function onDestroyed() {\n    self.removeListener('closed', onClosed);\n    self.constructor.emit('destroyed', self.name);\n  }\n\n  function onConstructorDestroyed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.removeListener('closed', onClosed);\n    self.emit('destroyed');\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    destructionListeners.delete(self.name);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n\n  // in setup.js, the constructor is primed to listen for destroy events\n  if (!destructionListeners.has(self.name)) {\n    destructionListeners.set(self.name, []);\n  }\n  destructionListeners.get(self.name).push(onConstructorDestroyed);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  debug('pouchdb:adapter')('Picked adapter: ' + opts.adapter);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB.debug = debug;\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new events.EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(events.EventEmitter.prototype).forEach(function (key) {\n    if (typeof events.EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new _Map();\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    destructListeners.get(name).forEach(function (callback) {\n      callback();\n    });\n    destructListeners.delete(name);\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0){\n    throw new Error('Invalid plugin: got \\\"' + obj + '\\\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = extend$1({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = extend$1({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\n// managed automatically by set-version.js\nvar version = \"6.1.0\";\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev) {\n  if (!/^\\d+\\-./.test(rev)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev.indexOf('-');\n  var left = rev.substring(0, idx);\n  var right = rev.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = uuid(32, 16).toLowerCase();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nvar atob$1 = function (str) {\n  return atob(str);\n};\n\nvar btoa$1 = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(atob$1(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(btoa$1(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return btoa$1(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction parseBase64(data) {\n  try {\n    return atob$1(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = btoa$1(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && (((previouslyDeleted && deleted) ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$ = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$ = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new _Map();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(btoa$1(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return PouchPromise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return PouchPromise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new PouchPromise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = extend$1(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, idbChanges, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var docInfoError;\n  var docCountDelta = 0;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new _Map();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    idbChanges.notify(api._meta.name);\n    api._meta.docCount += docCountDelta;\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docCountDelta += delta;\n\n    docInfo.metadata.winningRev = winningRev;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    finishDoc(docInfo, winningRev, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction handleKeyRangeError(api, opts, err, callback) {\n  if (err.name === \"DataError\" && err.code === 0) {\n    // data error, start is less than end\n    return callback(null, {\n      total_rows: api._meta.docCount,\n      offset: opts.skip,\n      rows: []\n    });\n  }\n  callback(createError(IDB_ERROR, err.name, err.message));\n}\n\nfunction idbAllDocs(opts, api, idb, callback) {\n\n  function allDocsQuery(opts, callback) {\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var skip = opts.skip || 0;\n    var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n    var inclusiveEnd = opts.inclusive_end !== false;\n    var descending = 'descending' in opts && opts.descending ? 'prev' : null;\n\n    var keyRange = createKeyRange(start, end, inclusiveEnd, key, descending);\n    if (keyRange && keyRange.error) {\n      return handleKeyRangeError(api, opts, keyRange.error, callback);\n    }\n\n    var stores = [DOC_STORE, BY_SEQ_STORE];\n\n    if (opts.attachments) {\n      stores.push(ATTACH_STORE);\n    }\n    var txnResult = openTransactionSafely(idb, stores, 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var cursor = descending ?\n      docStore.openCursor(keyRange, descending) :\n      docStore.openCursor(keyRange);\n    var docIdRevIndex = seqStore.index('_doc_id_rev');\n    var results = [];\n    var docCount = 0;\n\n    // if the user specifies include_docs=true, then we don't\n    // want to block the main cursor while we're fetching the doc\n    function fetchDocAsynchronously(metadata, row, winningRev) {\n      var key = metadata.id + \"::\" + winningRev;\n      docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n        row.doc = decodeDoc(e.target.result);\n        if (opts.conflicts) {\n          var conflicts = collectConflicts(metadata);\n          if (conflicts.length) {\n            row.doc._conflicts = conflicts;\n          }\n        }\n        fetchAttachmentsIfNecessary(row.doc, opts, txn);\n      };\n    }\n\n    function allDocsInner(cursor, winningRev, metadata) {\n      var row = {\n        id: metadata.id,\n        key: metadata.id,\n        value: {\n          rev: winningRev\n        }\n      };\n      var deleted = metadata.deleted;\n      if (opts.deleted === 'ok') {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        if (deleted) {\n          row.value.deleted = true;\n          row.doc = null;\n        } else if (opts.include_docs) {\n          fetchDocAsynchronously(metadata, row, winningRev);\n        }\n      } else if (!deleted && skip-- <= 0) {\n        results.push(row);\n        if (opts.include_docs) {\n          fetchDocAsynchronously(metadata, row, winningRev);\n        }\n        if (--limit === 0) {\n          return;\n        }\n      }\n      cursor.continue();\n    }\n\n    function onGetCursor(e) {\n      docCount = api._meta.docCount; // do this within the txn for consistency\n      var cursor = e.target.result;\n      if (!cursor) {\n        return;\n      }\n      var metadata = decodeMetadata(cursor.value);\n      var winningRev = metadata.winningRev;\n\n      allDocsInner(cursor, winningRev, metadata);\n    }\n\n    function onResultsReady() {\n      callback(null, {\n        total_rows: docCount,\n        offset: opts.skip,\n        rows: results\n      });\n    }\n\n    function onTxnComplete() {\n      if (opts.attachments) {\n        postProcessAttachments(results, opts.binary).then(onResultsReady);\n      } else {\n        onResultsReady();\n      }\n    }\n\n    txn.oncomplete = onTxnComplete;\n    cursor.onsuccess = onGetCursor;\n  }\n\n  function allDocs(opts, callback) {\n\n    if (opts.limit === 0) {\n      return callback(null, {\n        total_rows: api._meta.docCount,\n        offset: opts.skip,\n        rows: []\n      });\n    }\n    allDocsQuery(opts, callback);\n  }\n\n  allDocs(opts, callback);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new PouchPromise(function (resolve) {\n    var blob = createBlob(['']);\n    txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n\n    txn.oncomplete = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n// before calling the next one. This works around IE/Edge race conditions in IDB.\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      immediate(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nvar cachedDBs = new _Map();\nvar blobSupportPromise;\nvar idbChanges = new Changes();\nvar openReqList = new _Map();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, idbChanges, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev;\n      if(!opts.rev) {\n        rev = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n\n    if (idb === null || !cachedDBs.has(dbName)) {\n      var error = new Error('db isn\\'t open');\n      error.id = 'idbNull';\n      return callback(error);\n    }\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var cursor = txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev');\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n      // count within the same txn for consistency\n      docCount = api._meta.docCount;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, api, idb, callback);\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = dbName + ':' + uuid();\n      idbChanges.addListener(dbName, id, api, opts);\n      idbChanges.notify(dbName);\n      return {\n        cancel: function () {\n          idbChanges.removeListener(dbName, id);\n        }\n      };\n    }\n\n    var docIds = opts.doc_ids && new _Set(opts.doc_ids);\n\n    opts.since = opts.since || 0;\n    var lastSeq = opts.since;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n\n    var results = [];\n    var numResults = 0;\n    var filter = filterChange(opts);\n    var docIdsToMetadata = new _Map();\n\n    var txn;\n    var bySeqStore;\n    var docStore;\n    var docIdRevIndex;\n\n    function onGetCursor(cursor) {\n\n      var doc = decodeDoc(cursor.value);\n      var seq = cursor.key;\n\n      if (docIds && !docIds.has(doc._id)) {\n        return cursor.continue();\n      }\n\n      var metadata;\n\n      function onGetMetadata() {\n        if (metadata.seq !== seq) {\n          // some other seq is later\n          return cursor.continue();\n        }\n\n        lastSeq = seq;\n\n        if (metadata.winningRev === doc._rev) {\n          return onGetWinningDoc(doc);\n        }\n\n        fetchWinningDoc();\n      }\n\n      function fetchWinningDoc() {\n        var docIdRev = doc._id + '::' + metadata.winningRev;\n        var req = docIdRevIndex.get(docIdRev);\n        req.onsuccess = function (e) {\n          onGetWinningDoc(decodeDoc(e.target.result));\n        };\n      }\n\n      function onGetWinningDoc(winningDoc) {\n\n        var change = opts.processChange(winningDoc, metadata, opts);\n        change.seq = metadata.seq;\n\n        var filtered = filter(change);\n        if (typeof filtered === 'object') {\n          return opts.complete(filtered);\n        }\n\n        if (filtered) {\n          numResults++;\n          if (returnDocs) {\n            results.push(change);\n          }\n          // process the attachment immediately\n          // for the benefit of live listeners\n          if (opts.attachments && opts.include_docs) {\n            fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n              postProcessAttachments([change], opts.binary).then(function () {\n                opts.onChange(change);\n              });\n            });\n          } else {\n            opts.onChange(change);\n          }\n        }\n        if (numResults !== limit) {\n          cursor.continue();\n        }\n      }\n\n      metadata = docIdsToMetadata.get(doc._id);\n      if (metadata) { // cached\n        return onGetMetadata();\n      }\n      // metadata not cached, have to go fetch it\n      docStore.get(doc._id).onsuccess = function (event) {\n        metadata = decodeMetadata(event.target.result);\n        docIdsToMetadata.set(doc._id, metadata);\n        onGetMetadata();\n      };\n    }\n\n    function onsuccess(event) {\n      var cursor = event.target.result;\n\n      if (!cursor) {\n        return;\n      }\n      onGetCursor(cursor);\n    }\n\n    function fetchChanges() {\n      var objectStores = [DOC_STORE, BY_SEQ_STORE];\n      if (opts.attachments) {\n        objectStores.push(ATTACH_STORE);\n      }\n      var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n      if (txnResult.error) {\n        return opts.complete(txnResult.error);\n      }\n      txn = txnResult.txn;\n      txn.onabort = idbError(opts.complete);\n      txn.oncomplete = onTxnComplete;\n\n      bySeqStore = txn.objectStore(BY_SEQ_STORE);\n      docStore = txn.objectStore(DOC_STORE);\n      docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n      var req;\n\n      if (opts.descending) {\n        req = bySeqStore.openCursor(null, 'prev');\n      } else {\n        req = bySeqStore.openCursor(IDBKeyRange.lowerBound(opts.since, true));\n      }\n\n      req.onsuccess = onsuccess;\n    }\n\n    fetchChanges();\n\n    function onTxnComplete() {\n\n      function finish() {\n        opts.complete(null, {\n          results: results,\n          last_seq: lastSeq\n        });\n      }\n\n      if (!opts.continuous && opts.attachments) {\n        // cannot guarantee that postProcessing was already done,\n        // so do it again\n        postProcessAttachments(results).then(finish);\n      } else {\n        finish();\n      }\n    }\n  };\n\n  api._close = function (callback) {\n    if (idb === null) {\n      return callback(createError(NOT_OPEN));\n    }\n\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    idb = null;\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev = pos + '-' + revHash;\n        if (revs.indexOf(rev) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    idbChanges.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return immediate(function () {\n      callback(null, api);\n    });\n  }\n\n  var req;\n  if (opts.storage) {\n    req = tryStorageOption(dbName, opts.storage);\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var req = txn.objectStore(META_STORE).get(META_STORE);\n\n    var blobSupport = null;\n    var docCount = null;\n    var instanceId = null;\n\n    req.onsuccess = function (e) {\n\n      var checkSetupComplete = function () {\n        if (blobSupport === null || docCount === null ||\n            instanceId === null) {\n          return;\n        } else {\n          api._meta = {\n            name: dbName,\n            instanceId: instanceId,\n            blobSupport: blobSupport,\n            docCount: docCount\n          };\n\n          cachedDBs.set(dbName, {\n            idb: idb,\n            global: api._meta\n          });\n          callback(null, api);\n        }\n      };\n\n      //\n      // fetch/store the id\n      //\n\n      var meta = e.target.result || {id: META_STORE};\n      if (dbName  + '_id' in meta) {\n        instanceId = meta[dbName + '_id'];\n        checkSetupComplete();\n      } else {\n        instanceId = uuid();\n        meta[dbName + '_id'] = instanceId;\n        txn.objectStore(META_STORE).put(meta).onsuccess = function () {\n          checkSetupComplete();\n        };\n      }\n\n      //\n      // check blob support\n      //\n\n      if (!blobSupportPromise) {\n        // make sure blob support is only checked once\n        blobSupportPromise = checkBlobSupport(txn);\n      }\n\n      blobSupportPromise.then(function (val) {\n        blobSupport = val;\n        checkSetupComplete();\n      });\n\n      //\n      // count docs\n      //\n\n      var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n      index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n        docCount = e.target.result;\n        checkSetupComplete();\n      };\n\n    };\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // some outdated implementations of IDB that appear on Samsung\n  // and HTC Android devices <4.4 are missing IDBKeyRange\n  return !isSafari && typeof indexedDB !== 'undefined' &&\n    typeof IDBKeyRange !== 'undefined';\n};\n\nfunction tryStorageOption(dbName, storage) {\n  try { // option only available in Firefox 26+\n    return indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: storage\n    });\n  } catch(err) {\n      return indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n}\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nvar DOC_STORE$1 = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE$1 = quote('by-sequence');\n// Where we store attachments\nvar ATTACH_STORE$1 = quote('attach-store');\nvar LOCAL_STORE$1 = quote('local-store');\nvar META_STORE$1 = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs$1(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new _Set();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    guardedConsole('error', 'WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^\\(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(createError(WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = typeof navigator !== 'undefined' &&\n    /Android/.test(navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new _Map();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    websqlChanges.notify(api._name);\n    api._docCount = -1; // invalidate\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function dataWritten(tx, seq) {\n      var id = docInfo.metadata.id;\n\n      var revsToCompact = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n      }\n      if (revsToCompact.length) {\n        compactRevs$1(revsToCompact, id, tx);\n      }\n\n      docInfo.metadata.seq = seq;\n      var rev = docInfo.metadata.rev;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE$1 +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE$1 +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = safeJsonStringify(docInfo.metadata);\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: rev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n                results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, websqlError(callback), complete);\n  });\n}\n\nvar cachedDatabases = new _Map();\n\n// openDatabase passed in through opts (e.g. for node-websql)\nfunction openDatabaseWithOpts(opts) {\n  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n}\n\nfunction openDBSafely(opts) {\n  try {\n    return {\n      db: openDatabaseWithOpts(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction openDB$1(opts) {\n  var cachedResult = cachedDatabases.get(opts.name);\n  if (!cachedResult) {\n    cachedResult = openDBSafely(opts);\n    cachedDatabases.set(opts.name, cachedResult);\n  }\n  return cachedResult;\n}\n\nvar websqlChanges = new Changes();\n\nfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n      doc._attachments[att] = extend$1(\n        pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE$1 + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE$1 + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE$1 + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n  BY_SEQ_STORE$1 + '.json AS data, ' +\n  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n  DOC_STORE$1 + '.json AS metadata';\n\nfunction WebSqlPouch$1(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._docCount = -1; // cache sqlite count(*) for performance\n  api._name = opts.name;\n\n  // extend the options here, because sqlite plugin has a ton of options\n  // and they are constantly changing, so it's more prudent to allow anything\n  var websqlOpts = extend$1({}, opts, {\n    version: POUCH_VERSION,\n    description: opts.name,\n    size: size\n  });\n  var openDBResult = openDB$1(websqlOpts);\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE$1 + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n        BY_SEQ_STORE$1 + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n        DOC_STORE$1 + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n            [DOC_STORE$1, BY_SEQ_STORE$1],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE$1 + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE$1 + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = uuid();\n            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION$1;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n            ADAPTER_VERSION$1);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  setup();\n\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    db.readTransaction(function (tx) {\n      countDocs(tx, function (docCount) {\n        var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n        tx.executeSql(sql, [], function (tx, res) {\n          var updateSeq = res.rows.item(0).seq || 0;\n          callback(null, {\n            doc_count: docCount,\n            update_seq: updateSeq,\n            websql_encoding: encoding\n          });\n        });\n      });\n    }, websqlError(callback));\n  };\n\n  api._bulkDocs = function (req, reqOpts, callback) {\n    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n  };\n\n  function latest$$(tx, id, rev, callback, finish) {\n    var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n    var sqlArgs = [id];\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var err = createError(MISSING_DOC, 'missing');\n        return finish(err);\n      }\n      var item = results.rows.item(0);\n      var metadata = safeJsonParse(item.metadata);\n      callback(latest(rev, metadata));\n    });\n  }\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, extend$1({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish(err) {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n\n    if(!opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n      sqlArgs = [id];\n    } else if (opts.latest) {\n      latest$$(tx, id, opts.rev, function (latestRev) {\n        opts.latest = false;\n        opts.rev = latestRev;\n        api._get(id, opts, callback);\n      }, finish);\n      return;\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    }\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var missingErr = createError(MISSING_DOC, 'missing');\n        return finish(missingErr);\n      }\n      var item = results.rows.item(0);\n      metadata = safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        var deletedErr = createError(MISSING_DOC, 'deleted');\n        return finish(deletedErr);\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  function countDocs(tx, callback) {\n\n    if (api._docCount !== -1) {\n      return callback(api._docCount);\n    }\n\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n      [DOC_STORE$1, BY_SEQ_STORE$1],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE$1 + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      api._docCount = result.rows.item(0).num;\n      callback(api._docCount);\n    });\n  }\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n\n    var sqlArgs = [];\n    var criteria = [];\n\n    if (key !== false) {\n      criteria.push(DOC_STORE$1 + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE$1 + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (opts.deleted !== 'ok') {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n\n      // first count up the total rows\n      countDocs(tx, function (count) {\n        totalRows = count;\n\n        if (limit === 0) {\n          return;\n        }\n\n        // then actually fetch the documents\n        var sql = select(\n          SELECT_DOCS,\n          [DOC_STORE$1, BY_SEQ_STORE$1],\n          DOC_STORE_AND_BY_SEQ_JOINER,\n          criteria,\n          DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n          );\n        sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            var id = metadata.id;\n            var data = unstringifyDoc(item.data, id, item.rev);\n            var winningRev = data._rev;\n            var doc = {\n              id: id,\n              key: id,\n              value: {rev: winningRev}\n            };\n            if (opts.include_docs) {\n              doc.doc = data;\n              doc.doc._rev = winningRev;\n              if (opts.conflicts) {\n                var conflicts = collectConflicts(metadata);\n                if (conflicts.length) {\n                  doc.doc._conflicts = conflicts;\n                }\n              }\n              fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n            }\n            if (item.deleted) {\n              if (opts.deleted === 'ok') {\n                doc.value.deleted = true;\n                doc.doc = null;\n              } else {\n                continue;\n              }\n            }\n            results.push(doc);\n          }\n        });\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      });\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + uuid();\n      websqlChanges.addListener(api._name, id, api, opts);\n      websqlChanges.notify(api._name);\n      return {\n        cancel: function () {\n          websqlChanges.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE$1 + '.json AS metadata, ' +\n        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\n      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\n      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBluffer(data, type);\n      } else {\n        res = btoa$1(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(createError(MISSING_DOC));\n        } else {\n          var data = safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev = pos + '-' + revHash;\n          if (revs.indexOf(rev) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs$1(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(createError(MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(createError(REV_CONFLICT));\n        }\n      }, function () {\n        callback(createError(REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(createError(MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    websqlChanges.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nfunction canOpenTestDB() {\n  try {\n    openDatabase('_pouch_validate_websql', 1, '', 1);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n// https://github.com/pouchdb/pouchdb/issues/5079)\n// This has been fixed in latest WebKit, so we try to detect it here.\nfunction isValidWebSQL() {\n  // WKWebView UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n  // Chrome for iOS UA:\n  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n  //   Mobile/9B206 Safari/7534.48.3\n  // Firefox for iOS UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\n  // indexedDB is null on some UIWebViews and undefined in others\n  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n    // definitely not WKWebView, avoid creating an unnecessary database\n    return true;\n  }\n  // Cache the result in LocalStorage. Reason we do this is because if we\n  // call openDatabase() too many times, Safari craps out in SauceLabs and\n  // starts throwing DOM Exception 14s.\n  var hasLS = hasLocalStorage();\n  // Include user agent in the hash, so that if Safari is upgraded, we don't\n  // continually think it's broken.\n  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n  if (hasLS && localStorage[localStorageKey]) {\n    return localStorage[localStorageKey] === '1';\n  }\n  var openedTestDB = canOpenTestDB();\n  if (hasLS) {\n    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n  }\n  return openedTestDB;\n}\n\nfunction valid() {\n  if (typeof openDatabase !== 'function') {\n    return false;\n  }\n  return isValidWebSQL();\n}\n\nfunction openDB(name, version, description, size) {\n  // Traditional WebSQL API\n  return openDatabase(name, version, description, size);\n}\n\nfunction WebSQLPouch(opts, callback) {\n  var _opts = extend$1({\n    websql: openDB\n  }, opts);\n\n  WebSqlPouch$1.call(this, _opts, callback);\n}\n\nWebSQLPouch.valid = valid;\n\nWebSQLPouch.use_prefix = true;\n\nfunction WebSqlPouch (PouchDB) {\n  PouchDB.adapter('websql', WebSQLPouch, true);\n}\n\n/* global fetch */\n/* global Headers */\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new PouchPromise(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  PouchPromise.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function (response) {\n    wrappedPromise.resolve(response);\n  }).catch(function (error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body &&\n      options.processData &&\n      typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function (key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function () {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function (fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function (result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      result.status = response.statusCode;\n      callback(result);\n    }\n  }).catch(function (error) {\n    if (!error) {\n      // this happens when the listener is canceled\n      error = new Error('canceled');\n    }\n    callback(error);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer;\n  var timedout = false;\n\n  var abortReq = function () {\n    xhr.abort();\n    cleanUp();\n  };\n\n  var timeoutReq = function () {\n    timedout = true;\n    xhr.abort();\n    cleanUp();\n  };\n\n  var ret = {abort: abortReq};\n\n  var cleanUp = function () {\n    clearTimeout(timer);\n    ret.abort = function () {};\n    if (xhr) {\n      xhr.onprogress = undefined;\n      if (xhr.upload) {\n        xhr.upload.onprogress = undefined;\n      }\n      xhr.onreadystatechange = undefined;\n      xhr = undefined;\n    }\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  try {\n    xhr.open(options.method, options.url);\n  } catch (exception) {\n    return callback(new Error(exception.name || 'Url is invalid'));\n  }\n\n  xhr.withCredentials = ('withCredentials' in options) ?\n    options.withCredentials : true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(timeoutReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      if(xhr.readyState !== 4) {\n        timer = setTimeout(timeoutReq, options.timeout);\n      }\n    };\n    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      if (timedout) {\n        err = new Error('ETIMEDOUT');\n        err.code = 'ETIMEDOUT';\n      } else if (typeof xhr.response === 'string') {\n        try {\n          err = JSON.parse(xhr.response);\n        } catch(e) {}\n      }\n      err.status = xhr.status;\n      callback(err);\n    }\n    cleanUp();\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return ret;\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nfunction ajax$1(options, callback) {\n  if (!false && (hasXhr || options.xhr)) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n}\n\n// the blob already has a type; do nothing\nvar res$2 = function () {};\n\nfunction defaultBody() {\n  return '';\n}\n\nfunction ajaxCore(options, callback) {\n\n  options = clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = extend$1(defaultOptions, options);\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && options.json && typeof obj === 'string') {\n      /* istanbul ignore next */\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      res$2(obj, resp);\n    }\n    cb(null, obj, resp);\n  }\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return ajax$1(options, function (err, response, body) {\n\n    if (err) {\n      return callback(generateErrorFromResponse(err));\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nfunction ajax(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  var ua = (navigator && navigator.userAgent) ?\n    navigator.userAgent.toLowerCase() : '';\n\n  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n  var isIE = ua.indexOf('msie') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n\n  // it appears the new version of safari also caches GETs,\n  // see https://github.com/pouchdb/pouchdb/issues/5010\n  var shouldCacheBust = (isSafari ||\n    ((isIE || isEdge) && opts.method === 'GET'));\n\n  var cache = 'cache' in opts ? opts.cache : true;\n\n  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\n  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajaxCore(opts, callback);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\nfunction pool(promiseFactories, limit) {\n  return new PouchPromise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\n\nvar supportsBulkGetMap = {};\n\nvar log$1 = debug('pouchdb:http');\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var atts = row.doc && row.doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return PouchPromise.resolve();\n  }\n\n  return PouchPromise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new PouchPromise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    name = opts.prefix + encodeURIComponent(dbName);\n  }\n\n  // Prase the URI into all its little bits\n  var uri = parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var str = nAuth.username + ':' + nAuth.password;\n    var token = btoa$1(unescape(encodeURIComponent(str)));\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  // Not strictly necessary, but we do this because numerous tests\n  // rely on swapping ajax in and out.\n  api._ajax = ajax;\n\n  function ajax$$(userOpts, options, callback) {\n    var reqAjax = userOpts.ajax || {};\n    var reqOpts = extend$1(clone(ajaxOpts), reqAjax, options);\n    log$1(reqOpts.method + ' ' + reqOpts.url);\n    return api._ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new PouchPromise(function (resolve, reject) {\n      ajax$$(userOpts, opts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun$$(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return PouchPromise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n      } else {\n        return PouchPromise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return PouchPromise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  immediate(function () {\n    callback(null, api);\n  });\n\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$('id', function (callback) {\n    ajax$$({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid);\n    });\n  });\n\n  api.request = adapterFun$$('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax$$({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax$$(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      ajax$$(opts, {\n        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, cb);\n    }\n\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'latest']);\n        subOpts.ajax = ajaxOpts;\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        /* istanbul ignore else */\n        if (err) {\n          var status = Math.floor(err.status / 100);\n          /* istanbul ignore else */\n          if (status === 4 || status === 5) { // 40x or 50x\n            supportsBulkGetMap[dbUrl] = false;\n            explainError(\n              err.status,\n              'PouchDB is just detecting if the remote ' +\n              'supports the _bulk_get API.'\n            );\n            doBulkGetShim();\n          } else {\n            callback(err);\n          }\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      /* istanbul ignore next */\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      ajax$$({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + paramsToStr(params))\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetch(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob) {\n          if (opts.binary) {\n            return blob;\n          }\n          return new PouchPromise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetch(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return PouchPromise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return PouchPromise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(callback);\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax$$(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun$$('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax$$(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun$$('removeAttachment', function (docId, attachmentId, rev,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n\n    ajax$$({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun$$('putAttachment', function (docId, attachmentId, rev, blob,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev;\n      rev = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev) {\n      url += '?rev=' + rev;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = atob$1(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax$$({}, opts, callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return PouchPromise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      ajax$$(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        timeout: opts.timeout,\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      // Update/create the document\n      ajax$$(opts, {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)),\n        body: doc\n      }, function (err, result) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, result);\n      });\n    }).catch(callback);\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + paramStr),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n    opts.timeout = ('timeout' in opts) ? opts.timeout :\n      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n      30 * 1000;\n\n    // We give a 5 second buffer for CouchDB changes to respond with\n    // an ok timeout (if a timeout it set)\n    var params = opts.timeout ? {timeout: opts.timeout - (5 * 1000)} : {};\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    } else {\n      // Default heartbeat to 10 seconds\n      params.heartbeat = 10000;\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n        timeout: opts.timeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        xhr = ajax$$(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        immediate(function () { fetch(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax$$(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    ajax$$(options, {\n      url: genDBUrl(host, ''),\n      method: 'DELETE'\n    }, function (err, resp) {\n      if (err && err.status && err.status !== 404) {\n        return callback(err);\n      }\n      callback(null, resp);\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  if (a === null) {\n    return 0;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a === b ? 0 : (a < b ? -1 : 1);\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\nfunction TaskQueue$1() {\n  this.promise = new PouchPromise(function (fulfill) {fulfill(); });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction createView(opts) {\n  var sourceDB = opts.db;\n  var viewName = opts.viewName;\n  var mapFun = opts.map;\n  var reduceFun = opts.reduce;\n  var temporary = opts.temporary;\n\n  // the \"undefined\" part is for backwards compatibility\n  var viewSignature = mapFun.toString() + (reduceFun && reduceFun.toString()) +\n    'undefined';\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/mrviews', diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log$2 = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopedEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log$2,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\nvar promisedCallback = function (promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      immediate(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      immediate(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n};\n\nvar callbackify = function (fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n};\n\n// Promise finally util similar to Q.finally\nvar fin = function (promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n};\n\nvar sequentialize = function (queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n};\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nvar uniq = function (arr) {\n  var map = {};\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    map['$' + arr[i]] = true;\n  }\n\n  var keys = Object.keys(map);\n  var output = new Array(keys.length);\n\n  for (i = 0, len = keys.length; i < len; i++) {\n    output[i] = keys[i].substring(1);\n  }\n  return output;\n};\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\nfunction tryCode$1(db, fun, args) {\n  // emit an event if there was an error thrown by a map/reduce function.\n  // putting try/catches in a single function also avoids deoptimizations.\n  try {\n    return {\n      output : fun.apply(null, args)\n    };\n  } catch (e) {\n    emitError(db, e);\n    return {error: e};\n  }\n}\n\nfunction sortByKeyThenValue(x, y) {\n  var keyCompare = collate(x.key, y.key);\n  return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n}\n\nfunction sliceResults(results, limit, skip) {\n  skip = skip || 0;\n  if (typeof limit === 'number') {\n    return results.slice(skip, limit + skip);\n  } else if (skip > 0) {\n    return results.slice(skip);\n  }\n  return results;\n}\n\nfunction rowToDocId(row) {\n  var val = row.value;\n  // Users can explicitly specify a joined doc _id, or it\n  // defaults to the doc _id that emitted the key/value.\n  var docId = (val && typeof val === 'object' && val._id) || row.id;\n  return docId;\n}\n\nfunction readAttachmentsAsBlobOrBuffer$1(res) {\n  res.rows.forEach(function (row) {\n    var atts = row.doc && row.doc._attachments;\n    if (!atts) {\n      return;\n    }\n    Object.keys(atts).forEach(function (filename) {\n      var att = atts[filename];\n      atts[filename].data = b64ToBluffer(att.data, att.content_type);\n    });\n  });\n}\n\nfunction postprocessAttachments(opts) {\n  return function (res) {\n    if (opts.include_docs && opts.attachments && opts.binary) {\n      readAttachmentsAsBlobOrBuffer$1(res);\n    }\n    return res;\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction addHttpParam(paramName, opts, params, asJson) {\n  // add an http param from opts to params, optionally json-encoded\n  var val = opts[paramName];\n  if (typeof val !== 'undefined') {\n    if (asJson) {\n      val = encodeURIComponent(JSON.stringify(val));\n    }\n    params.push(paramName + '=' + val);\n  }\n}\n\nfunction coerceInteger(integerCandidate) {\n  if (typeof integerCandidate !== 'undefined') {\n    var asNumber = Number(integerCandidate);\n    // prevents e.g. '1foo' or '1.1' being coerced to 1\n    if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n      return asNumber;\n    } else {\n      return integerCandidate;\n    }\n  }\n}\n\nfunction coerceOptions(opts) {\n  opts.group_level = coerceInteger(opts.group_level);\n  opts.limit = coerceInteger(opts.limit);\n  opts.skip = coerceInteger(opts.skip);\n  return opts;\n}\n\nfunction checkPositiveInteger(number) {\n  if (number) {\n    if (typeof number !== 'number') {\n      return  new QueryParseError('Invalid value for integer: \"' +\n      number + '\"');\n    }\n    if (number < 0) {\n      return new QueryParseError('Invalid value for positive integer: ' +\n        '\"' + number + '\"');\n    }\n  }\n}\n\nfunction checkQueryParseError(options, fun) {\n  var startkeyName = options.descending ? 'endkey' : 'startkey';\n  var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n  if (typeof options[startkeyName] !== 'undefined' &&\n    typeof options[endkeyName] !== 'undefined' &&\n    collate(options[startkeyName], options[endkeyName]) > 0) {\n    throw new QueryParseError('No rows can match your key range, ' +\n    'reverse your start_key and end_key or set {descending : true}');\n  } else if (fun.reduce && options.reduce !== false) {\n    if (options.include_docs) {\n      throw new QueryParseError('{include_docs:true} is invalid for reduce');\n    } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n      throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n      '{group: true}');\n    }\n  }\n  ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n    var error = checkPositiveInteger(options[optionName]);\n    if (error) {\n      throw error;\n    }\n  });\n}\n\nfunction httpQuery(db, fun, opts) {\n  // List of parameters to add to the PUT request\n  var params = [];\n  var body;\n  var method = 'GET';\n\n  // If opts.reduce exists and is defined, then add it to the list\n  // of parameters.\n  // If reduce=false then the results are that of only the map function\n  // not the final result of map and reduce.\n  addHttpParam('reduce', opts, params);\n  addHttpParam('include_docs', opts, params);\n  addHttpParam('attachments', opts, params);\n  addHttpParam('limit', opts, params);\n  addHttpParam('descending', opts, params);\n  addHttpParam('group', opts, params);\n  addHttpParam('group_level', opts, params);\n  addHttpParam('skip', opts, params);\n  addHttpParam('stale', opts, params);\n  addHttpParam('conflicts', opts, params);\n  addHttpParam('startkey', opts, params, true);\n  addHttpParam('start_key', opts, params, true);\n  addHttpParam('endkey', opts, params, true);\n  addHttpParam('end_key', opts, params, true);\n  addHttpParam('inclusive_end', opts, params);\n  addHttpParam('key', opts, params, true);\n\n  // Format the list of parameters into a valid URI query string\n  params = params.join('&');\n  params = params === '' ? '' : '?' + params;\n\n  // If keys are supplied, issue a POST to circumvent GET query string limits\n  // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n  if (typeof opts.keys !== 'undefined') {\n    var MAX_URL_LENGTH = 2000;\n    // according to http://stackoverflow.com/a/417184/680742,\n    // the de facto URL length limit is 2000 characters\n\n    var keysAsString =\n      'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n    if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n      // If the keys are short enough, do a GET. we do this to work around\n      // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n      params += (params[0] === '?' ? '&' : '?') + keysAsString;\n    } else {\n      method = 'POST';\n      if (typeof fun === 'string') {\n        body = {keys: opts.keys};\n      } else { // fun is {map : mapfun}, so append to this\n        fun.keys = opts.keys;\n      }\n    }\n  }\n\n  // We are referencing a query defined in the design doc\n  if (typeof fun === 'string') {\n    var parts = parseViewName(fun);\n    return db.request({\n      method: method,\n      url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // We are using a temporary view, terrible for performance, good for testing\n  body = body || {};\n  Object.keys(fun).forEach(function (key) {\n    if (Array.isArray(fun[key])) {\n      body[key] = fun[key];\n    } else {\n      body[key] = fun[key].toString();\n    }\n  });\n  return db.request({\n    method: 'POST',\n    url: '_temp_view' + params,\n    body: body\n  }).then(postprocessAttachments(opts));\n}\n\n// custom adapters can define their own api._query\n// and override the default behavior\n/* istanbul ignore next */\nfunction customQuery(db, fun, opts) {\n  return new PouchPromise(function (resolve, reject) {\n    db._query(fun, opts, function (err, res) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n}\n\n// custom adapters can define their own api._viewCleanup\n// and override the default behavior\n/* istanbul ignore next */\nfunction customViewCleanup(db) {\n  return new PouchPromise(function (resolve, reject) {\n    db._viewCleanup(function (err, res) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n}\n\nfunction defaultsTo(value) {\n  return function (reason) {\n    /* istanbul ignore else */\n    if (reason.status === 404) {\n      return value;\n    } else {\n      throw reason;\n    }\n  };\n}\n\n// returns a promise for a list of docs to update, based on the input docId.\n// the order doesn't matter, because post-3.2.0, bulkDocs\n// is an atomic operation in all three adapters.\nfunction getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n  var metaDocId = '_local/doc_' + docId;\n  var defaultMetaDoc = {_id: metaDocId, keys: []};\n  var docData = docIdsToChangesAndEmits[docId];\n  var indexableKeysToKeyValues = docData.indexableKeysToKeyValues;\n  var changes = docData.changes;\n\n  function getMetaDoc() {\n    if (isGenOne(changes)) {\n      // generation 1, so we can safely assume initial state\n      // for performance reasons (avoids unnecessary GETs)\n      return PouchPromise.resolve(defaultMetaDoc);\n    }\n    return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n  }\n\n  function getKeyValueDocs(metaDoc) {\n    if (!metaDoc.keys.length) {\n      // no keys, no need for a lookup\n      return PouchPromise.resolve({rows: []});\n    }\n    return view.db.allDocs({\n      keys: metaDoc.keys,\n      include_docs: true\n    });\n  }\n\n  function processKvDocs(metaDoc, kvDocsRes) {\n    var kvDocs = [];\n    var oldKeysMap = {};\n\n    for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n      var row = kvDocsRes.rows[i];\n      var doc = row.doc;\n      if (!doc) { // deleted\n        continue;\n      }\n      kvDocs.push(doc);\n      oldKeysMap[doc._id] = true;\n      doc._deleted = !indexableKeysToKeyValues[doc._id];\n      if (!doc._deleted) {\n        var keyValue = indexableKeysToKeyValues[doc._id];\n        if ('value' in keyValue) {\n          doc.value = keyValue.value;\n        }\n      }\n    }\n\n    var newKeys = Object.keys(indexableKeysToKeyValues);\n    newKeys.forEach(function (key) {\n      if (!oldKeysMap[key]) {\n        // new doc\n        var kvDoc = {\n          _id: key\n        };\n        var keyValue = indexableKeysToKeyValues[key];\n        if ('value' in keyValue) {\n          kvDoc.value = keyValue.value;\n        }\n        kvDocs.push(kvDoc);\n      }\n    });\n    metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n    kvDocs.push(metaDoc);\n\n    return kvDocs;\n  }\n\n  return getMetaDoc().then(function (metaDoc) {\n    return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n      return processKvDocs(metaDoc, kvDocsRes);\n    });\n  });\n}\n\n// updates all emitted key/value docs and metaDocs in the mrview database\n// for the given batch of documents from the source database\nfunction saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n  var seqDocId = '_local/lastSeq';\n  return view.db.get(seqDocId)\n  .catch(defaultsTo({_id: seqDocId, seq: 0}))\n  .then(function (lastSeqDoc) {\n    var docIds = Object.keys(docIdsToChangesAndEmits);\n    return PouchPromise.all(docIds.map(function (docId) {\n      return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n    })).then(function (listOfDocsToPersist) {\n      var docsToPersist = flatten(listOfDocsToPersist);\n      lastSeqDoc.seq = seq;\n      docsToPersist.push(lastSeqDoc);\n      // write all docs in a single operation, update the seq once\n      return view.db.bulkDocs({docs : docsToPersist});\n    });\n  });\n}\n\nfunction getQueue(view) {\n  var viewName = typeof view === 'string' ? view : view.name;\n  var queue = persistentQueues[viewName];\n  if (!queue) {\n    queue = persistentQueues[viewName] = new TaskQueue$1();\n  }\n  return queue;\n}\n\nfunction updateView(view) {\n  return sequentialize(getQueue(view), function () {\n    return updateViewInQueue(view);\n  })();\n}\n\nfunction updateViewInQueue(view) {\n  // bind the emit function once\n  var mapResults;\n  var doc;\n\n  function emit(key, value) {\n    var output = {id: doc._id, key: normalizeKey(key)};\n    // Don't explicitly store the value unless it's defined and non-null.\n    // This saves on storage space, because often people don't use it.\n    if (typeof value !== 'undefined' && value !== null) {\n      output.value = normalizeKey(value);\n    }\n    mapResults.push(output);\n  }\n\n  var mapFun;\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof view.mapFun === \"function\" && view.mapFun.length === 2) {\n    var origMap = view.mapFun;\n    mapFun = function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    mapFun = evalFunctionWithEval(view.mapFun.toString(), emit);\n  }\n\n  var currentSeq = view.seq || 0;\n\n  function processChange(docIdsToChangesAndEmits, seq) {\n    return function () {\n      return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n    };\n  }\n\n  var queue = new TaskQueue$1();\n  // TODO(neojski): https://github.com/daleharvey/pouchdb/issues/1521\n\n  return new PouchPromise(function (resolve, reject) {\n\n    function complete() {\n      queue.finish().then(function () {\n        view.seq = currentSeq;\n        resolve();\n      });\n    }\n\n    function processNextBatch() {\n      view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).on('complete', function (response) {\n        var results = response.results;\n        if (!results.length) {\n          return complete();\n        }\n        var docIdsToChangesAndEmits = {};\n        for (var i = 0, l = results.length; i < l; i++) {\n          var change = results[i];\n          if (change.doc._id[0] !== '_') {\n            mapResults = [];\n            doc = change.doc;\n\n            if (!doc._deleted) {\n              tryCode$1(view.sourceDB, mapFun, [doc]);\n            }\n            mapResults.sort(sortByKeyThenValue);\n\n            var indexableKeysToKeyValues = {};\n            var lastKey;\n            for (var j = 0, jl = mapResults.length; j < jl; j++) {\n              var obj = mapResults[j];\n              var complexKey = [obj.key, obj.id];\n              if (collate(obj.key, lastKey) === 0) {\n                complexKey.push(j); // dup key+id, so make it unique\n              }\n              var indexableKey = toIndexableString(complexKey);\n              indexableKeysToKeyValues[indexableKey] = obj;\n              lastKey = obj.key;\n            }\n            docIdsToChangesAndEmits[change.doc._id] = {\n              indexableKeysToKeyValues: indexableKeysToKeyValues,\n              changes: change.changes\n            };\n          }\n          currentSeq = change.seq;\n        }\n        queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n        if (results.length < CHANGES_BATCH_SIZE$1) {\n          return complete();\n        }\n        return processNextBatch();\n      }).on('error', onError);\n      /* istanbul ignore next */\n      function onError(err) {\n        reject(err);\n      }\n    }\n\n    processNextBatch();\n  });\n}\n\nfunction reduceView(view, results, options) {\n  if (options.group_level === 0) {\n    delete options.group_level;\n  }\n\n  var shouldGroup = options.group || options.group_level;\n\n  var reduceFun;\n  if (builtInReduce[view.reduceFun]) {\n    reduceFun = builtInReduce[view.reduceFun];\n  } else {\n    reduceFun = evalFunctionWithEval(view.reduceFun.toString());\n  }\n\n  var groups = [];\n  var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n    options.group_level;\n  results.forEach(function (e) {\n    var last = groups[groups.length - 1];\n    var groupKey = shouldGroup ? e.key : null;\n\n    // only set group_level for array keys\n    if (shouldGroup && Array.isArray(groupKey)) {\n      groupKey = groupKey.slice(0, lvl);\n    }\n\n    if (last && collate(last.groupKey, groupKey) === 0) {\n      last.keys.push([e.key, e.id]);\n      last.values.push(e.value);\n      return;\n    }\n    groups.push({\n      keys: [[e.key, e.id]],\n      values: [e.value],\n      groupKey: groupKey\n    });\n  });\n  results = [];\n  for (var i = 0, len = groups.length; i < len; i++) {\n    var e = groups[i];\n    var reduceTry = tryCode$1(view.sourceDB, reduceFun,\n      [e.keys, e.values, false]);\n    if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n      // CouchDB returns an error if a built-in errors out\n      throw reduceTry.error;\n    }\n    results.push({\n      // CouchDB just sets the value to null if a non-built-in errors out\n      value: reduceTry.error ? null : reduceTry.output,\n      key: e.groupKey\n    });\n  }\n  // no total_rows/offset when reducing\n  return {rows: sliceResults(results, options.limit, options.skip)};\n}\n\nfunction queryView(view, opts) {\n  return sequentialize(getQueue(view), function () {\n    return queryViewInQueue(view, opts);\n  })();\n}\n\nfunction queryViewInQueue(view, opts) {\n  var totalRows;\n  var shouldReduce = view.reduceFun && opts.reduce !== false;\n  var skip = opts.skip || 0;\n  if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n    // equivalent query\n    opts.limit = 0;\n    delete opts.keys;\n  }\n\n  function fetchFromView(viewOpts) {\n    viewOpts.include_docs = true;\n    return view.db.allDocs(viewOpts).then(function (res) {\n      totalRows = res.total_rows;\n      return res.rows.map(function (result) {\n\n        // implicit migration - in older versions of PouchDB,\n        // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n        // this is tested in a migration test\n        /* istanbul ignore next */\n        if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n          var keys = Object.keys(result.doc.value).sort();\n          // this detection method is not perfect, but it's unlikely the user\n          // emitted a value which was an object with these 3 exact keys\n          var expectedKeys = ['id', 'key', 'value'];\n          if (!(keys < expectedKeys || keys > expectedKeys)) {\n            return result.doc.value;\n          }\n        }\n\n        var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n        return {\n          key: parsedKeyAndDocId[0],\n          id: parsedKeyAndDocId[1],\n          value: ('value' in result.doc ? result.doc.value : null)\n        };\n      });\n    });\n  }\n\n  function onMapResultsReady(rows) {\n    var finalResults;\n    if (shouldReduce) {\n      finalResults = reduceView(view, rows, opts);\n    } else {\n      finalResults = {\n        total_rows: totalRows,\n        offset: skip,\n        rows: rows\n      };\n    }\n    if (opts.include_docs) {\n      var docIds = uniq(rows.map(rowToDocId));\n\n      return view.sourceDB.allDocs({\n        keys: docIds,\n        include_docs: true,\n        conflicts: opts.conflicts,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }).then(function (allDocsRes) {\n        var docIdsToDocs = {};\n        allDocsRes.rows.forEach(function (row) {\n          if (row.doc) {\n            docIdsToDocs['$' + row.id] = row.doc;\n          }\n        });\n        rows.forEach(function (row) {\n          var docId = rowToDocId(row);\n          var doc = docIdsToDocs['$' + docId];\n          if (doc) {\n            row.doc = doc;\n          }\n        });\n        return finalResults;\n      });\n    } else {\n      return finalResults;\n    }\n  }\n\n  if (typeof opts.keys !== 'undefined') {\n    var keys = opts.keys;\n    var fetchPromises = keys.map(function (key) {\n      var viewOpts = {\n        startkey : toIndexableString([key]),\n        endkey   : toIndexableString([key, {}])\n      };\n      return fetchFromView(viewOpts);\n    });\n    return PouchPromise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n  } else { // normal query, no 'keys'\n    var viewOpts = {\n      descending : opts.descending\n    };\n    if (opts.start_key) {\n        opts.startkey = opts.start_key;\n    }\n    if (opts.end_key) {\n        opts.endkey = opts.end_key;\n    }\n    if (typeof opts.startkey !== 'undefined') {\n      viewOpts.startkey = opts.descending ?\n        toIndexableString([opts.startkey, {}]) :\n        toIndexableString([opts.startkey]);\n    }\n    if (typeof opts.endkey !== 'undefined') {\n      var inclusiveEnd = opts.inclusive_end !== false;\n      if (opts.descending) {\n        inclusiveEnd = !inclusiveEnd;\n      }\n\n      viewOpts.endkey = toIndexableString(\n        inclusiveEnd ? [opts.endkey, {}] : [opts.endkey]);\n    }\n    if (typeof opts.key !== 'undefined') {\n      var keyStart = toIndexableString([opts.key]);\n      var keyEnd = toIndexableString([opts.key, {}]);\n      if (viewOpts.descending) {\n        viewOpts.endkey = keyStart;\n        viewOpts.startkey = keyEnd;\n      } else {\n        viewOpts.startkey = keyStart;\n        viewOpts.endkey = keyEnd;\n      }\n    }\n    if (!shouldReduce) {\n      if (typeof opts.limit === 'number') {\n        viewOpts.limit = opts.limit;\n      }\n      viewOpts.skip = skip;\n    }\n    return fetchFromView(viewOpts).then(onMapResultsReady);\n  }\n}\n\nfunction httpViewCleanup(db) {\n  return db.request({\n    method: 'POST',\n    url: '_view_cleanup'\n  });\n}\n\nfunction localViewCleanup(db) {\n  return db.get('_local/mrviews').then(function (metaDoc) {\n    var docsToViews = {};\n    Object.keys(metaDoc.views).forEach(function (fullViewName) {\n      var parts = parseViewName(fullViewName);\n      var designDocName = '_design/' + parts[0];\n      var viewName = parts[1];\n      docsToViews[designDocName] = docsToViews[designDocName] || {};\n      docsToViews[designDocName][viewName] = true;\n    });\n    var opts = {\n      keys : Object.keys(docsToViews),\n      include_docs : true\n    };\n    return db.allDocs(opts).then(function (res) {\n      var viewsToStatus = {};\n      res.rows.forEach(function (row) {\n        var ddocName = row.key.substring(8);\n        Object.keys(docsToViews[row.key]).forEach(function (viewName) {\n          var fullViewName = ddocName + '/' + viewName;\n          /* istanbul ignore if */\n          if (!metaDoc.views[fullViewName]) {\n            // new format, without slashes, to support PouchDB 2.2.0\n            // migration test in pouchdb's browser.migration.js verifies this\n            fullViewName = viewName;\n          }\n          var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n          // design doc deleted, or view function nonexistent\n          var statusIsGood = row.doc && row.doc.views &&\n            row.doc.views[viewName];\n          viewDBNames.forEach(function (viewDBName) {\n            viewsToStatus[viewDBName] =\n              viewsToStatus[viewDBName] || statusIsGood;\n          });\n        });\n      });\n      var dbsToDelete = Object.keys(viewsToStatus).filter(\n        function (viewDBName) { return !viewsToStatus[viewDBName]; });\n      var destroyPromises = dbsToDelete.map(function (viewDBName) {\n        return sequentialize(getQueue(viewDBName), function () {\n          return new db.constructor(viewDBName, db.__opts).destroy();\n        })();\n      });\n      return PouchPromise.all(destroyPromises).then(function () {\n        return {ok: true};\n      });\n    });\n  }, defaultsTo({ok: true}));\n}\n\nvar viewCleanup = callbackify(function () {\n  var db = this;\n  if (db.type() === 'http') {\n    return httpViewCleanup(db);\n  }\n  /* istanbul ignore next */\n  if (typeof db._viewCleanup === 'function') {\n    return customViewCleanup(db);\n  }\n  return localViewCleanup(db);\n});\n\nfunction queryPromised(db, fun, opts) {\n  if (db.type() === 'http') {\n    return httpQuery(db, fun, opts);\n  }\n\n  /* istanbul ignore next */\n  if (typeof db._query === 'function') {\n    return customQuery(db, fun, opts);\n  }\n\n  if (typeof fun !== 'string') {\n    // temp_view\n    checkQueryParseError(opts, fun);\n\n    var createViewOpts = {\n      db : db,\n      viewName : 'temp_view/temp_view',\n      map : fun.map,\n      reduce : fun.reduce,\n      temporary : true\n    };\n    tempViewQueue.add(function () {\n      return createView(createViewOpts).then(function (view) {\n        function cleanup() {\n          return view.db.destroy();\n        }\n        return fin(updateView(view).then(function () {\n          return queryView(view, opts);\n        }), cleanup);\n      });\n    });\n    return tempViewQueue.finish();\n  } else {\n    // persistent view\n    var fullViewName = fun;\n    var parts = parseViewName(fullViewName);\n    var designDocName = parts[0];\n    var viewName = parts[1];\n    return db.get('_design/' + designDocName).then(function (doc) {\n      var fun = doc.views && doc.views[viewName];\n\n      if (!fun || typeof fun.map !== 'string') {\n        throw new NotFoundError('ddoc ' + designDocName +\n        ' has no view named ' + viewName);\n      }\n      checkQueryParseError(opts, fun);\n\n      var createViewOpts = {\n        db : db,\n        viewName : fullViewName,\n        map : fun.map,\n        reduce : fun.reduce\n      };\n      return createView(createViewOpts).then(function (view) {\n        if (opts.stale === 'ok' || opts.stale === 'update_after') {\n          if (opts.stale === 'update_after') {\n            immediate(function () {\n              updateView(view);\n            });\n          }\n          return queryView(view, opts);\n        } else { // stale not ok\n          return updateView(view).then(function () {\n            return queryView(view, opts);\n          });\n        }\n      });\n    });\n  }\n}\n\nvar query = function (fun, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts ? coerceOptions(opts) : {};\n\n  if (typeof fun === 'function') {\n    fun = {map : fun};\n  }\n\n  var db = this;\n  var promise = PouchPromise.resolve().then(function () {\n    return queryPromised(db, fun, opts);\n  });\n  promisedCallback(promise, callback);\n  return promise;\n};\n\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev) {\n  return /^1-/.test(rev);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return PouchPromise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = src.type() === 'http' && target.type() !== 'http';\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return PouchPromise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return PouchPromise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return PouchPromise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc).then(function (attachments) {\n            var filenames = Object.keys(remoteDoc._attachments);\n            attachments.forEach(function (attachment, i) {\n              var att = remoteDoc._attachments[filenames[i]];\n              delete att.stub;\n              delete att.length;\n              att.data = attachment;\n            });\n\n            return remoteDoc;\n          });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return PouchPromise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.type() === 'http') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  return updateCheckpoint(this.target, this.id, checkpoint,\n    session, this.returnValue);\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  var self = this;\n  if (this.readOnlySource) {\n    return PouchPromise.resolve(true);\n  }\n  return updateCheckpoint(this.src, this.id, checkpoint,\n    session, this.returnValue)\n    .catch(function (err) {\n      if (isForbiddenError(err)) {\n        self.readOnlySource = true;\n        return true;\n      }\n      throw err;\n    });\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.readOnlySource) {\n      return PouchPromise.resolve(targetDoc.last_seq);\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.readOnlySource = true;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return PouchPromise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds;\n    return new PouchPromise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate$1(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return PouchPromise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n      checkpointer = new Checkpointer(src, target, repId, returnValue);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      fatalError.result = result;\n\n      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate$1(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0 && changesOpts.live);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, events.EventEmitter);\nfunction Replication() {\n  events.EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new PouchPromise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicate(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate$1(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, events.EventEmitter);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? extend$1({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? extend$1({}, opts, opts.pull) : opts;\n\n  this.push = replicate(src, target, optsPush);\n  this.pull = replicate(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = PouchPromise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicate;\n  PouchDB.sync = sync;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      return {\n        from: function (other, opts, callback) {\n          return self.constructor.replicate(other, self, opts, callback);\n        },\n        to: function (other, opts, callback) {\n          return self.constructor.replicate(self, other, opts, callback);\n        }\n      };\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(WebSqlPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\n// Pull from src because pouchdb-node/pouchdb-browser themselves\n// are aggressively optimized and jsnext:main would normally give us this\n// aggressive bundle.\n\nmodule.exports = PouchDB;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb/lib/index-browser.js\n// module id = 33\n// module chunks = 2","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 34\n// module chunks = 2","// Generated by CoffeeScript 1.9.2\n(function() {\n  var hasProp = {}.hasOwnProperty,\n    slice = [].slice;\n\n  module.exports = function(source, scope) {\n    var key, keys, value, values;\n    keys = [];\n    values = [];\n    for (key in scope) {\n      if (!hasProp.call(scope, key)) continue;\n      value = scope[key];\n      if (key === 'this') {\n        continue;\n      }\n      keys.push(key);\n      values.push(value);\n    }\n    return Function.apply(null, slice.call(keys).concat([source])).apply(scope[\"this\"], values);\n  };\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scope-eval/scope_eval.js\n// module id = 35\n// module chunks = 2","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spark-md5/spark-md5.js\n// module id = 36\n// module chunks = 2","/**\n  * vue-router v2.1.1\n  * (c) 2016 Evan You\n  * @license MIT\n  */\n'use strict';\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (h, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true\n\n    var route = parent.$route\n    var cache = parent._routerViewCache || (parent._routerViewCache = {})\n    var depth = 0\n    var inactive = false\n\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++\n      }\n      if (parent._inactive) {\n        inactive = true\n      }\n      parent = parent.$parent\n    }\n\n    data.routerViewDepth = depth\n    var matched = route.matched[depth]\n    if (!matched) {\n      return h()\n    }\n\n    var name = props.name\n    var component = inactive\n      ? cache[name]\n      : (cache[name] = matched.components[name])\n\n    if (!inactive) {\n      var hooks = data.hook || (data.hook = {})\n      hooks.init = function (vnode) {\n        matched.instances[name] = vnode.child\n      }\n      hooks.prepatch = function (oldVnode, vnode) {\n        matched.instances[name] = vnode.child\n      }\n      hooks.destroy = function (vnode) {\n        if (matched.instances[name] === vnode.child) {\n          matched.instances[name] = undefined\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n}\n\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (!condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message))\n  }\n}\n\n/*  */\n\nvar encode = encodeURIComponent\nvar decode = decodeURIComponent\n\nfunction resolveQuery (\n  query,\n  extraQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  if (query) {\n    var parsedQuery\n    try {\n      parsedQuery = parseQuery(query)\n    } catch (e) {\n      process.env.NODE_ENV !== 'production' && warn(false, e.message)\n      parsedQuery = {}\n    }\n    for (var key in extraQuery) {\n      parsedQuery[key] = extraQuery[key]\n    }\n    return parsedQuery\n  } else {\n    return extraQuery\n  }\n}\n\nfunction parseQuery (query) {\n  var res = {}\n\n  query = query.trim().replace(/^(\\?|#|&)/, '')\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=')\n    var key = decode(parts.shift())\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null\n\n    if (res[key] === undefined) {\n      res[key] = val\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val)\n    } else {\n      res[key] = [res[key], val]\n    }\n  })\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key]\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = []\n      val.slice().forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key))\n        } else {\n          result.push(encode(key) + '=' + encode(val2))\n        }\n      })\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom\n) {\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location),\n    matched: record ? formatMatch(record) : []\n  }\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom)\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n})\n\nfunction formatMatch (record) {\n  var res = []\n  while (record) {\n    res.unshift(record)\n    record = record.parent\n  }\n  return res\n}\n\nfunction getFullPath (ref) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  return (path || '/') + stringifyQuery(query) + hash\n}\n\nvar trailingSlashRE = /\\/$/\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a)\n  var bKeys = Object.keys(b)\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.indexOf(target.path.replace(/\\/$/, '')) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object]\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    event: {\n      type: [String, Array],\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router\n    var current = this.$route\n    var ref = router.resolve(this.to, current, this.append);\n    var normalizedTo = ref.normalizedTo;\n    var resolved = ref.resolved;\n    var href = ref.href;\n    var classes = {}\n    var activeClass = this.activeClass || router.options.linkActiveClass || 'router-link-active'\n    var compareTarget = normalizedTo.path ? createRoute(null, normalizedTo) : resolved\n    classes[activeClass] = this.exact\n      ? isSameRoute(current, compareTarget)\n      : isIncludedRoute(current, compareTarget)\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(normalizedTo)\n        } else {\n          router.push(normalizedTo)\n        }\n      }\n    }\n\n    var on = { click: guardEvent }\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler })\n    } else {\n      on[this.event] = handler\n    }\n\n    var data = {\n      class: classes\n    }\n\n    if (this.tag === 'a') {\n      data.on = on\n      data.attrs = { href: href }\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default)\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false\n        var extend = _Vue.util.extend\n        var aData = a.data = extend({}, a.data)\n        aData.on = on\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs)\n        aAttrs.href = href\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n}\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  /* istanbul ignore if */\n  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  /* istanbul ignore if */\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  /* istanbul ignore if */\n  if (e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  /* istanbul ignore if */\n  var target = e.target.getAttribute('target')\n  if (/\\b_blank\\b/i.test(target)) { return }\n\n  e.preventDefault()\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child\n    for (var i = 0; i < children.length; i++) {\n      child = children[i]\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true\n\n  _Vue = Vue\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this.$root._router }\n  })\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get$1 () { return this.$root._route }\n  })\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (this.$options.router) {\n        this._router = this.$options.router\n        this._router.init(this)\n        Vue.util.defineReactive(this, '_route', this._router.history.current)\n      }\n    }\n  })\n\n  Vue.component('router-view', View)\n  Vue.component('router-link', Link)\n\n  var strats = Vue.config.optionMergeStrategies\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created\n}\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  if (relative.charAt(0) === '/') {\n    return relative\n  }\n\n  if (relative.charAt(0) === '?' || relative.charAt(0) === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/')\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop()\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/')\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i]\n    if (segment === '.') {\n      continue\n    } else if (segment === '..') {\n      stack.pop()\n    } else {\n      stack.push(segment)\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('')\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = ''\n  var query = ''\n\n  var hashIndex = path.indexOf('#')\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex)\n    path = path.slice(0, hashIndex)\n  }\n\n  var queryIndex = path.indexOf('?')\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1)\n    path = path.slice(0, queryIndex)\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\n/*  */\n\nfunction createRouteMap (routes) {\n  var pathMap = Object.create(null)\n  var nameMap = Object.create(null)\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathMap, nameMap, route)\n  })\n\n  return {\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\")\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    )\n  }\n\n  var record = {\n    path: normalizePath(path, parent),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {}\n  }\n\n  if (route.children) {\n    // Warn if route is named and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(false, (\"Named Route '\" + (route.name) + \"' has a default child route.\\n          When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), the default child route will not be rendered.\\n          Remove the name from this route and use the name of the default child route for named links instead.\")\n        )\n      }\n    }\n    route.children.forEach(function (child) {\n      addRouteRecord(pathMap, nameMap, child, record)\n    })\n  }\n\n  if (route.alias !== undefined) {\n    if (Array.isArray(route.alias)) {\n      route.alias.forEach(function (alias) {\n        addRouteRecord(pathMap, nameMap, { path: alias }, parent, record.path)\n      })\n    } else {\n      addRouteRecord(pathMap, nameMap, { path: route.alias }, parent, record.path)\n    }\n  }\n\n  if (!pathMap[record.path]) {\n    pathMap[record.path] = record\n  }\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"Duplicate named routes definition: { name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"))\n    }\n  }\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '')\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\nvar __moduleExports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\nvar isarray = __moduleExports\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp\nvar parse_1 = parse\nvar compile_1 = compile\nvar tokensToFunction_1 = tokensToFunction\nvar tokensToRegExp_1 = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCache = Object.create(null)\n\nfunction getRouteRegex (path) {\n  var hit = regexpCache[path]\n  var keys, regexp\n\n  if (hit) {\n    keys = hit.keys\n    regexp = hit.regexp\n  } else {\n    keys = []\n    regexp = index(path, keys)\n    regexpCache[path] = { keys: keys, regexp: regexp }\n  }\n\n  return { keys: keys, regexp: regexp }\n}\n\nvar regexpCompileCache = Object.create(null)\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path))\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)))\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next)\n    next._normalized = true\n    var params = assign(assign({}, current.params), next.params)\n    if (current.name) {\n      next.name = current.name\n      next.params = params\n    } else if (current.matched) {\n      var rawPath = current.matched[current.matched.length - 1].path\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)))\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\")\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '')\n  var basePath = (current && current.path) || '/'\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : (current && current.path) || '/'\n  var query = resolveQuery(parsedPath.query, next.query)\n  var hash = next.hash || parsedPath.hash\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key]\n  }\n  return a\n}\n\n/*  */\n\nfunction createMatcher (routes) {\n  var ref = createRouteMap(routes);\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute)\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name]\n      var paramNames = getRouteRegex(record.path).keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; })\n\n      if (typeof location.params !== 'object') {\n        location.params = {}\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key]\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"))\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {}\n      for (var path in pathMap) {\n        if (matchRoute(path, location.params, location.path)) {\n          return _createRoute(pathMap[path], location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location))\n        : originalRedirect\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect }\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      process.env.NODE_ENV !== 'production' && warn(\n        false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n      )\n      return _createRoute(null, location)\n    }\n\n    var re = redirect\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query\n    hash = re.hasOwnProperty('hash') ? re.hash : hash\n    params = re.hasOwnProperty('params') ? re.params : params\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name]\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"))\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record)\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"))\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))))\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"))\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    })\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched\n      var aliasedRecord = matched[matched.length - 1]\n      location.params = aliasedMatch.params\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom)\n  }\n\n  return match\n}\n\nfunction matchRoute (\n  path,\n  params,\n  pathname\n) {\n  var ref = getRouteRegex(path);\n  var regexp = ref.regexp;\n  var keys = ref.keys;\n  var m = pathname.match(regexp)\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = keys[i - 1]\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i]\n    if (key) { params[key.name] = val }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined'\n\nvar supportsHistory = inBrowser && (function () {\n  var ua = window.navigator.userAgent\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})()\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb()\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1)\n        })\n      } else {\n        step(index + 1)\n      }\n    }\n  }\n  step(0)\n}\n\n/*  */\n\n\nvar History = function History (router, base) {\n  this.router = router\n  this.base = normalizeBase(base)\n  // start with a route object that stands for \"nowhere\"\n  this.current = START\n  this.pending = null\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current)\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route)\n    onComplete && onComplete(route)\n    this$1.ensureURL()\n  }, onAbort)\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current\n  var abort = function () { onAbort && onAbort() }\n  if (isSameRoute(route, current)) {\n    this.ensureURL()\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  )\n\n  this.pending = route\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    hook(route, current, function (to) {\n      if (to === false) {\n        // next(false) -> abort navigation, ensure current URL\n        this$1.ensureURL(true)\n        abort()\n      } else if (typeof to === 'string' || typeof to === 'object') {\n        // next('/') or next({ path: '/' }) -> redirect\n        (typeof to === 'object' && to.replace) ? this$1.replace(to) : this$1.push(to)\n        abort()\n      } else {\n        // confirm transition and pass on the value\n        next(to)\n      }\n    })\n  }\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = []\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, function () {\n      return this$1.current === route\n    })\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    runQueue(enterGuards, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null\n      onComplete(route)\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { return cb(); })\n        })\n      }\n    })\n  })\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current\n  this.current = route\n  this.cb && this.cb(route)\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev)\n  })\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base')\n      base = baseEl ? baseEl.getAttribute('href') : '/'\n    } else {\n      base = '/'\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i\n  var max = Math.max(current.length, next.length)\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def)\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (matched) {\n  return flatten(flatMapComponents(matched, function (def, instance) {\n    var guard = extractGuard(def, 'beforeRouteLeave')\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return wrapLeaveGuard(guard, instance); })\n        : wrapLeaveGuard(guard, instance)\n    }\n  }).reverse())\n}\n\nfunction wrapLeaveGuard (\n  guard,\n  instance\n) {\n  return function routeLeaveGuard () {\n    return guard.apply(instance, arguments)\n  }\n}\n\nfunction extractEnterGuards (\n  matched,\n  cbs,\n  isValid\n) {\n  return flatten(flatMapComponents(matched, function (def, _, match, key) {\n    var guard = extractGuard(def, 'beforeRouteEnter')\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return wrapEnterGuard(guard, cbs, match, key, isValid); })\n        : wrapEnterGuard(guard, cbs, match, key, isValid)\n    }\n  }))\n}\n\nfunction wrapEnterGuard (\n  guard,\n  cbs,\n  match,\n  key,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb)\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid)\n        })\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key])\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid)\n    }, 16)\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return flatMapComponents(matched, function (def, _, match, key) {\n    // if it's a function and doesn't have Vue options attached,\n    // assume it's an async component resolve function.\n    // we are not using Vue's default async resolving mechanism because\n    // we want to halt the navigation until the incoming component has been\n    // resolved.\n    if (typeof def === 'function' && !def.options) {\n      return function (to, from, next) {\n        var resolve = function (resolvedDef) {\n          match.components[key] = resolvedDef\n          next()\n        }\n\n        var reject = function (reason) {\n          warn(false, (\"Failed to resolve async component \" + key + \": \" + reason))\n          next(false)\n        }\n\n        var res = def(resolve, reject)\n        if (res && typeof res.then === 'function') {\n          res.then(resolve, reject)\n        }\n      }\n    }\n  })\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n/*  */\n\nvar positionStore = Object.create(null)\n\nfunction saveScrollPosition (key) {\n  if (!key) { return }\n  positionStore[key] = {\n    x: window.pageXOffset,\n    y: window.pageYOffset\n  }\n}\n\nfunction getScrollPosition (key) {\n  if (!key) { return }\n  return positionStore[key]\n}\n\nfunction getElementPosition (el) {\n  var docRect = document.documentElement.getBoundingClientRect()\n  var elRect = el.getBoundingClientRect()\n  return {\n    x: elRect.left - docRect.left,\n    y: elRect.top - docRect.top\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\n\nvar genKey = function () { return String(Date.now()); }\nvar _key = genKey()\n\nvar HTML5History = (function (History) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History.call(this, router, base)\n\n    var expectScroll = router.options.scrollBehavior\n    window.addEventListener('popstate', function (e) {\n      _key = e.state && e.state.key\n      var current = this$1.current\n      this$1.transitionTo(getLocation(this$1.base), function (next) {\n        if (expectScroll) {\n          this$1.handleScroll(next, current, true)\n        }\n      })\n    })\n\n    if (expectScroll) {\n      window.addEventListener('scroll', function () {\n        saveScrollPosition(_key)\n      })\n    }\n  }\n\n  if ( History ) HTML5History.__proto__ = History;\n  HTML5History.prototype = Object.create( History && History.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n)\n  };\n\n  HTML5History.prototype.push = function push (location) {\n    var this$1 = this;\n\n    var current = this.current\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath))\n      this$1.handleScroll(route, current, false)\n    })\n  };\n\n  HTML5History.prototype.replace = function replace (location) {\n    var this$1 = this;\n\n    var current = this.current\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath))\n      this$1.handleScroll(route, current, false)\n    })\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath)\n      push ? pushState(current) : replaceState(current)\n    }\n  };\n\n  HTML5History.prototype.handleScroll = function handleScroll (to, from, isPop) {\n    var router = this.router\n    if (!router.app) {\n      return\n    }\n\n    var behavior = router.options.scrollBehavior\n    if (!behavior) {\n      return\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      assert(typeof behavior === 'function', \"scrollBehavior must be a function\")\n    }\n\n    // wait until re-render finishes before scrolling\n    router.app.$nextTick(function () {\n      var position = getScrollPosition(_key)\n      var shouldScroll = behavior(to, from, isPop ? position : null)\n      if (!shouldScroll) {\n        return\n      }\n      var isObject = typeof shouldScroll === 'object'\n      if (isObject && typeof shouldScroll.selector === 'string') {\n        var el = document.querySelector(shouldScroll.selector)\n        if (el) {\n          position = getElementPosition(el)\n        } else if (isValidPosition(shouldScroll)) {\n          position = normalizePosition(shouldScroll)\n        }\n      } else if (isObject && isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll)\n      }\n\n      if (position) {\n        window.scrollTo(position.x, position.y)\n      }\n    })\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length)\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\nfunction pushState (url, replace) {\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url)\n    } else {\n      _key = genKey()\n      history.pushState({ key: _key }, '', url)\n    }\n    saveScrollPosition(_key)\n  } catch (e) {\n    window.location[replace ? 'assign' : 'replace'](url)\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true)\n}\n\n/*  */\n\n\nvar HashHistory = (function (History) {\n  function HashHistory (router, base, fallback) {\n    History.call(this, router, base)\n    // check history fallback deeplinking\n    if (fallback && this.checkFallback()) {\n      return\n    }\n    ensureSlash()\n  }\n\n  if ( History ) HashHistory.__proto__ = History;\n  HashHistory.prototype = Object.create( History && History.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  HashHistory.prototype.checkFallback = function checkFallback () {\n    var location = getLocation(this.base)\n    if (!/^\\/#/.test(location)) {\n      window.location.replace(\n        cleanPath(this.base + '/#' + location)\n      )\n      return true\n    }\n  };\n\n  HashHistory.prototype.onHashChange = function onHashChange () {\n    if (!ensureSlash()) {\n      return\n    }\n    this.transitionTo(getHash(), function (route) {\n      replaceHash(route.fullPath)\n    })\n  };\n\n  HashHistory.prototype.push = function push (location) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath)\n    })\n  };\n\n  HashHistory.prototype.replace = function replace (location) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath)\n    })\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n)\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current)\n    }\n  };\n\n  return HashHistory;\n}(History));\n\nfunction ensureSlash () {\n  var path = getHash()\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path)\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href\n  var index = href.indexOf('#')\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path\n}\n\nfunction replaceHash (path) {\n  var i = window.location.href.indexOf('#')\n  window.location.replace(\n    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n  )\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History) {\n  function AbstractHistory (router) {\n    History.call(this, router)\n    this.stack = []\n    this.index = -1\n  }\n\n  if ( History ) AbstractHistory.__proto__ = History;\n  AbstractHistory.prototype = Object.create( History && History.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route)\n      this$1.index++\n    })\n  };\n\n  AbstractHistory.prototype.replace = function replace (location) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route)\n    })\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex]\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex\n      this$1.updateRoute(route)\n    })\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null\n  this.options = options\n  this.beforeHooks = []\n  this.afterHooks = []\n  this.match = createMatcher(options.routes || [])\n\n  var mode = options.mode || 'hash'\n  this.fallback = mode === 'history' && !supportsHistory\n  if (this.fallback) {\n    mode = 'hash'\n  }\n  if (!inBrowser) {\n    mode = 'abstract'\n  }\n  this.mode = mode\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base)\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback)\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this)\n      break\n    default:\n      process.env.NODE_ENV !== 'production' && assert(false, (\"invalid mode: \" + mode))\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  )\n\n  this.app = app\n\n  var history = this.history\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(getLocation(history.base))\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      window.addEventListener('hashchange', function () {\n        history.onHashChange()\n      })\n    }\n    history.transitionTo(getHash(), setupHashListener, setupHashListener)\n  }\n\n  history.listen(function (route) {\n    this$1.app._route = route\n  })\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  this.beforeHooks.push(fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  this.afterHooks.push(fn)\n};\n\nVueRouter.prototype.push = function push (location) {\n  this.history.push(location)\n};\n\nVueRouter.prototype.replace = function replace (location) {\n  this.history.replace(location)\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n)\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1)\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1)\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? this.resolve(to).resolved\n    : this.currentRoute\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var normalizedTo = normalizeLocation(to, current || this.history.current, append)\n  var resolved = this.match(normalizedTo, current)\n  var fullPath = resolved.redirectedFrom || resolved.fullPath\n  var base = this.history.base\n  var href = createHref(base, fullPath, this.mode)\n  return {\n    normalizedTo: normalizedTo,\n    resolved: resolved,\n    href: href\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter)\n}\n\nmodule.exports = VueRouter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-router/dist/vue-router.common.js\n// module id = 57\n// module chunks = 2","/*!\n * Vue.js v2.1.4\n * (c) 2014-2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val, 10);\n  return (n || n === 0) ? n : val\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove$1 (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  }\n}\n\n/**\n * Camelize a hyphen-delmited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind$1 (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (\n    isObject(a) && isObject(b)\n      ? JSON.stringify(a) === JSON.stringify(b)\n      : false\n  )\n  /* eslint-enable eqeqeq */\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: null,\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] !== undefined\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = 1;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar warn = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm) {\n    if (vm.$root === vm) {\n      return 'root instance'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n    return (\n      (name ? (\"component <\" + name + \">\") : \"anonymous component\") +\n      (vm._isVue && vm.$options.__file ? (\" at \" + (vm.$options.__file)) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === 'anonymous component') {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove$1(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * istanbul ignore next\n */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set$1 (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.length = Math.max(obj.length, key);\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set$1(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return parentVal }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$3) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  var res = assets[id] ||\n    // camelCase ID\n    assets[camelize(id)] ||\n    // Pascal Case ID\n    assets[capitalize(camelize(id))];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isBooleanType(prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm[key] !== undefined) {\n    return vm[key]\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && prop.type !== Function\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isBooleanType (fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === 'Boolean'\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === 'Boolean') {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive$$1,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\tmakeMap: makeMap,\n\tisBuiltInTag: isBuiltInTag,\n\tremove: remove$1,\n\thasOwn: hasOwn,\n\tisPrimitive: isPrimitive,\n\tcached: cached,\n\tcamelize: camelize,\n\tcapitalize: capitalize,\n\thyphenate: hyphenate,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\ttoObject: toObject,\n\tnoop: noop,\n\tno: no,\n\tgenStaticKeys: genStaticKeys,\n\tlooseEqual: looseEqual,\n\tlooseIndexOf: looseIndexOf,\n\tisReserved: isReserved,\n\tdef: def,\n\tparsePath: parsePath,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tUA: UA,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisEdge: isEdge,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tisServerRendering: isServerRendering,\n\tdevtools: devtools,\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tget warn () { return warn; },\n\tget formatComponentName () { return formatComponentName; },\n\tvalidateProp: validateProp\n});\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\n\nvar queue = [];\nvar has$1 = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has$1 = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    var watcher = queue[index];\n    var id = watcher.id;\n    has$1[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has$1[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has$1[id] == null) {\n    has$1[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  if ( options === void 0 ) options = {};\n\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  this.deep = !!options.deep;\n  this.user = !!options.user;\n  this.lazy = !!options.lazy;\n  this.sync = !!options.sync;\n  this.expression = expOrFn.toString();\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value = this.getter.call(this.vm, this.vm);\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n      if (\n        value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          /* istanbul ignore else */\n          if (config.errorHandler) {\n            config.errorHandler.call(null, e, this.vm);\n          } else {\n            process.env.NODE_ENV !== 'production' && warn(\n              (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n              this.vm\n            );\n            throw e\n          }\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      remove$1(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nfunction initState (vm) {\n  vm._watchers = [];\n  initProps(vm);\n  initMethods(vm);\n  initData(vm);\n  initComputed(vm);\n  initWatch(vm);\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm) {\n  var props = vm.$options.props;\n  if (props) {\n    var propsData = vm.$options.propsData || {};\n    var keys = vm.$options._propKeys = Object.keys(props);\n    var isRoot = !vm.$parent;\n    // root instance props should be converted\n    observerState.shouldConvert = isRoot;\n    var loop = function ( i ) {\n      var key = keys[i];\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (isReservedProp[key]) {\n          warn(\n            (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n            vm\n          );\n        }\n        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm), function () {\n          if (vm.$parent && !observerState.isSettingProps) {\n            warn(\n              \"Avoid mutating a prop directly since the value will be \" +\n              \"overwritten whenever the parent component re-renders. \" +\n              \"Instead, use a data or computed property based on the prop's \" +\n              \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n              vm\n            );\n          }\n        });\n      } else {\n        defineReactive$$1(vm, key, validateProp(key, props, propsData, vm));\n      }\n    };\n\n    for (var i = 0; i < keys.length; i++) loop( i );\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object.',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else {\n      proxy(vm, keys[i]);\n    }\n  }\n  // observe data\n  observe(data);\n  data.__ob__ && data.__ob__.vmCount++;\n}\n\nvar computedSharedDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction initComputed (vm) {\n  var computed = vm.$options.computed;\n  if (computed) {\n    for (var key in computed) {\n      var userDef = computed[key];\n      if (typeof userDef === 'function') {\n        computedSharedDefinition.get = makeComputedGetter(userDef, vm);\n        computedSharedDefinition.set = noop;\n      } else {\n        computedSharedDefinition.get = userDef.get\n          ? userDef.cache !== false\n            ? makeComputedGetter(userDef.get, vm)\n            : bind$1(userDef.get, vm)\n          : noop;\n        computedSharedDefinition.set = userDef.set\n          ? bind$1(userDef.set, vm)\n          : noop;\n      }\n      Object.defineProperty(vm, key, computedSharedDefinition);\n    }\n  }\n}\n\nfunction makeComputedGetter (getter, owner) {\n  var watcher = new Watcher(owner, getter, noop, {\n    lazy: true\n  });\n  return function computedGetter () {\n    if (watcher.dirty) {\n      watcher.evaluate();\n    }\n    if (Dep.target) {\n      watcher.depend();\n    }\n    return watcher.value\n  }\n}\n\nfunction initMethods (vm) {\n  var methods = vm.$options.methods;\n  if (methods) {\n    for (var key in methods) {\n      vm[key] = methods[key] == null ? noop : bind$1(methods[key], vm);\n      if (process.env.NODE_ENV !== 'production' && methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm) {\n  var watch = vm.$options.watch;\n  if (watch) {\n    for (var key in watch) {\n      var handler = watch[key];\n      if (Array.isArray(handler)) {\n        for (var i = 0; i < handler.length; i++) {\n          createWatcher(vm, key, handler[i]);\n        }\n      } else {\n        createWatcher(vm, key, handler);\n      }\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () {\n    return this._data\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n\n  Vue.prototype.$set = set$1;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\nfunction proxy (vm, key) {\n  if (!isReserved(key)) {\n    Object.defineProperty(vm, key, {\n      configurable: true,\n      enumerable: true,\n      get: function proxyGetter () {\n        return vm._data[key]\n      },\n      set: function proxySetter (val) {\n        vm._data[key] = val;\n      }\n    });\n  }\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  ns,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = ns;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.child = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar emptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.ns,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook, key) {\n  key = key + hookKey;\n  var injectedHash = def.__injected || (def.__injected = {});\n  if (!injectedHash[key]) {\n    injectedHash[key] = true;\n    var oldHook = def[hookKey];\n    if (oldHook) {\n      def[hookKey] = function () {\n        oldHook.apply(this, arguments);\n        hook.apply(this, arguments);\n      };\n    } else {\n      def[hookKey] = hook;\n    }\n  }\n}\n\n/*  */\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, fn, event, capture, once;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + name + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      once = name.charAt(0) === '~'; // Prefixed last, checked first\n      event = once ? name.slice(1) : name;\n      capture = event.charAt(0) === '!';\n      event = capture ? event.slice(1) : event;\n      if (Array.isArray(cur)) {\n        add(event, (cur.invoker = arrInvoker(cur)), once, capture);\n      } else {\n        if (!cur.invoker) {\n          fn = cur;\n          cur = on[name] = {};\n          cur.fn = fn;\n          cur.invoker = fnInvoker(cur);\n        }\n        add(event, cur.invoker, once, capture);\n      }\n    } else if (cur !== old) {\n      if (Array.isArray(old)) {\n        old.length = cur.length;\n        for (var i = 0; i < old.length; i++) { old[i] = cur[i]; }\n        on[name] = old;\n      } else {\n        old.fn = cur;\n        on[name] = old;\n      }\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      once = name.charAt(0) === '~'; // Prefixed last, checked first\n      event = once ? name.slice(1) : name;\n      capture = event.charAt(0) === '!';\n      event = capture ? event.slice(1) : event;\n      remove$$1(event, oldOn[name].invoker, capture);\n    }\n  }\n}\n\nfunction arrInvoker (arr) {\n  return function (ev) {\n    var arguments$1 = arguments;\n\n    var single = arguments.length === 1;\n    for (var i = 0; i < arr.length; i++) {\n      single ? arr[i](ev) : arr[i].apply(null, arguments$1);\n    }\n  }\n}\n\nfunction fnInvoker (o) {\n  return function (ev) {\n    var single = arguments.length === 1;\n    single ? o.fn(ev) : o.fn.apply(null, arguments);\n  }\n}\n\n/*  */\n\nfunction normalizeChildren (\n  children,\n  ns,\n  nestedIndex\n) {\n  if (isPrimitive(children)) {\n    return [createTextVNode(children)]\n  }\n  if (Array.isArray(children)) {\n    var res = [];\n    for (var i = 0, l = children.length; i < l; i++) {\n      var c = children[i];\n      var last = res[res.length - 1];\n      //  nested\n      if (Array.isArray(c)) {\n        res.push.apply(res, normalizeChildren(c, ns, ((nestedIndex || '') + \"_\" + i)));\n      } else if (isPrimitive(c)) {\n        if (last && last.text) {\n          last.text += String(c);\n        } else if (c !== '') {\n          // convert primitive to vnode\n          res.push(createTextVNode(c));\n        }\n      } else if (c instanceof VNode) {\n        if (c.text && last && last.text) {\n          if (!last.isCloned) {\n            last.text += c.text;\n          }\n        } else {\n          // inherit parent namespace\n          if (ns) {\n            applyNS(c, ns);\n          }\n          // default key for nested array children (likely generated by v-for)\n          if (c.tag && c.key == null && nestedIndex != null) {\n            c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n          }\n          res.push(c);\n        }\n      }\n    }\n    return res\n  }\n}\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\nfunction applyNS (vnode, ns) {\n  if (vnode.tag && !vnode.ns) {\n    vnode.ns = ns;\n    if (vnode.children) {\n      for (var i = 0, l = vnode.children.length; i < l; i++) {\n        applyNS(vnode.children[i], ns);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._mount = function (\n    el,\n    hydrating\n  ) {\n    var vm = this;\n    vm.$el = el;\n    if (!vm.$options.render) {\n      vm.$options.render = emptyVNode;\n      if (process.env.NODE_ENV !== 'production') {\n        /* istanbul ignore if */\n        if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n          warn(\n            'You are using the runtime-only build of Vue where the template ' +\n            'option is not available. Either pre-compile the templates into ' +\n            'render functions, or use the compiler-included build.',\n            vm\n          );\n        } else {\n          warn(\n            'Failed to mount component: template or render function not defined.',\n            vm\n          );\n        }\n      }\n    }\n    callHook(vm, 'beforeMount');\n    vm._watcher = new Watcher(vm, function () {\n      vm._update(vm._render(), hydrating);\n    }, noop);\n    hydrating = false;\n    // manually mounted instance, call mounted on self\n    // mounted is called for render-created child components in its inserted hook\n    if (vm.$vnode == null) {\n      vm._isMounted = true;\n      callHook(vm, 'mounted');\n    }\n    return vm\n  };\n\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    if (vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  };\n\n  Vue.prototype._updateFromParent = function (\n    propsData,\n    listeners,\n    parentVnode,\n    renderChildren\n  ) {\n    var vm = this;\n    var hasChildren = !!(vm.$options._renderChildren || renderChildren);\n    vm.$options._parentVnode = parentVnode;\n    vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n    if (vm._vnode) { // update child tree's parent\n      vm._vnode.parent = parentVnode;\n    }\n    vm.$options._renderChildren = renderChildren;\n    // update props\n    if (propsData && vm.$options.props) {\n      observerState.shouldConvert = false;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = true;\n      }\n      var propKeys = vm.$options._propKeys || [];\n      for (var i = 0; i < propKeys.length; i++) {\n        var key = propKeys[i];\n        vm[key] = validateProp(key, vm.$options.props, propsData, vm);\n      }\n      observerState.shouldConvert = true;\n      if (process.env.NODE_ENV !== 'production') {\n        observerState.isSettingProps = false;\n      }\n      vm.$options.propsData = propsData;\n    }\n    // update listeners\n    if (listeners) {\n      var oldListeners = vm.$options._parentListeners;\n      vm.$options._parentListeners = listeners;\n      vm._updateListeners(listeners, oldListeners);\n    }\n    // resolve slots + force update if has children\n    if (hasChildren) {\n      vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n      vm.$forceUpdate();\n    }\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove$1(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      handlers[i].call(vm);\n    }\n  }\n  vm.$emit('hook:' + hook);\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy$1 };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  var vnode = Ctor.options.render.call(\n    null,\n    // ensure the createElement function in functional components\n    // gets a unique context - this is necessary for correct named slot check\n    bind$1(createElement, { _self: Object.create(context) }),\n    {\n      props: props,\n      data: data,\n      parent: context,\n      children: normalizeChildren(children),\n      slots: function () { return resolveSlots(children, context); }\n    }\n  );\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (\n  vnode,\n  hydrating,\n  parentElm,\n  refElm\n) {\n  if (!vnode.child || vnode.child._isDestroyed) {\n    var child = vnode.child = createComponentInstanceForVnode(\n      vnode,\n      activeInstance,\n      parentElm,\n      refElm\n    );\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  } else if (vnode.data.keepAlive) {\n    // kept-alive components, treat as a patch\n    var mountedNode = vnode; // work around flow\n    prepatch(mountedNode, mountedNode);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.child = oldVnode.child;\n  child._updateFromParent(\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.child._isMounted) {\n    vnode.child._isMounted = true;\n    callHook(vnode.child, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    vnode.child._inactive = false;\n    callHook(vnode.child, 'activated');\n  }\n}\n\nfunction destroy$1 (vnode) {\n  if (!vnode.child._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.child.$destroy();\n    } else {\n      vnode.child._inactive = true;\n      callHook(vnode.child, 'deactivated');\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n/*  */\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  tag,\n  data,\n  children\n) {\n  if (data && (Array.isArray(data) || typeof data !== 'object')) {\n    children = data;\n    data = undefined;\n  }\n  // make sure to use real instance instead of proxy as context\n  return _createElement(this._self, tag, data, children)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return emptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (typeof tag === 'string') {\n    var Ctor;\n    var ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      return new VNode(\n        tag, data, normalizeChildren(children, ns),\n        undefined, undefined, ns, context\n      )\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      return createComponent(Ctor, data, context, children, tag)\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      var childNs = tag === 'foreignObject' ? 'xhtml' : ns;\n      return new VNode(\n        tag, data, normalizeChildren(children, childNs),\n        undefined, undefined, ns, context\n      )\n    }\n  } else {\n    // direct component options / constructor\n    return createComponent(tag, data, context, children)\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = {};\n  // bind the public createElement fn to this instance\n  // so that we get proper render context inside it.\n  vm.$createElement = bind$1(createElement, vm);\n  if (vm.$options.el) {\n    vm.$mount(vm.$options.el);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    if (_parentVnode && _parentVnode.data.scopedSlots) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots;\n    }\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      /* istanbul ignore else */\n      if (config.errorHandler) {\n        config.errorHandler.call(null, e, vm);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn((\"Error when rendering \" + (formatComponentName(vm)) + \":\"));\n        }\n        throw e\n      }\n      // return previous vnode to prevent render error causing blank component\n      vnode = vm._vnode;\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = emptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // shorthands used in render functions\n  Vue.prototype._h = createElement;\n  // toString for mustaches\n  Vue.prototype._s = _toString;\n  // number conversion\n  Vue.prototype._n = toNumber;\n  // empty vnode\n  Vue.prototype._e = emptyVNode;\n  // loose equal\n  Vue.prototype._q = looseEqual;\n  // loose indexOf\n  Vue.prototype._i = looseIndexOf;\n\n  // render static tree by index\n  Vue.prototype._m = function renderStatic (\n    index,\n    isInFor\n  ) {\n    var tree = this._staticTrees[index];\n    // if has already-rendered static tree and not inside v-for,\n    // we can reuse the same tree by doing a shallow clone.\n    if (tree && !isInFor) {\n      return Array.isArray(tree)\n        ? cloneVNodes(tree)\n        : cloneVNode(tree)\n    }\n    // otherwise, render a fresh tree.\n    tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);\n    markStatic(tree, (\"__static__\" + index), false);\n    return tree\n  };\n\n  // mark node as static (v-once)\n  Vue.prototype._o = function markOnce (\n    tree,\n    index,\n    key\n  ) {\n    markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n    return tree\n  };\n\n  function markStatic (tree, key, isOnce) {\n    if (Array.isArray(tree)) {\n      for (var i = 0; i < tree.length; i++) {\n        if (tree[i] && typeof tree[i] !== 'string') {\n          markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n        }\n      }\n    } else {\n      markStaticNode(tree, key, isOnce);\n    }\n  }\n\n  function markStaticNode (node, key, isOnce) {\n    node.isStatic = true;\n    node.key = key;\n    node.isOnce = isOnce;\n  }\n\n  // filter resolution helper\n  var identity = function (_) { return _; };\n  Vue.prototype._f = function resolveFilter (id) {\n    return resolveAsset(this.$options, 'filters', id, true) || identity\n  };\n\n  // render v-for\n  Vue.prototype._l = function renderList (\n    val,\n    render\n  ) {\n    var ret, i, l, keys, key;\n    if (Array.isArray(val)) {\n      ret = new Array(val.length);\n      for (i = 0, l = val.length; i < l; i++) {\n        ret[i] = render(val[i], i);\n      }\n    } else if (typeof val === 'number') {\n      ret = new Array(val);\n      for (i = 0; i < val; i++) {\n        ret[i] = render(i + 1, i);\n      }\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n    return ret\n  };\n\n  // renderSlot\n  Vue.prototype._t = function (\n    name,\n    fallback,\n    props\n  ) {\n    var scopedSlotFn = this.$scopedSlots[name];\n    if (scopedSlotFn) { // scoped slot\n      return scopedSlotFn(props || {}) || fallback\n    } else {\n      var slotNodes = this.$slots[name];\n      // warn duplicate slot usage\n      if (slotNodes && process.env.NODE_ENV !== 'production') {\n        slotNodes._rendered && warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n        slotNodes._rendered = true;\n      }\n      return slotNodes || fallback\n    }\n  };\n\n  // apply v-bind object\n  Vue.prototype._b = function bindProps (\n    data,\n    tag,\n    value,\n    asProp\n  ) {\n    if (value) {\n      if (!isObject(value)) {\n        process.env.NODE_ENV !== 'production' && warn(\n          'v-bind without argument expects an Object or Array value',\n          this\n        );\n      } else {\n        if (Array.isArray(value)) {\n          value = toObject(value);\n        }\n        for (var key in value) {\n          if (key === 'class' || key === 'style') {\n            data[key] = value[key];\n          } else {\n            var hash = asProp || config.mustUseProp(tag, key)\n              ? data.domProps || (data.domProps = {})\n              : data.attrs || (data.attrs = {});\n            hash[key] = value[key];\n          }\n        }\n      }\n    }\n    return data\n  };\n\n  // check v-on keyCodes\n  Vue.prototype._k = function checkKeyCodes (\n    eventKeyCode,\n    key,\n    builtInAlias\n  ) {\n    var keyCodes = config.keyCodes[key] || builtInAlias;\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  };\n}\n\nfunction resolveSlots (\n  renderChildren,\n  context\n) {\n  var slots = {};\n  if (!renderChildren) {\n    return slots\n  }\n  var children = normalizeChildren(renderChildren) || [];\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  var add = function (event, fn, once) {\n    once ? vm.$once(event, fn) : vm.$on(event, fn);\n  };\n  var remove$$1 = bind$1(vm.$off, vm);\n  vm._updateListeners = function (listeners, oldListeners) {\n    updateListeners(listeners, oldListeners || {}, add, remove$$1, vm);\n  };\n  if (listeners) {\n    vm._updateListeners(listeners);\n  }\n}\n\nfunction eventsMixin (Vue) {\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;(vm._events[event] || (vm._events[event] = [])).push(fn);\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    callHook(vm, 'created');\n    initRender(vm);\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = Ctor.super.options;\n    var cachedSuperOptions = Ctor.superOptions;\n    var extendOptions = Ctor.extendOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed\n      Ctor.superOptions = superOptions;\n      extendOptions.render = options.render;\n      extendOptions.staticRenderFns = options.staticRenderFns;\n      extendOptions._scopeId = options._scopeId;\n      options = Ctor.options = mergeOptions(superOptions, extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characaters and the hyphen.'\n        );\n      }\n    }\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else {\n    return pattern.test(name)\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    if (vnode && vnode.componentOptions) {\n      var opts = vnode.componentOptions;\n      // check pattern\n      var name = opts.Ctor.options.name || opts.tag;\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? opts.Ctor.cid + (opts.tag ? (\"::\" + (opts.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.child = this.cache[key].child;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  },\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this.cache) {\n      var vnode = this$1.cache[key];\n      callHook(vnode.child, 'deactivated');\n      vnode.child.$destroy();\n    }\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n  Vue.util = util;\n  Vue.set = set$1;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$3.version = '2.1.4';\n\n/*  */\n\n// attributes that should be using props for binding\nvar mustUseProp = function (tag, attr) {\n  return (\n    (attr === 'value' && (tag === 'input' || tag === 'textarea' || tag === 'option')) ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.child) {\n    childNode = childNode.child._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML',\n  xhtml: 'http://www.w3.org/1999/xhtml'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font,' +\n  'font-face,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + selector\n      );\n      return document.createElement('div')\n    }\n  }\n  return el\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  if (vnode.data && vnode.data.attrs && 'multiple' in vnode.data.attrs) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction childNodes (node) {\n  return node.childNodes\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tchildNodes: childNodes,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.child || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove$1(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeElement(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeElement (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.child) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.child)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.child) {\n      innerNode = innerNode.child._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      nodeOps.insertBefore(parent, elm, ref);\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.child) {\n      vnode = vnode.child._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.child.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.context) && isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          nodeOps.removeChild(parentElm, ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.child) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeElement(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (elmToMove.tag !== newStartVnode.tag) {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.child = oldVnode.child;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.child)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        var childNodes = nodeOps.childNodes(elm);\n        // empty element, allow client to pick up and populate children\n        if (!childNodes.length) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          if (childNodes.length !== children.length) {\n            childrenMatch = false;\n          } else {\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!hydrate(childNodes[i$1], children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n            }\n          }\n          if (!childrenMatch) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        invokeCreateHooks(vnode, insertedVnodeQueue);\n      }\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === nodeOps.tagName(node).toLowerCase()\n      )\n    } else {\n      return _toString(vnode.text) === node.data\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var elm, parent;\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        elm = oldVnode.elm;\n        parent = nodeOps.parentNode(elm);\n        createElm(vnode, insertedVnodeQueue, parent, nodeOps.nextSibling(elm));\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parent !== null) {\n          removeVnodes(parent, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (\n  oldVnode,\n  vnode\n) {\n  if (!oldVnode.data.directives && !vnode.data.directives) {\n    return\n  }\n  var isCreate = oldVnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      dirsWithInsert.forEach(function (dir) {\n        callHook$1(dir, 'inserted', vnode, oldVnode);\n      });\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert, 'dir-insert');\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      dirsWithPostpatch.forEach(function (dir) {\n        callHook$1(dir, 'componentUpdated', vnode, oldVnode);\n      });\n    }, 'dir-postpatch');\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n// skip type checking this file because we need to attach private properties\n// to elements\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  var add = vnode.elm._v_add || (\n    vnode.elm._v_add = function (event, handler, once, capture) {\n      if (once) {\n        var oldHandler = handler;\n        handler = function (ev) {\n          remove(event, handler, capture);\n          arguments.length === 1\n            ? oldHandler(ev)\n            : oldHandler.apply(null, arguments);\n        };\n      }\n      vnode.elm.addEventListener(event, handler, capture);\n    }\n  );\n  var remove = vnode.elm._v_remove || (\n    vnode.elm._v_remove = function (event, handler, capture) {\n      vnode.elm.removeEventListener(event, handler, capture);\n    }\n  );\n  updateListeners(on, oldOn, add, remove, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (elm.value !== strCur && !elm.composing) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.child) {\n      childNode = childNode.child._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !cls.trim()) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = ' ' + el.getAttribute('class') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\nvar raf = (inBrowser && window.requestAnimationFrame) || setTimeout;\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove$1(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear ? appearClass : enterClass;\n  var activeClass = isAppear ? appearActiveClass : enterActiveClass;\n  var beforeEnterHook = isAppear ? (beforeAppear || beforeEnter) : beforeEnter;\n  var enterHook = isAppear ? (typeof appear === 'function' ? appear : enter) : enter;\n  var afterEnterHook = isAppear ? (afterAppear || afterEnter) : afterEnter;\n  var enterCancelledHook = isAppear ? (appearCancelled || enterCancelled) : enterCancelled;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    enterHook &&\n    // enterHook may be a bound method which exposes\n    // the length of original fn as _length\n    (enterHook._length || enterHook.length) > 1;\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.context === vnode.context &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    }, 'transition-insert');\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        whenTransitionEnds(el, type, cb);\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl =\n    leave &&\n    // leave hook may be a bound method which exposes\n    // the length of original fn as _length\n    (leave._length || leave.length) > 1;\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          whenTransitionEnds(el, type, cb);\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    leaveClass: (name + \"-leave\"),\n    appearClass: (name + \"-enter\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveActiveClass: (name + \"-leave-active\"),\n    appearActiveClass: (name + \"-enter-active\")\n  }\n});\n\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch$1 = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar modelableTagRE = /^input|select|textarea|vue-component-[0-9]+(-[0-9a-zA-Z_-]*)?$/;\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model = {\n  inserted: function inserted (el, binding, vnode) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!modelableTagRE.test(vnode.tag)) {\n        warn(\n          \"v-model is not supported on element type: <\" + (vnode.tag) + \">. \" +\n          'If you are working with contenteditable, it\\'s recommended to ' +\n          'wrap a library dedicated for that purpose inside a custom component.',\n          vnode.context\n        );\n      }\n    }\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (\n      (vnode.tag === 'textarea' || el.type === 'text') &&\n      !binding.modifiers.lazy\n    ) {\n      if (!isAndroid) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n      }\n      /* istanbul ignore if */\n      if (isIE9) {\n        el.vmodel = true;\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.child && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.child._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (value && transition && !isIE9) {\n      enter(vnode);\n    }\n    var originalDisplay = el.style.display === 'none' ? '' : el.style.display;\n    el.style.display = value ? originalDisplay : 'none';\n    el.__vOriginalDisplay = originalDisplay;\n  },\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      if (value) {\n        enter(vnode);\n        el.style.display = el.__vOriginalDisplay;\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1].fn;\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    var key = child.key = child.key == null || child.isStatic\n      ? (\"__v\" + (child.tag + this._uid) + \"__\")\n      : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && oldChild.key !== key) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        }, key);\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave, key);\n        mergeVNodeHook(data, 'enterCancelled', performLeave, key);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        }, key);\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts\n            ? (opts.Ctor.options.name || opts.tag)\n            : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var f = document.body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      addTransitionClass(el, moveClass);\n      var info = getTransitionInfo(el);\n      removeTransitionClass(el, moveClass);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.isUnknownElement = isUnknownElement;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.mustUseProp = mustUseProp;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch$1 : noop;\n\n// wrap mount\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return this._mount(el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (\n      process.env.NODE_ENV !== 'production' &&\n      inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)\n    ) {\n      console.log(\n        'Download the Vue Devtools for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr',\n  true\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source',\n  true\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track',\n  true\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isScriptOrStyle = makeMap('script,style', true);\nvar hasLang = function (attr) { return attr.name === 'lang' && attr.value !== 'html'; };\nvar isSpecialTag = function (tag, isSFC, stack) {\n  if (isScriptOrStyle(tag)) {\n    return true\n  }\n  if (isSFC && stack.length === 1) {\n    // top-level template that has no pre-processor\n    if (tag === 'template' && !stack[0].attrs.some(hasLang)) {\n      return false\n    } else {\n      return true\n    }\n  }\n  return false\n};\n\nvar reCache = {};\n\nvar ltRE = /&lt;/g;\nvar gtRE = /&gt;/g;\nvar nlRE = /&#10;/g;\nvar ampRE = /&amp;/g;\nvar quoteRE = /&quot;/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  if (shouldDecodeNewlines) {\n    value = value.replace(nlRE, '\\n');\n  }\n  return value\n    .replace(ltRE, '<')\n    .replace(gtRE, '>')\n    .replace(ampRE, '&')\n    .replace(quoteRE, '\"')\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a script or style element\n    if (!lastTag || !isSpecialTag(lastTag, options.sfc, stack)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[0], endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd > 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (stackedTag !== 'script' && stackedTag !== 'style' && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag('</' + stackedTag + '>', stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last && options.chars) {\n      options.chars(html);\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag('', lastTag);\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag('', tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, attrs: attrs });\n      lastTag = tagName;\n      unarySlash = '';\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tag, tagName, start, end) {\n    var pos;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      var needle = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].tag.toLowerCase() === needle) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (tagName.toLowerCase() === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (tagName.toLowerCase() === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x2f: inRegex = true; break          // /\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue parser]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important\n) {\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\nvar bindRE = /^:|^v-bind:/;\nvar onRE = /^@|^v-on:/;\nvar argRE = /:(.*)$/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$1;\nvar platformGetTagNamespace;\nvar platformMustUseProp;\nvar platformIsPreTag;\nvar preTransforms;\nvar transforms;\nvar postTransforms;\nvar delimiters;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$1 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n  parseHTML(template, {\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$1(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">.\"\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production' && !warned) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warned = true;\n            warn$1(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes:\\n' + template\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warned = true;\n            warn$1(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements:\\n' + template\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production' && !warned) {\n          warned = true;\n          warn$1(\n            \"Component template should contain exactly one root element:\" +\n            \"\\n\\n\" + template + \"\\n\\n\" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || 'default';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ') {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      // check pre state\n      if (element.pre) {\n        inVPre = false;\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = false;\n      }\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production' && !warned && text === template) {\n          warned = true;\n          warn$1(\n            'Component template requires a root element, rather than just text:\\n\\n' + template\n          );\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n          currentParent.tag === 'textarea' &&\n          currentParent.attrsMap.placeholder === text) {\n        return\n      }\n      text = inPre || text.trim()\n        ? decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && currentParent.children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          currentParent.children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else {\n          currentParent.children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$1(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$1(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once = getAndRemoveAttr(el, 'v-once');\n  if (once != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$1(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, arg, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        if (argMatch && (arg = argMatch[1])) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$1(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (process.env.NODE_ENV !== 'production' && map[attrs[i].name] && !isIE) {\n      warn$1('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].tag) { return children[i] }\n  }\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: 'if($event.target !== $event.currentTarget)return;',\n  ctrl: 'if(!$event.ctrlKey)return;',\n  shift: 'if(!$event.shiftKey)return;',\n  alt: 'if(!$event.altKey)return;',\n  meta: 'if(!$event.metaKey)return;'\n};\n\nfunction genHandlers (events, native) {\n  var res = native ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  } else if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  } else if (!handler.modifiers) {\n    return fnExpRE.test(handler.value) || simplePathRE.test(handler.value)\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\")\n  } else {\n    var code = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        code += modifierCode[key];\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code = genKeyFilter(keys) + code;\n    }\n    var handlerCode = simplePathRE.test(handler.value)\n      ? handler.value + '($event)'\n      : handler.value;\n    return 'function($event){' + code + handlerCode + '}'\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(\" + (keys.map(genFilterCode).join('&&')) + \")return;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$2 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\nvar baseDirectives = {\n  bind: bind$2,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$2;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$2 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  var code = ast ? genElement(ast) : '_h(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el);\n      code = \"_h('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$2);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$2('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:{\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"}\")\n}\n\nfunction genScopedSlot (key, el) {\n  return key + \":function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}\"\n}\n\nfunction genChildren (el) {\n  if (el.children.length) {\n    return '[' + el.children.map(genNode).join(',') + ']'\n  }\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  return (\"_t(\" + slotName + (children ? (\",\" + children) : '') + (el.attrs ? ((children ? '' : ',null') + \",{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\") : '') + \")\")\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el);\n  return (\"_h(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n/**\n * Compile a template.\n */\nfunction compile$1 (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\n/*  */\n\n// operators like typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"- invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + text));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"- avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + text\n      );\n    } else {\n      errors.push((\"- invalid expression: \" + text));\n    }\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nvar warn$3;\n\nfunction model$1 (\n  el,\n  dir,\n  _warn\n) {\n  warn$3 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$3(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n  }\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else {\n    genDefaultModel(el, value, modifiers);\n  }\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  if (process.env.NODE_ENV !== 'production' &&\n    el.attrsMap.checked != null) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\n      \"inline checked attributes will be ignored when using v-model. \" +\n      'Declare initial values in the component\\'s data option instead.'\n    );\n  }\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" +\n      \":_q(\" + value + \",\" + trueValueBinding + \")\"\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + value + \"=$$c}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  if (process.env.NODE_ENV !== 'production' &&\n    el.attrsMap.checked != null) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" checked>:\\n\" +\n      \"inline checked attributes will be ignored when using v-model. \" +\n      'Declare initial values in the component\\'s data option instead.'\n    );\n  }\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (el.tag === 'input' && el.attrsMap.value) {\n      warn$3(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" value=\\\"\" + (el.attrsMap.value) + \"\\\">:\\n\" +\n        'inline value attributes will be ignored when using v-model. ' +\n        'Declare initial values in the component\\'s data option instead.'\n      );\n    }\n    if (el.tag === 'textarea' && el.children.length) {\n      warn$3(\n        \"<textarea v-model=\\\"\" + value + \"\\\">:\\n\" +\n        'inline content inside <textarea> will be ignored when using v-model. ' +\n        'Declare initial values in the component\\'s data option instead.'\n      );\n    }\n  }\n\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var event = lazy || (isIE && type === 'range') ? 'change' : 'input';\n  var needCompositionGuard = !lazy && type !== 'range';\n  var isNative = el.tag === 'input' || el.tag === 'textarea';\n\n  var valueExpression = isNative\n    ? (\"$event.target.value\" + (trim ? '.trim()' : ''))\n    : trim ? \"(typeof $event === 'string' ? $event.trim() : $event)\" : \"$event\";\n  valueExpression = number || type === 'number'\n    ? (\"_n(\" + valueExpression + \")\")\n    : valueExpression;\n  var code = genAssignmentCode(value, valueExpression);\n  if (isNative && needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n  // inputs with type=\"file\" are read only and setting the input's\n  // value will throw an error.\n  if (process.env.NODE_ENV !== 'production' &&\n      type === 'file') {\n    warn$3(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n      \"File inputs are read only. Use a v-on:change listener instead.\"\n    );\n  }\n  addProp(el, 'value', isNative ? (\"_s(\" + value + \")\") : (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    el.children.some(checkOptionWarning);\n  }\n\n  var number = modifiers && modifiers.number;\n  var assignment = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\" +\n    (el.attrsMap.multiple == null ? '[0]' : '');\n\n  var code = genAssignmentCode(value, assignment);\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction checkOptionWarning (option) {\n  if (option.type === 1 &&\n    option.tag === 'option' &&\n    option.attrsMap.selected != null) {\n    warn$3(\n      \"<select v-model=\\\"\" + (option.parent.attrsMap['v-model']) + \"\\\">:\\n\" +\n      'inline selected attributes on <option> will be ignored when using v-model. ' +\n      'Declare initial values in the component\\'s data option instead.'\n    );\n    return true\n  }\n  return false\n}\n\nfunction genAssignmentCode (value, assignment) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model$1,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar cache = Object.create(null);\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  staticKeys: genStaticKeys(modules$1),\n  directives: directives$1,\n  isReservedTag: isReservedTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  getTagNamespace: getTagNamespace,\n  isPreTag: isPreTag\n};\n\nfunction compile$$1 (\n  template,\n  options\n) {\n  options = options\n    ? extend(extend({}, baseOptions), options)\n    : baseOptions;\n  return compile$1(template, options)\n}\n\nfunction compileToFunctions (\n  template,\n  options,\n  vm\n) {\n  var _warn = (options && options.warn) || warn;\n  // detect possible CSP restriction\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      new Function('return 1');\n    } catch (e) {\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        _warn(\n          'It seems you are using the standalone build of Vue.js in an ' +\n          'environment with Content Security Policy that prohibits unsafe-eval. ' +\n          'The template compiler cannot work in this environment. Consider ' +\n          'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n          'templates into render functions.'\n        );\n      }\n    }\n  }\n  var key = options && options.delimiters\n    ? String(options.delimiters) + template\n    : template;\n  if (cache[key]) {\n    return cache[key]\n  }\n  var res = {};\n  var compiled = compile$$1(template, options);\n  res.render = makeFunction(compiled.render);\n  var l = compiled.staticRenderFns.length;\n  res.staticRenderFns = new Array(l);\n  for (var i = 0; i < l; i++) {\n    res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i]);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (res.render === noop || res.staticRenderFns.some(function (fn) { return fn === noop; })) {\n      _warn(\n        \"failed to compile template:\\n\\n\" + template + \"\\n\\n\" +\n        detectErrors(compiled.ast).join('\\n') +\n        '\\n\\n',\n        vm\n      );\n    }\n  }\n  return (cache[key] = res)\n}\n\nfunction makeFunction (code) {\n  try {\n    return new Function(code)\n  } catch (e) {\n    return noop\n  }\n}\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      var ref = compileToFunctions(template, {\n        warn: warn,\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nmodule.exports = Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.common.js\n// module id = 58\n// module chunks = 2","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vuvuzela/index.js\n// module id = 59\n// module chunks = 2","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 60\n// module chunks = 2","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/addStyles.js\n// module id = 61\n// module chunks = 2"],"sourceRoot":""}